{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment UCO-DWM-1001  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
v1.0.0 \par
}}UCO-DWM-1001}
{\comment Generated by doxygen 1.11.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt UCO-DWM-1001}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version v1.0.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b QCP} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAFDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPAxisPainterPrivate::CachedLabel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLabelPainterPrivate::CachedLabel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLabelPainterPrivate::LabelData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAbstractPaintBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPPaintBufferPixmap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAxisPainterPrivate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAxisTicker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPAxisTickerDateTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAxisTickerFixed\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAxisTickerLog\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAxisTickerPi\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAxisTickerText\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAxisTickerTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPBarsData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPColorGradient\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPColorMapData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPCurveData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPDataContainer< DataType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPDataRange\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPDataSelection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPErrorBarsData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPFinancialData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPGraphData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemAnchor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPItemPosition\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPLabelPainterPrivate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLineEnding\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPPlottableInterface1D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADND \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPAbstractPlottable1D< QCPBarsData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPBars\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAbstractPlottable1D< QCPCurveData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPCurve\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAbstractPlottable1D< QCPFinancialData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPFinancial\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAbstractPlottable1D< QCPGraphData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPGraph\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAbstractPlottable1D< QCPStatisticalBoxData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPStatisticalBox\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAbstractPlottable1D< DataType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPErrorBars\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPRange\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPScatterStyle\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPSelectionDecorator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPSelectionDecoratorBracket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPStatisticalBoxData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPVector2D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QDialog
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Dialog_about\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_alarm_dist\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_alarm_pos\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_csv\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_deviceconfig\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_dist_graph_config\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_graph_history\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_mediafilter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_pos_graph_config\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Dialog_stats\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QMainWindow
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MainWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QObject
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPBarsGroup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLayerable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPAbstractItem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPItemBracket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemCurve\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemEllipse\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemLine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemPixmap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemRect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemStraightLine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemText\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPItemTracer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAbstractPlottable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPAbstractPlottable1D< QCPBarsData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAbstractPlottable1D< QCPCurveData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAbstractPlottable1D< QCPFinancialData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAbstractPlottable1D< QCPGraphData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAbstractPlottable1D< QCPStatisticalBoxData >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPAbstractPlottable1D< DataType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPColorMap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPErrorBars\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAxis\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLayoutElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPAbstractLegendItem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPPlottableLegendItem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPPolarLegendItem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAxisRect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAP \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPColorScaleAxisRectPrivate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPColorScale\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPLayout\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPLayoutGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPLegend\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPLayoutInset\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPPolarAxisAngular\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPTextElement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPPolarAxisRadial\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPPolarGraph\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPPolarGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
QCPSelectionRect\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPMarginGroup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QPainter
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCPPainter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADME \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QPlainTextEdit
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Console\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QWidget
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
QCustomPlot\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
QCPAxisPainterPrivate::TickLabelData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b QCPAxisPainterPrivate::CachedLabel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLabelPainterPrivate::CachedLabel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Console} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_about} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_alarm_dist} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_alarm_pos} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_csv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_deviceconfig} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_dist_graph_config} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_graph_history} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_mediafilter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_pos_graph_config} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Dialog_stats} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLabelPainterPrivate::LabelData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MainWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAbstractItem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAbstractLegendItem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAbstractPaintBuffer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAbstractPlottable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAbstractPlottable1D< DataType >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A template base class for plottables with one-dimensional data })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxis} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisPainterPrivate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisRect} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTicker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTickerDateTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTickerFixed} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTickerLog} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTickerPi} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTickerText} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisTickerTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPBars} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPBarsData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPBarsGroup} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPColorGradient} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPColorMap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPColorMapData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPColorScale} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPColorScaleAxisRectPrivate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPCurve} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPCurveData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPDataContainer< DataType >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic data container for one-dimensional plottables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPDataRange} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPDataSelection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPErrorBars} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPErrorBarsData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPFinancial} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPFinancialData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPGraph} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPGraphData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPGrid} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemAnchor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemBracket} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemCurve} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemEllipse} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemLine} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemPixmap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemPosition} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACNK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemRect} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemStraightLine} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemText} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPItemTracer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLabelPainterPrivate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLayerable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLayout} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLayoutElement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLayoutGrid} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLayoutInset} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLegend} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPLineEnding} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPMarginGroup} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPaintBufferPixmap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPainter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADME \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPlottableInterface1D} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines an abstract interface for one-dimensional plottables })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPlottableLegendItem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPolarAxisAngular} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADNM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPolarAxisRadial} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPolarGraph} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAECL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPolarGrid} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEFQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPPolarLegendItem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPRange} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPScatterStyle} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEIS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPSelectionDecorator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPSelectionDecoratorBracket} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAELY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPSelectionRect} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAENF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPStatisticalBox} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPStatisticalBoxData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPTextElement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAEQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPVector2D} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAERN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCustomPlot} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAESW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b QCPAxisPainterPrivate::TickLabelData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b console.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_about.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_alarm_dist.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_alarm_pos.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_csv.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_deviceconfig.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_dist_graph_config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_graph_history.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_mediafilter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_pos_graph_config.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_stats.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b mainwindow.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCP Namespace Reference\par \pard\plain 
{\tc\tcl2 \v QCP}
{\xe \v QCP}
{\bkmkstart AAAAAAAFAO}
{\bkmkend AAAAAAAFAO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ResolutionUnit} \{ {\b ruDotsPerMeter}
, {\b ruDotsPerCentimeter}
, {\b ruDotsPerInch}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ExportPen} \{ {\b epNoCosmetic}
, {\b epAllowCosmetic}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SignDomain} \{ {\b sdNegative}
, {\b sdBoth}
, {\b sdPositive}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MarginSide} \{ {\b msLeft} = 0x01
, {\b msRight} = 0x02
, {\b msTop} = 0x04
, {\b msBottom} = 0x08
, {\b msAll} = 0xFF
, {\b msNone} = 0x00
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AntialiasedElement} \{ {\b aeAxes} = 0x0001
, {\b aeGrid} = 0x0002
, {\b aeSubGrid} = 0x0004
, {\b aeLegend} = 0x0008
, {\b aeLegendItems} = 0x0010
, {\b aePlottables} = 0x0020
, {\b aeItems} = 0x0040
, {\b aeScatters} = 0x0080
, {\b aeFills} = 0x0100
, {\b aeZeroLine} = 0x0200
, {\b aeOther} = 0x8000
, {\b aeAll} = 0xFFFF
, {\b aeNone} = 0x0000
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PlottingHint} \{ {\b phNone} = 0x000
, {\b phFastPolylines} = 0x001
, {\b phImmediateRefresh} = 0x002
, {\b phCacheLabels} = 0x004
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Interaction} \{ {\b iNone} = 0x000
, {\b iRangeDrag} = 0x001
, {\b iRangeZoom} = 0x002
, {\b iMultiSelect} = 0x004
, {\b iSelectPlottables} = 0x008
, {\b iSelectAxes} = 0x010
, {\b iSelectLegend} = 0x020
, {\b iSelectItems} = 0x040
, {\b iSelectOther} = 0x080
, {\b iSelectPlottablesBeyondAxisRect} = 0x100
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectionRectMode} \{ {\b srmNone}
, {\b srmZoom}
, {\b srmSelect}
, {\b srmCustom}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectionType} \{ {\b stNone}
, {\b stWhole}
, {\b stSingleData}
, {\b stDataRange}
, {\b stMultipleDataRanges}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isInvalidData} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isInvalidData} (double value1, double value2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginValue} (QMargins &margins, {\b QCP::MarginSide} side, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getMarginValue} (const QMargins &margins, {\b QCP::MarginSide} side)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QMetaObject {\b staticMetaObject}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The {\b QCP} Namespace contains general enums, QFlags and functions used throughout the {\b QCustomPlot} library.\par
It provides QMetaObject-based reflection of its enums and flags via {\i {\b QCP::staticMetaObject}} . \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v AntialiasedElement\:QCP}
{\xe \v QCP\:AntialiasedElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::AntialiasedElement}}}
\par
{\bkmkstart AAAAAAAFAP}
{\bkmkend AAAAAAAFAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines what objects of a plot can be forcibly drawn antialiased/not antialiased. If an object is neither forcibly drawn antialiased nor forcibly drawn not antialiased, it is up to the respective element how it is drawn. Typically it provides a {\i setAntialiased}  function for this.\par
{\f2 AntialiasedElements}  is a flag of or-combined elements of this enum type.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCustomPlot::setAntialiasedElements}, {\b QCustomPlot::setNotAntialiasedElements} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v aeAxes\:QCP}
{\xe \v QCP\:aeAxes}
{\qr aeAxes{\bkmkstart AAAAAAAFAQ}
{\bkmkend AAAAAAAFAQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0001}  Axis base line and tick marks \par
}\cell }{\row }
{\xe \v aeGrid\:QCP}
{\xe \v QCP\:aeGrid}
{\qr aeGrid{\bkmkstart AAAAAAAFAR}
{\bkmkend AAAAAAAFAR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0002}  Grid lines \par
}\cell }{\row }
{\xe \v aeSubGrid\:QCP}
{\xe \v QCP\:aeSubGrid}
{\qr aeSubGrid{\bkmkstart AAAAAAAFAS}
{\bkmkend AAAAAAAFAS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0004}  Sub grid lines \par
}\cell }{\row }
{\xe \v aeLegend\:QCP}
{\xe \v QCP\:aeLegend}
{\qr aeLegend{\bkmkstart AAAAAAAFAT}
{\bkmkend AAAAAAAFAT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0008}  Legend box \par
}\cell }{\row }
{\xe \v aeLegendItems\:QCP}
{\xe \v QCP\:aeLegendItems}
{\qr aeLegendItems{\bkmkstart AAAAAAAFAU}
{\bkmkend AAAAAAAFAU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0010}  Legend items \par
}\cell }{\row }
{\xe \v aePlottables\:QCP}
{\xe \v QCP\:aePlottables}
{\qr aePlottables{\bkmkstart AAAAAAAFAV}
{\bkmkend AAAAAAAFAV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0020}  Main lines of plottables \par
}\cell }{\row }
{\xe \v aeItems\:QCP}
{\xe \v QCP\:aeItems}
{\qr aeItems{\bkmkstart AAAAAAAFAW}
{\bkmkend AAAAAAAFAW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0040}  Main lines of items \par
}\cell }{\row }
{\xe \v aeScatters\:QCP}
{\xe \v QCP\:aeScatters}
{\qr aeScatters{\bkmkstart AAAAAAAFAX}
{\bkmkend AAAAAAAFAX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0080}  Scatter symbols of plottables (excluding scatter symbols of type ssPixmap) \par
}\cell }{\row }
{\xe \v aeFills\:QCP}
{\xe \v QCP\:aeFills}
{\qr aeFills{\bkmkstart AAAAAAAFAY}
{\bkmkend AAAAAAAFAY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0100}  Borders of fills (e.g. under or between graphs) \par
}\cell }{\row }
{\xe \v aeZeroLine\:QCP}
{\xe \v QCP\:aeZeroLine}
{\qr aeZeroLine{\bkmkstart AAAAAAAFAZ}
{\bkmkend AAAAAAAFAZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0200}  Zero-lines, see {\b QCPGrid::setZeroLinePen} \par
}\cell }{\row }
{\xe \v aeOther\:QCP}
{\xe \v QCP\:aeOther}
{\qr aeOther{\bkmkstart AAAAAAAFBA}
{\bkmkend AAAAAAAFBA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x8000}  Other elements that don't fit into any of the existing categories \par
}\cell }{\row }
{\xe \v aeAll\:QCP}
{\xe \v QCP\:aeAll}
{\qr aeAll{\bkmkstart AAAAAAAFBB}
{\bkmkend AAAAAAAFBB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0xFFFF}  All elements \par
}\cell }{\row }
{\xe \v aeNone\:QCP}
{\xe \v QCP\:aeNone}
{\qr aeNone{\bkmkstart AAAAAAAFBC}
{\bkmkend AAAAAAAFBC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x0000}  No elements \par
}\cell }{\row }
}
}
{\xe \v ExportPen\:QCP}
{\xe \v QCP\:ExportPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::ExportPen}}}
\par
{\bkmkstart AAAAAAAFBD}
{\bkmkend AAAAAAAFBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how cosmetic pens (pens with numerical width 0) are handled during export.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCustomPlot::savePdf} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v epNoCosmetic\:QCP}
{\xe \v QCP\:epNoCosmetic}
{\qr epNoCosmetic{\bkmkstart AAAAAAAFBE}
{\bkmkend AAAAAAAFBE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosmetic pens are converted to pens with pixel width 1 when exporting. \par
}\cell }{\row }
{\xe \v epAllowCosmetic\:QCP}
{\xe \v QCP\:epAllowCosmetic}
{\qr epAllowCosmetic{\bkmkstart AAAAAAAFBF}
{\bkmkend AAAAAAAFBF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Cosmetic pens are exported normally (e.g. in PDF exports, cosmetic pens always appear as 1 pixel on screen, independent of viewer zoom level) \par
}\cell }{\row }
}
}
{\xe \v Interaction\:QCP}
{\xe \v QCP\:Interaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::Interaction}}}
\par
{\bkmkstart AAAAAAAFBG}
{\bkmkend AAAAAAAFBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the mouse interactions possible with {\b QCustomPlot}.\par
{\f2 Interactions}  is a flag of or-combined elements of this enum type.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCustomPlot::setInteractions} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v iNone\:QCP}
{\xe \v QCP\:iNone}
{\qr iNone{\bkmkstart AAAAAAAFBH}
{\bkmkend AAAAAAAFBH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x000}  None of the interactions are possible \par
}\cell }{\row }
{\xe \v iRangeDrag\:QCP}
{\xe \v QCP\:iRangeDrag}
{\qr iRangeDrag{\bkmkstart AAAAAAAFBI}
{\bkmkend AAAAAAAFBI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x001}  Axis ranges are draggable (see {\b QCPAxisRect::setRangeDrag}, {\b QCPAxisRect::setRangeDragAxes}) \par
}\cell }{\row }
{\xe \v iRangeZoom\:QCP}
{\xe \v QCP\:iRangeZoom}
{\qr iRangeZoom{\bkmkstart AAAAAAAFBJ}
{\bkmkend AAAAAAAFBJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x002}  Axis ranges are zoomable with the mouse wheel (see {\b QCPAxisRect::setRangeZoom}, {\b QCPAxisRect::setRangeZoomAxes}) \par
}\cell }{\row }
{\xe \v iMultiSelect\:QCP}
{\xe \v QCP\:iMultiSelect}
{\qr iMultiSelect{\bkmkstart AAAAAAAFBK}
{\bkmkend AAAAAAAFBK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x004}  The user can select multiple objects by holding the modifier set by {\b QCustomPlot::setMultiSelectModifier} while clicking \par
}\cell }{\row }
{\xe \v iSelectPlottables\:QCP}
{\xe \v QCP\:iSelectPlottables}
{\qr iSelectPlottables{\bkmkstart AAAAAAAFBL}
{\bkmkend AAAAAAAFBL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x008}  Plottables are selectable (e.g. graphs, curves, bars,... see {\b QCPAbstractPlottable}) \par
}\cell }{\row }
{\xe \v iSelectAxes\:QCP}
{\xe \v QCP\:iSelectAxes}
{\qr iSelectAxes{\bkmkstart AAAAAAAFBM}
{\bkmkend AAAAAAAFBM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x010}  Axes are selectable (or parts of them, see {\b QCPAxis::setSelectableParts}) \par
}\cell }{\row }
{\xe \v iSelectLegend\:QCP}
{\xe \v QCP\:iSelectLegend}
{\qr iSelectLegend{\bkmkstart AAAAAAAFBN}
{\bkmkend AAAAAAAFBN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x020}  Legends are selectable (or their child items, see {\b QCPLegend::setSelectableParts}) \par
}\cell }{\row }
{\xe \v iSelectItems\:QCP}
{\xe \v QCP\:iSelectItems}
{\qr iSelectItems{\bkmkstart AAAAAAAFBO}
{\bkmkend AAAAAAAFBO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x040}  Items are selectable (Rectangles, Arrows, Textitems, etc. see {\b QCPAbstractItem}) \par
}\cell }{\row }
{\xe \v iSelectOther\:QCP}
{\xe \v QCP\:iSelectOther}
{\qr iSelectOther{\bkmkstart AAAAAAAFBP}
{\bkmkend AAAAAAAFBP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x080}  All other objects are selectable (e.g. your own derived layerables, other layout elements,...) \par
}\cell }{\row }
{\xe \v iSelectPlottablesBeyondAxisRect\:QCP}
{\xe \v QCP\:iSelectPlottablesBeyondAxisRect}
{\qr iSelectPlottablesBeyondAxisRect{\bkmkstart AAAAAAAFBQ}
{\bkmkend AAAAAAAFBQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x100}  When performing plottable selection/hit tests, this flag extends the sensitive area beyond the axis rect \par
}\cell }{\row }
}
}
{\xe \v MarginSide\:QCP}
{\xe \v QCP\:MarginSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::MarginSide}}}
\par
{\bkmkstart AAAAAAAFBR}
{\bkmkend AAAAAAAFBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the sides of a rectangular entity to which margins can be applied.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPLayoutElement::setAutoMargins}, {\b QCPAxisRect::setAutoMargins} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v msLeft\:QCP}
{\xe \v QCP\:msLeft}
{\qr msLeft{\bkmkstart AAAAAAAFBS}
{\bkmkend AAAAAAAFBS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x01}  left margin \par
}\cell }{\row }
{\xe \v msRight\:QCP}
{\xe \v QCP\:msRight}
{\qr msRight{\bkmkstart AAAAAAAFBT}
{\bkmkend AAAAAAAFBT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x02}  right margin \par
}\cell }{\row }
{\xe \v msTop\:QCP}
{\xe \v QCP\:msTop}
{\qr msTop{\bkmkstart AAAAAAAFBU}
{\bkmkend AAAAAAAFBU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x04}  top margin \par
}\cell }{\row }
{\xe \v msBottom\:QCP}
{\xe \v QCP\:msBottom}
{\qr msBottom{\bkmkstart AAAAAAAFBV}
{\bkmkend AAAAAAAFBV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x08}  bottom margin \par
}\cell }{\row }
{\xe \v msAll\:QCP}
{\xe \v QCP\:msAll}
{\qr msAll{\bkmkstart AAAAAAAFBW}
{\bkmkend AAAAAAAFBW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0xFF}  all margins \par
}\cell }{\row }
{\xe \v msNone\:QCP}
{\xe \v QCP\:msNone}
{\qr msNone{\bkmkstart AAAAAAAFBX}
{\bkmkend AAAAAAAFBX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x00}  no margin \par
}\cell }{\row }
}
}
{\xe \v PlottingHint\:QCP}
{\xe \v QCP\:PlottingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::PlottingHint}}}
\par
{\bkmkstart AAAAAAAFBY}
{\bkmkend AAAAAAAFBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines plotting hints that control various aspects of the quality and speed of plotting.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCustomPlot::setPlottingHints} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v phNone\:QCP}
{\xe \v QCP\:phNone}
{\qr phNone{\bkmkstart AAAAAAAFBZ}
{\bkmkend AAAAAAAFBZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x000}  No hints are set \par
}\cell }{\row }
{\xe \v phFastPolylines\:QCP}
{\xe \v QCP\:phFastPolylines}
{\qr phFastPolylines{\bkmkstart AAAAAAAFCA}
{\bkmkend AAAAAAAFCA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x001}  Graph/Curve lines are drawn with a faster method. This reduces the quality especially of the line segment joins, thus is most effective for pen sizes larger than 1. It is only used for solid line pens. \par
}\cell }{\row }
{\xe \v phImmediateRefresh\:QCP}
{\xe \v QCP\:phImmediateRefresh}
{\qr phImmediateRefresh{\bkmkstart AAAAAAAFCB}
{\bkmkend AAAAAAAFCB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x002}  causes an immediate repaint() instead of a soft update() when {\b QCustomPlot::replot()} is called with parameter {\b QCustomPlot::rpRefreshHint}. This is set by default to prevent the plot from freezing on fast consecutive replots (e.g. user drags ranges with mouse). \par
}\cell }{\row }
{\xe \v phCacheLabels\:QCP}
{\xe \v QCP\:phCacheLabels}
{\qr phCacheLabels{\bkmkstart AAAAAAAFCC}
{\bkmkend AAAAAAAFCC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x004}  axis (tick) labels will be cached as pixmaps, increasing replot performance. \par
}\cell }{\row }
}
}
{\xe \v ResolutionUnit\:QCP}
{\xe \v QCP\:ResolutionUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::ResolutionUnit}}}
\par
{\bkmkstart AAAAAAAFCD}
{\bkmkend AAAAAAAFCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the different units in which the image resolution can be specified in the export functions.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCustomPlot::savePng}, {\b QCustomPlot::saveJpg}, {\b QCustomPlot::saveBmp}, {\b QCustomPlot::saveRastered} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ruDotsPerMeter\:QCP}
{\xe \v QCP\:ruDotsPerMeter}
{\qr ruDotsPerMeter{\bkmkstart AAAAAAAFCE}
{\bkmkend AAAAAAAFCE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resolution is given in dots per meter (dpm) \par
}\cell }{\row }
{\xe \v ruDotsPerCentimeter\:QCP}
{\xe \v QCP\:ruDotsPerCentimeter}
{\qr ruDotsPerCentimeter{\bkmkstart AAAAAAAFCF}
{\bkmkend AAAAAAAFCF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resolution is given in dots per centimeter (dpcm) \par
}\cell }{\row }
{\xe \v ruDotsPerInch\:QCP}
{\xe \v QCP\:ruDotsPerInch}
{\qr ruDotsPerInch{\bkmkstart AAAAAAAFCG}
{\bkmkend AAAAAAAFCG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resolution is given in dots per inch (DPI/PPI) \par
}\cell }{\row }
}
}
{\xe \v SelectionRectMode\:QCP}
{\xe \v QCP\:SelectionRectMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::SelectionRectMode}}}
\par
{\bkmkstart AAAAAAAFCH}
{\bkmkend AAAAAAAFCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the behaviour of the selection rect.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCustomPlot::setSelectionRectMode}, {\b QCustomPlot::selectionRect}, {\b QCPSelectionRect} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v srmNone\:QCP}
{\xe \v QCP\:srmNone}
{\qr srmNone{\bkmkstart AAAAAAAFCI}
{\bkmkend AAAAAAAFCI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The selection rect is disabled, and all mouse events are forwarded to the underlying objects, e.g. for axis range dragging. \par
}\cell }{\row }
{\xe \v srmZoom\:QCP}
{\xe \v QCP\:srmZoom}
{\qr srmZoom{\bkmkstart AAAAAAAFCJ}
{\bkmkend AAAAAAAFCJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When dragging the mouse, a selection rect becomes active. Upon releasing, the axes that are currently set as range zoom axes ({\b QCPAxisRect::setRangeZoomAxes}) will have their ranges zoomed accordingly. \par
}\cell }{\row }
{\xe \v srmSelect\:QCP}
{\xe \v QCP\:srmSelect}
{\qr srmSelect{\bkmkstart AAAAAAAFCK}
{\bkmkend AAAAAAAFCK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When dragging the mouse, a selection rect becomes active. Upon releasing, plottable data points that were within the selection rect are selected, if the plottable's selectability setting permits. (See data selection mechanism for details.) \par
}\cell }{\row }
{\xe \v srmCustom\:QCP}
{\xe \v QCP\:srmCustom}
{\qr srmCustom{\bkmkstart AAAAAAAFCL}
{\bkmkend AAAAAAAFCL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
When dragging the mouse, a selection rect becomes active. It is the programmer's responsibility to connect according slots to the selection rect's signals (e.g. {\b QCPSelectionRect::accepted}) in order to process the user interaction. \par
}\cell }{\row }
}
}
{\xe \v SelectionType\:QCP}
{\xe \v QCP\:SelectionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::SelectionType}}}
\par
{\bkmkstart AAAAAAAFCM}
{\bkmkend AAAAAAAFCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the different ways a plottable can be selected. These images show the effect of the different selection types, when the indicated selection rect was dragged:\par
{\qc  \par
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx1749
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx3498
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5247
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx6996
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8745
\pard \widctlpar\intbl\adjustright
{ \cell }{ \cell }{ \cell }{ \cell }{  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
} \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPAbstractPlottable::setSelectable}, {\b QCPDataSelection::enforceType} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v stNone\:QCP}
{\xe \v QCP\:stNone}
{\qr stNone{\bkmkstart AAAAAAAFCN}
{\bkmkend AAAAAAAFCN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The plottable is not selectable. \par
}\cell }{\row }
{\xe \v stWhole\:QCP}
{\xe \v QCP\:stWhole}
{\qr stWhole{\bkmkstart AAAAAAAFCO}
{\bkmkend AAAAAAAFCO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Selection behaves like {\b stMultipleDataRanges}, but if there are any data points selected, the entire plottable is drawn as selected. \par
}\cell }{\row }
{\xe \v stSingleData\:QCP}
{\xe \v QCP\:stSingleData}
{\qr stSingleData{\bkmkstart AAAAAAAFCP}
{\bkmkend AAAAAAAFCP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
One individual data point can be selected at a time. \par
}\cell }{\row }
{\xe \v stDataRange\:QCP}
{\xe \v QCP\:stDataRange}
{\qr stDataRange{\bkmkstart AAAAAAAFCQ}
{\bkmkend AAAAAAAFCQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiple contiguous data points (a data range) can be selected. \par
}\cell }{\row }
{\xe \v stMultipleDataRanges\:QCP}
{\xe \v QCP\:stMultipleDataRanges}
{\qr stMultipleDataRanges{\bkmkstart AAAAAAAFCR}
{\bkmkend AAAAAAAFCR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Any combination of data points/ranges can be selected. \par
}\cell }{\row }
}
}
{\xe \v SignDomain\:QCP}
{\xe \v QCP\:SignDomain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCP::SignDomain}}}
\par
{\bkmkstart AAAAAAAFCS}
{\bkmkend AAAAAAAFCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents negative and positive sign domain, e.g. for passing to {\b QCPAbstractPlottable::getKeyRange} and {\b QCPAbstractPlottable::getValueRange}.\par
This is primarily needed when working with logarithmic axis scales, since only one of the sign domains can be visible at a time. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v sdNegative\:QCP}
{\xe \v QCP\:sdNegative}
{\qr sdNegative{\bkmkstart AAAAAAAFCT}
{\bkmkend AAAAAAAFCT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The negative sign domain, i.e. numbers smaller than zero. \par
}\cell }{\row }
{\xe \v sdBoth\:QCP}
{\xe \v QCP\:sdBoth}
{\qr sdBoth{\bkmkstart AAAAAAAFCU}
{\bkmkend AAAAAAAFCU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Both sign domains, including zero, i.e. all numbers. \par
}\cell }{\row }
{\xe \v sdPositive\:QCP}
{\xe \v QCP\:sdPositive}
{\qr sdPositive{\bkmkstart AAAAAAAFCV}
{\bkmkend AAAAAAAFCV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The positive sign domain, i.e. numbers greater than zero. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getMarginValue\:QCP}
{\xe \v QCP\:getMarginValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCP::getMarginValue (const QMargins & margins, {\b QCP::MarginSide} side){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCW}
{\bkmkend AAAAAAAFCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isInvalidData\:QCP}
{\xe \v QCP\:isInvalidData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCP::isInvalidData (double value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCX}
{\bkmkend AAAAAAAFCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isInvalidData\:QCP}
{\xe \v QCP\:isInvalidData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCP::isInvalidData (double value1, double value2){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCY}
{\bkmkend AAAAAAAFCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMarginValue\:QCP}
{\xe \v QCP\:setMarginValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCP::setMarginValue (QMargins & margins, {\b QCP::MarginSide} side, int value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAFCZ}
{\bkmkend AAAAAAAFCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v staticMetaObject\:QCP}
{\xe \v QCP\:staticMetaObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QMetaObject QCP::staticMetaObject{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAFDA}
{\bkmkend AAAAAAAFDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ui Namespace Reference\par \pard\plain 
{\tc\tcl2 \v Ui}
{\xe \v Ui}
{\bkmkstart AAAAAAAFDB}
{\bkmkend AAAAAAAFDB}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
** UCO DWM-GUI, a software for the control of the DWM1001-DEV board ** Copyright (C) 2024 Antonio Ruiz Ruiz ** ** This program is free software: you can redistribute it and/or modify ** it under the terms of the GNU General Public License as published by ** the Free Software Foundation, either version 3 of the License, or any ** later version. ** ** This program is distributed in the hope that it will be useful, ** but WITHOUT ANY WARRANTY; without even the implied warranty of ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the ** GNU General Public License for more details. ** ** You should have received a copy of the GNU General Public License ** along with this program. If not, see {\f2 https://www.gnu.org/licenses/}. ** **\par
Author: Antonio Ruiz Ruiz ** Contact: {\f2 antonioruizrruiz@gmail.com} ** Date: 29.04.24 ** Version: 1.0.0 ** \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisPainterPrivate::CachedLabel Struct Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisPainterPrivate::CachedLabel}
{\xe \v QCPAxisPainterPrivate::CachedLabel}
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b pixmap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v offset\:QCPAxisPainterPrivate::CachedLabel}
{\xe \v QCPAxisPainterPrivate::CachedLabel\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPAxisPainterPrivate::CachedLabel::offset}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixmap\:QCPAxisPainterPrivate::CachedLabel}
{\xe \v QCPAxisPainterPrivate::CachedLabel\:pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPAxisPainterPrivate::CachedLabel::pixmap}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLabelPainterPrivate::CachedLabel Struct Reference\par \pard\plain 
{\tc\tcl2 \v QCPLabelPainterPrivate::CachedLabel}
{\xe \v QCPLabelPainterPrivate::CachedLabel}
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b pixmap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v offset\:QCPLabelPainterPrivate::CachedLabel}
{\xe \v QCPLabelPainterPrivate::CachedLabel\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPLabelPainterPrivate::CachedLabel::offset}}
\par
{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixmap\:QCPLabelPainterPrivate::CachedLabel}
{\xe \v QCPLabelPainterPrivate::CachedLabel\:pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPLabelPainterPrivate::CachedLabel::pixmap}}
\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Console Class Reference\par \pard\plain 
{\tc\tcl2 \v Console}
{\xe \v Console}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
{\f2 #include <console.h>}}\par
Inheritance diagram for Console:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_console.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getData} (const QByteArray &data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Console} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b putData} (const QByteArray &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLocalEchoEnabled} (bool set)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b keyPressEvent} (QKeyEvent *e) override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mousePressEvent} (QMouseEvent *e) override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseDoubleClickEvent} (QMouseEvent *e) override\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b contextMenuEvent} (QContextMenuEvent *e) override\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
** UCO DWM-GUI, a software for the control of the DWM1001-DEV board ** Copyright (C) 2024 Antonio Ruiz Ruiz ** ** This program is free software: you can redistribute it and/or modify ** it under the terms of the GNU General Public License as published by ** the Free Software Foundation, either version 3 of the License, or any ** later version. ** ** This program is distributed in the hope that it will be useful, ** but WITHOUT ANY WARRANTY; without even the implied warranty of ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the ** GNU General Public License for more details. ** ** You should have received a copy of the GNU General Public License ** along with this program. If not, see {\f2 https://www.gnu.org/licenses/}. ** **\par
Author: Antonio Ruiz Ruiz ** Contact: {\f2 antonioruizrruiz@gmail.com} ** Date: 29.04.24 ** Version: 1.0.0 ** \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Console\:Console}
{\xe \v Console\:Console}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Console::Console (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v contextMenuEvent\:Console}
{\xe \v Console\:contextMenuEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::contextMenuEvent (QContextMenuEvent * e){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getData\:Console}
{\xe \v Console\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::getData (const QByteArray & data){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keyPressEvent\:Console}
{\xe \v Console\:keyPressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::keyPressEvent (QKeyEvent * e){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseDoubleClickEvent\:Console}
{\xe \v Console\:mouseDoubleClickEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::mouseDoubleClickEvent (QMouseEvent * e){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mousePressEvent\:Console}
{\xe \v Console\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::mousePressEvent (QMouseEvent * e){\f2 [override]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v putData\:Console}
{\xe \v Console\:putData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::putData (const QByteArray & data)}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLocalEchoEnabled\:Console}
{\xe \v Console\:setLocalEchoEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Console::setLocalEchoEnabled (bool set)}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b console.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_about Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_about}
{\xe \v Dialog_about}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
{
{\f2 #include <dialog_about.h>}}\par
Inheritance diagram for Dialog_about:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__about.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_about} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_about} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_about\:Dialog_about}
{\xe \v Dialog_about\:Dialog_about}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_about::Dialog_about (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_about\:Dialog_about}
{\xe \v Dialog_about\:~Dialog_about}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_about::~Dialog_about ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_about.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_alarm_dist Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\par
{
{\f2 #include <dialog_alarm_dist.h>}}\par
Inheritance diagram for Dialog_alarm_dist:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__alarm__dist.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_alarm_dist} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_alarm_dist} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_alarm} (QList< float >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< float > {\b alarm_data} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_activation} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_on} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_alarm_dist\:Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist\:Dialog_alarm_dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_alarm_dist::Dialog_alarm_dist (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_alarm_dist\:Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist\:~Dialog_alarm_dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_alarm_dist::~Dialog_alarm_dist ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v alarm_activation\:Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist\:alarm_activation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_dist::alarm_activation ()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_data\:Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist\:alarm_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< float > Dialog_alarm_dist::alarm_data ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_alarm\:Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist\:load_data_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_alarm_dist::load_data_alarm (QList< float > )}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v alarm_on\:Dialog_alarm_dist}
{\xe \v Dialog_alarm_dist\:alarm_on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_dist::alarm_on =0}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_alarm_dist.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_alarm_pos Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\f2 #include <dialog_alarm_pos.h>}}\par
Inheritance diagram for Dialog_alarm_pos:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__alarm__pos.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_alarm_pos} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_alarm_pos} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_alarm} (QList< float >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< float > {\b alarm_data} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_activation} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_x_enabled} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_y_enabled} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_z_enabled} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_on} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_pos_on} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_x_ena} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_y_ena} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_z_ena} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_alarm_pos\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:Dialog_alarm_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_alarm_pos::Dialog_alarm_pos (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_alarm_pos\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:~Dialog_alarm_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_alarm_pos::~Dialog_alarm_pos ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v alarm_activation\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_activation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_activation ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_data\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< float > Dialog_alarm_pos::alarm_data ()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_x_enabled\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_x_enabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_x_enabled ()}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_y_enabled\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_y_enabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_y_enabled ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_z_enabled\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_z_enabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_z_enabled ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_alarm\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:load_data_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_alarm_pos::load_data_alarm (QList< float > )}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v alarm_on\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_on =0}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_pos_on\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_pos_on}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_pos_on =0}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_x_ena\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_x_ena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_x_ena =0}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_y_ena\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_y_ena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_y_ena =0}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alarm_z_ena\:Dialog_alarm_pos}
{\xe \v Dialog_alarm_pos\:alarm_z_ena}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_alarm_pos::alarm_z_ena =0}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_alarm_pos.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_csv Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_csv}
{\xe \v Dialog_csv}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
{
{\f2 #include <dialog_csv.h>}}\par
Inheritance diagram for Dialog_csv:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__csv.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_csv} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_csv} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b folder_filename_csv} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_csv\:Dialog_csv}
{\xe \v Dialog_csv\:Dialog_csv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_csv::Dialog_csv (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_csv\:Dialog_csv}
{\xe \v Dialog_csv\:~Dialog_csv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_csv::~Dialog_csv ()}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v folder_filename_csv\:Dialog_csv}
{\xe \v Dialog_csv\:folder_filename_csv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Dialog_csv::folder_filename_csv ()}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_csv.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_deviceconfig Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\par
{
{\f2 #include <dialog_deviceconfig.h>}}\par
Inheritance diagram for Dialog_deviceconfig:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__deviceconfig.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_deviceconfig} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_deviceconfig} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mode_processing} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b network_processing} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b func_mode} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b network}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_deviceconfig\:Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig\:Dialog_deviceconfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_deviceconfig::Dialog_deviceconfig (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_deviceconfig\:Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig\:~Dialog_deviceconfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_deviceconfig::~Dialog_deviceconfig ()}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v mode_processing\:Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig\:mode_processing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Dialog_deviceconfig::mode_processing ()}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v network_processing\:Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig\:network_processing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Dialog_deviceconfig::network_processing ()}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v func_mode\:Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig\:func_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Dialog_deviceconfig::func_mode =0}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v network\:Dialog_deviceconfig}
{\xe \v Dialog_deviceconfig\:network}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Dialog_deviceconfig::network}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_deviceconfig.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_dist_graph_config Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
{\f2 #include <dialog_dist_graph_config.h>}}\par
Inheritance diagram for Dialog_dist_graph_config:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__dist__graph__config.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_dist_graph_config} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_dist_graph_config} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< float > {\b graph_data} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data} (QList< float >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b autorange} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b autorange_var} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_dist_graph_config\:Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config\:Dialog_dist_graph_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_dist_graph_config::Dialog_dist_graph_config (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_dist_graph_config\:Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config\:~Dialog_dist_graph_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_dist_graph_config::~Dialog_dist_graph_config ()}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v autorange\:Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config\:autorange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_dist_graph_config::autorange ()}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graph_data\:Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config\:graph_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< float > Dialog_dist_graph_config::graph_data ()}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data\:Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config\:load_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_dist_graph_config::load_data (QList< float > )}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v autorange_var\:Dialog_dist_graph_config}
{\xe \v Dialog_dist_graph_config\:autorange_var}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_dist_graph_config::autorange_var =0}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_dist_graph_config.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_graph_history Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_graph_history}
{\xe \v Dialog_graph_history}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
{
{\f2 #include <dialog_graph_history.h>}}\par
Inheritance diagram for Dialog_graph_history:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__graph__history.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_graph_history} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_graph_history} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupRealtimeDataDemo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupRealtimeDataDemo3} (double, double, double, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_distances_1} (QList< double >, double, QString, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_distances_2} (QList< double >, double, QString, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_distances_3} (QList< double >, double, QString, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_distances_4} (QList< double >, double, QString, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_coordinates} (QList< double >, QList< double >, QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_anchors} (double, double, double, double, double, double, double, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b max_range_graph} (double, double, double, double, double, double, double, double)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b reset_variables} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_graph_history\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:Dialog_graph_history}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_graph_history::Dialog_graph_history (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_graph_history\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:~Dialog_graph_history}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_graph_history::~Dialog_graph_history ()}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v load_anchors\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:load_anchors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::load_anchors (double , double , double , double , double , double , double , double )}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_coordinates\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:load_coordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::load_coordinates (QList< double > , QList< double > , QList< double > )}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_distances_1\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:load_distances_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::load_distances_1 (QList< double > , double , QString , double )}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_distances_2\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:load_distances_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::load_distances_2 (QList< double > , double , QString , double )}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_distances_3\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:load_distances_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::load_distances_3 (QList< double > , double , QString , double )}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_distances_4\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:load_distances_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::load_distances_4 (QList< double > , double , QString , double )}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_range_graph\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:max_range_graph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::max_range_graph (double , double , double , double , double , double , double , double )}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reset_variables\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:reset_variables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_graph_history::reset_variables ()}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupRealtimeDataDemo\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:setupRealtimeDataDemo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::setupRealtimeDataDemo ()}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupRealtimeDataDemo3\:Dialog_graph_history}
{\xe \v Dialog_graph_history\:setupRealtimeDataDemo3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_graph_history::setupRealtimeDataDemo3 (double , double , double , double )}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_graph_history.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_mediafilter Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_mediafilter}
{\xe \v Dialog_mediafilter}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
\par
{
{\f2 #include <dialog_mediafilter.h>}}\par
Inheritance diagram for Dialog_mediafilter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__mediafilter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_mediafilter} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_mediafilter} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< float > {\b bufer_data} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b link_alarm} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b enable_mediafilter} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_bufer} (QList< float >)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm_linked} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b media_enabled} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_mediafilter\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:Dialog_mediafilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_mediafilter::Dialog_mediafilter (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_mediafilter\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:~Dialog_mediafilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_mediafilter::~Dialog_mediafilter ()}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v bufer_data\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:bufer_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< float > Dialog_mediafilter::bufer_data ()}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enable_mediafilter\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:enable_mediafilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_mediafilter::enable_mediafilter ()}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v link_alarm\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:link_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_mediafilter::link_alarm ()}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_bufer\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:load_data_bufer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_mediafilter::load_data_bufer (QList< float > )}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v alarm_linked\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:alarm_linked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_mediafilter::alarm_linked =0}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v media_enabled\:Dialog_mediafilter}
{\xe \v Dialog_mediafilter\:media_enabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_mediafilter::media_enabled =0}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_mediafilter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_pos_graph_config Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\par
{
{\f2 #include <dialog_pos_graph_config.h>}}\par
Inheritance diagram for Dialog_pos_graph_config:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__pos__graph__config.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_pos_graph_config} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_pos_graph_config} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b passive_mode} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< float > {\b anchor_data} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data} (QList< float >)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b passive} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_pos_graph_config\:Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config\:Dialog_pos_graph_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_pos_graph_config::Dialog_pos_graph_config (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_pos_graph_config\:Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config\:~Dialog_pos_graph_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_pos_graph_config::~Dialog_pos_graph_config ()}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchor_data\:Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config\:anchor_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< float > Dialog_pos_graph_config::anchor_data ()}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data\:Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config\:load_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_pos_graph_config::load_data (QList< float > )}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v passive_mode\:Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config\:passive_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_pos_graph_config::passive_mode ()}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v passive\:Dialog_pos_graph_config}
{\xe \v Dialog_pos_graph_config\:passive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_pos_graph_config::passive =0}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_pos_graph_config.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Dialog_stats Class Reference\par \pard\plain 
{\tc\tcl2 \v Dialog_stats}
{\xe \v Dialog_stats}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
{
{\f2 #include <dialog_stats.h>}}\par
Inheritance diagram for Dialog_stats:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dialog__stats.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialog_stats} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Dialog_stats} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_d1} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_d2} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_d3} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_d4} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_pos_x} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_pos_y} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_pos_z} (QList< double >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b load_data_statistics_ids} (QList< QString >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialise_variables} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b reset_variables} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b enable_data_saving} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b directory_folder_stat} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialog_stats\:Dialog_stats}
{\xe \v Dialog_stats\:Dialog_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_stats::Dialog_stats (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Dialog_stats\:Dialog_stats}
{\xe \v Dialog_stats\:~Dialog_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dialog_stats::~Dialog_stats ()}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v directory_folder_stat\:Dialog_stats}
{\xe \v Dialog_stats\:directory_folder_stat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString Dialog_stats::directory_folder_stat ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enable_data_saving\:Dialog_stats}
{\xe \v Dialog_stats\:enable_data_saving}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_stats::enable_data_saving ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialise_variables\:Dialog_stats}
{\xe \v Dialog_stats\:initialise_variables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::initialise_variables ()}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_d1\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_d1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_d1 (QList< double > )}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_d2\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_d2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_d2 (QList< double > )}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_d3\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_d3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_d3 (QList< double > )}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_d4\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_d4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_d4 (QList< double > )}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_ids\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_ids}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_ids (QList< QString > )}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_pos_x\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_pos_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_pos_x (QList< double > )}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_pos_y\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_pos_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_pos_y (QList< double > )}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v load_data_statistics_pos_z\:Dialog_stats}
{\xe \v Dialog_stats\:load_data_statistics_pos_z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Dialog_stats::load_data_statistics_pos_z (QList< double > )}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reset_variables\:Dialog_stats}
{\xe \v Dialog_stats\:reset_variables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Dialog_stats::reset_variables ()}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b dialog_stats.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLabelPainterPrivate::LabelData Struct Reference\par \pard\plain 
{\tc\tcl2 \v QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData}
{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorSide} {\b side}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QTransform {\b transform}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b basePart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b expPart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b suffixPart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b baseBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b expBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b suffixBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b totalBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rotatedTotalBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b baseFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b expFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b color}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v baseBounds\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:baseBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::LabelData::baseBounds}}
\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v baseFont\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:baseFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLabelPainterPrivate::LabelData::baseFont}}
\par
{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v basePart\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:basePart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPLabelPainterPrivate::LabelData::basePart}}
\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v color\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLabelPainterPrivate::LabelData::color}}
\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expBounds\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:expBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::LabelData::expBounds}}
\par
{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expFont\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:expFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLabelPainterPrivate::LabelData::expFont}}
\par
{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expPart\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:expPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPLabelPainterPrivate::LabelData::expPart}}
\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotatedTotalBounds\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:rotatedTotalBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::LabelData::rotatedTotalBounds}}
\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotation\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLabelPainterPrivate::LabelData::rotation}}
\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v side\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:side}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorSide} QCPLabelPainterPrivate::LabelData::side}}
\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v suffixBounds\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:suffixBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::LabelData::suffixBounds}}
\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v suffixPart\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:suffixPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPLabelPainterPrivate::LabelData::suffixPart}}
\par
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v totalBounds\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:totalBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::LabelData::totalBounds}}
\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transform\:QCPLabelPainterPrivate::LabelData}
{\xe \v QCPLabelPainterPrivate::LabelData\:transform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QTransform QCPLabelPainterPrivate::LabelData::transform}}
\par
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MainWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v MainWindow}
{\xe \v MainWindow}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
\par
{
{\f2 #include <mainwindow.h>}}\par
Inheritance diagram for MainWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_main_window.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MainWindow} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MainWindow} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupRealtimeDataDemo} ({\b QCustomPlot} *customPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupRealtimeDataDemo2} ({\b QCustomPlot} *customPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupRealtimeDataDemo3} ({\b QCustomPlot} *customPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b device_connection} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b device_disconnection} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b closeEvent} (QCloseEvent *event)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Slots\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b slotLanguageChanged} (QAction *action)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b changeEvent} (QEvent *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MainWindow\:MainWindow}
{\xe \v MainWindow\:MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::MainWindow (QWidget * parent = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~MainWindow\:MainWindow}
{\xe \v MainWindow\:~MainWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MainWindow::~MainWindow ()}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v changeEvent\:MainWindow}
{\xe \v MainWindow\:changeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::changeEvent (QEvent * ){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v closeEvent\:MainWindow}
{\xe \v MainWindow\:closeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::closeEvent (QCloseEvent * event)}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v device_connection\:MainWindow}
{\xe \v MainWindow\:device_connection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::device_connection ()}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v device_disconnection\:MainWindow}
{\xe \v MainWindow\:device_disconnection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::device_disconnection ()}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupRealtimeDataDemo\:MainWindow}
{\xe \v MainWindow\:setupRealtimeDataDemo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setupRealtimeDataDemo ({\b QCustomPlot} * customPlot)}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupRealtimeDataDemo2\:MainWindow}
{\xe \v MainWindow\:setupRealtimeDataDemo2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setupRealtimeDataDemo2 ({\b QCustomPlot} * customPlot)}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupRealtimeDataDemo3\:MainWindow}
{\xe \v MainWindow\:setupRealtimeDataDemo3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::setupRealtimeDataDemo3 ({\b QCustomPlot} * customPlot)}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v slotLanguageChanged\:MainWindow}
{\xe \v MainWindow\:slotLanguageChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MainWindow::slotLanguageChanged (QAction * action){\f2 [protected]}, {\f2 [slot]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b mainwindow.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAbstractItem Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAbstractItem}
{\xe \v QCPAbstractItem}
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAbstractItem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_abstract_item.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemAnchor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAbstractItem\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:QCPAbstractItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAbstractItem::QCPAbstractItem ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAbstractItem\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:~QCPAbstractItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAbstractItem::~QCPAbstractItem (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchor\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:anchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor} * QCPAbstractItem::anchor (const QString & name) const}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v anchorPixelPosition\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:anchorPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPAbstractItem::anchorPixelPosition (int anchorId) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPItemBracket} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemEllipse} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPItemText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v anchors\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:anchors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPItemAnchor} * > QCPAbstractItem::anchors () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractItem::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v clipAxisRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:clipAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisRect} * QCPAbstractItem::clipAxisRect () const}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clipRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:clipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QRect QCPAbstractItem::clipRect () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v clipToAxisRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:clipToAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::clipToAxisRect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createAnchor\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:createAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor} * QCPAbstractItem::createAnchor (const QString & name, int anchorId){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createPosition\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:createPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition} * QCPAbstractItem::createPosition (const QString & name){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractItem::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractItem::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b QCPItemBracket} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemEllipse} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemStraightLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPItemTracer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v hasAnchor\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:hasAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::hasAnchor (const QString & name) const}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition} * QCPAbstractItem::position (const QString & name) const}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v positions\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:positions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPItemPosition} * > QCPAbstractItem::positions () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rectDistance\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:rectDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAbstractItem::rectDistance (const QRectF & rect, const QPointF & pos, bool filledRect) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectable\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::selectable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractItem::selectableChanged (bool selectable){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selected\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::selected () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractItem::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionCategory\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPAbstractItem::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractItem::selectionChanged (bool selected){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAbstractItem::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b QCPItemBracket} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemEllipse} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemStraightLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPItemTracer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setClipAxisRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:setClipAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractItem::setClipAxisRect ({\b QCPAxisRect} * rect)}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setClipToAxisRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:setClipToAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractItem::setClipToAxisRect (bool clip)}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectable\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:setSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAbstractItem::setSelectable (bool selectable)}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelected\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:setSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAbstractItem::setSelected (bool selected)}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPItemAnchor\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:QCPItemAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPItemAnchor}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAnchors\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:mAnchors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPItemAnchor}*> QCPAbstractItem::mAnchors{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mClipAxisRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:mClipAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxisRect}> QCPAbstractItem::mClipAxisRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mClipToAxisRect\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:mClipToAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::mClipToAxisRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPositions\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:mPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPItemPosition}*> QCPAbstractItem::mPositions{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectable\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:mSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::mSelectable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelected\:QCPAbstractItem}
{\xe \v QCPAbstractItem\:mSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractItem::mSelected{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAbstractLegendItem Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAbstractLegendItem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_abstract_legend_item.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractLegendItem} ({\b QCPLegend} *parent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b parentLegend} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b textColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b mParentLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAbstractLegendItem\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:QCPAbstractLegendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAbstractLegendItem::QCPAbstractLegendItem ({\b QCPLegend} * parent){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyDefaultAntialiasingHint\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractLegendItem::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v clipRect\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:clipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QRect QCPAbstractLegendItem::clipRect () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v deselectEvent\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractLegendItem::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractLegendItem::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b QCPPlottableLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v font\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAbstractLegendItem::font () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentLegend\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:parentLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLegend} * QCPAbstractLegendItem::parentLegend () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectable\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractLegendItem::selectable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractLegendItem::selectableChanged (bool selectable){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selected\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractLegendItem::selected () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedFont\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAbstractLegendItem::selectedFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTextColor\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAbstractLegendItem::selectedTextColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractLegendItem::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionCategory\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPAbstractLegendItem::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractLegendItem::selectionChanged (bool selected){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAbstractLegendItem::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setFont\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:setFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractLegendItem::setFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectable\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:setSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAbstractLegendItem::setSelectable (bool selectable)}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelected\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:setSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAbstractLegendItem::setSelected (bool selected)}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedFont\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:setSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractLegendItem::setSelectedFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTextColor\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:setSelectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractLegendItem::setSelectedTextColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTextColor\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractLegendItem::setTextColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v textColor\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:textColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAbstractLegendItem::textColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mFont\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAbstractLegendItem::mFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentLegend\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mParentLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLegend}* QCPAbstractLegendItem::mParentLegend{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectable\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractLegendItem::mSelectable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelected\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractLegendItem::mSelected{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedFont\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAbstractLegendItem::mSelectedFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTextColor\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mSelectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAbstractLegendItem::mSelectedTextColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTextColor\:QCPAbstractLegendItem}
{\xe \v QCPAbstractLegendItem\:mTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAbstractLegendItem::mTextColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAbstractPaintBuffer Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAbstractPaintBuffer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_abstract_paint_buffer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPaintBuffer} (const QSize &{\b size}, double {\b devicePixelRatio})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPaintBuffer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b invalidated} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b devicePixelRatio} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (const QSize &{\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInvalidated} (bool {\b invalidated}=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDevicePixelRatio} (double ratio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPainter} * {\b startPainting} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b donePainting} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b clear} (const QColor &color)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reallocateBuffer} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mDevicePixelRatio}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mInvalidated}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAbstractPaintBuffer\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:QCPAbstractPaintBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAbstractPaintBuffer::QCPAbstractPaintBuffer (const QSize & size, double devicePixelRatio){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAbstractPaintBuffer\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:~QCPAbstractPaintBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAbstractPaintBuffer::~QCPAbstractPaintBuffer (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPaintBuffer::clear (const QColor & color){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPPaintBufferPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v devicePixelRatio\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:devicePixelRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAbstractPaintBuffer::devicePixelRatio () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v donePainting\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:donePainting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPaintBuffer::donePainting (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPaintBuffer::draw ({\b QCPPainter} * painter) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPPaintBufferPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v invalidated\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:invalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPaintBuffer::invalidated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reallocateBuffer\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:reallocateBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPaintBuffer::reallocateBuffer (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPPaintBufferPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setDevicePixelRatio\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:setDevicePixelRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPaintBuffer::setDevicePixelRatio (double ratio)}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInvalidated\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:setInvalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPaintBuffer::setInvalidated (bool invalidated = {\f2 true})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSize\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPaintBuffer::setSize (const QSize & size)}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPAbstractPaintBuffer::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v startPainting\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:startPainting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPPainter} * QCPAbstractPaintBuffer::startPainting (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPPaintBufferPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mDevicePixelRatio\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:mDevicePixelRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAbstractPaintBuffer::mDevicePixelRatio{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInvalidated\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:mInvalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPaintBuffer::mInvalidated{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSize\:QCPAbstractPaintBuffer}
{\xe \v QCPAbstractPaintBuffer\:mSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPAbstractPaintBuffer::mSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAbstractPlottable Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAbstractPlottable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_abstract_plottable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPlottableLegendItem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAbstractPlottable\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:QCPAbstractPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAbstractPlottable::QCPAbstractPlottable ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis)}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAbstractPlottable\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:~QCPAbstractPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAbstractPlottable::~QCPAbstractPlottable (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addToLegend\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:addToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::addToLegend ()}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addToLegend\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:addToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::addToLegend ({\b QCPLegend} * legend)}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedFill\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:antialiasedFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::antialiasedFill () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedScatters\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:antialiasedScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::antialiasedScatters () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v applyFillAntialiasingHint\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:applyFillAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::applyFillAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyScattersAntialiasingHint\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:applyScattersAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::applyScattersAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brush\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPAbstractPlottable::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clipRect\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:clipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QRect QCPAbstractPlottable::clipRect () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v coordsToPixels\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:coordsToPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QPointF QCPAbstractPlottable::coordsToPixels (double key, double value) const}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordsToPixels\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:coordsToPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::coordsToPixels (double key, double value, double & x, double & y) const}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPlottable::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPlottable::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAME \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawLegendIcon\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPlottable::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getKeyRange\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPAbstractPlottable::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getValueRange\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPAbstractPlottable::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v interface1D\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:interface1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPPlottableInterface1D} * QCPAbstractPlottable::interface1D (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v keyAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:keyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPAbstractPlottable::keyAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAbstractPlottable::name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAbstractPlottable::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelsToCoords\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:pixelsToCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::pixelsToCoords (const QPointF & pixelPos, double & key, double & value) const}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelsToCoords\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:pixelsToCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::pixelsToCoords (double x, double y, double & key, double & value) const}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeFromLegend\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:removeFromLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::removeFromLegend () const}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeFromLegend\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:removeFromLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::removeFromLegend ({\b QCPLegend} * legend) const}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleAxes\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:rescaleAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::rescaleAxes (bool onlyEnlarge = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleKeyAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:rescaleKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::rescaleKeyAxis (bool onlyEnlarge = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleValueAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:rescaleValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::rescaleValueAxis (bool onlyEnlarge = {\f2 false}, bool inKeyRange = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectable\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCP::SelectionType} QCPAbstractPlottable::selectable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::selectableChanged ({\b QCP::SelectionType} selectable){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selected\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::selected () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAbstractPlottable::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selection\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPAbstractPlottable::selection () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionCategory\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPAbstractPlottable::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::selectionChanged (bool selected){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionChanged\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::selectionChanged (const {\b QCPDataSelection} & selection){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionDecorator\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectionDecorator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPSelectionDecorator} * QCPAbstractPlottable::selectionDecorator () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAbstractPlottable::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAntialiasedFill\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setAntialiasedFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setAntialiasedFill (bool enabled)}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedScatters\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setAntialiasedScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setAntialiasedScatters (bool enabled)}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrush\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setKeyAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setKeyAxis ({\b QCPAxis} * axis)}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setName\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setName (const QString & name)}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectable\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAbstractPlottable::setSelectable ({\b QCP::SelectionType} selectable)}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelection\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAbstractPlottable::setSelection ({\b QCPDataSelection} selection)}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectionDecorator\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setSelectionDecorator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setSelectionDecorator ({\b QCPSelectionDecorator} * decorator)}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setValueAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:setValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAbstractPlottable::setValueAxis ({\b QCPAxis} * axis)}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:valueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPAbstractPlottable::valueAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:QCPAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAxis}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPPlottableLegendItem\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:QCPPlottableLegendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPPlottableLegendItem}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAntialiasedFill\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mAntialiasedFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::mAntialiasedFill{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAntialiasedScatters\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mAntialiasedScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAbstractPlottable::mAntialiasedScatters{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPAbstractPlottable::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mKeyAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxis}> QCPAbstractPlottable::mKeyAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mName\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAbstractPlottable::mName{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAbstractPlottable::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectable\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCP::SelectionType} QCPAbstractPlottable::mSelectable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelection\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPAbstractPlottable::mSelection{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectionDecorator\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mSelectionDecorator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPSelectionDecorator}* QCPAbstractPlottable::mSelectionDecorator{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mValueAxis\:QCPAbstractPlottable}
{\xe \v QCPAbstractPlottable\:mValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxis}> QCPAbstractPlottable::mValueAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAbstractPlottable1D< DataType > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A template base class for plottables with one-dimensional data. }}\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAbstractPlottable1D< DataType >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_abstract_plottable1_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable1D} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable1D} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPDataContainer}< DataType > > {\b mDataContainer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class DataType>\par
class QCPAbstractPlottable1D< DataType >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A template base class for plottables with one-dimensional data. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This template class derives from {\b QCPAbstractPlottable} and from the abstract interface {\b QCPPlottableInterface1D}. It serves as a base class for all one-dimensional data (i.e. data with one key dimension), such as {\b QCPGraph} and {\b QCPCurve}.\par
The template parameter {\i DataType}  is the type of the data points of this plottable (e.g. {\b QCPGraphData} or {\b QCPCurveData}). The main purpose of this base class is to provide the member {\i mDataContainer}  (a shared pointer to a {\b QCPDataContainer}) and implement the according virtual methods of the {\b QCPPlottableInterface1D}, such that most subclassed plottables don't need to worry about this anymore.\par
Further, it provides a convenience method for retrieving selected/unselected data segments via {\b getDataSegments}. This is useful when subclasses implement their {\b draw} method and need to draw selected segments with a different pen/brush than unselected segments (also see {\b QCPSelectionDecorator}).\par
This class implements basic functionality of {\b QCPAbstractPlottable::selectTest} and {\b QCPPlottableInterface1D::selectTestRect}, assuming point-like data points, based on the 1D data interface. In spite of that, most plottable subclasses will want to reimplement those methods again, to provide a more accurate hit test based on their specific data visualization geometry. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAbstractPlottable1D\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:QCPAbstractPlottable1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPAbstractPlottable1D}< DataType >{\b ::QCPAbstractPlottable1D} ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis)}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Forwards {\i keyAxis}  and {\i valueAxis}  to the {\b QCPAbstractPlottable} constructor and allocates the {\i mDataContainer} . \par
}}
{\xe \v ~QCPAbstractPlottable1D\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:~QCPAbstractPlottable1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPAbstractPlottable1D}< DataType >::~{\b QCPAbstractPlottable1D} (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v dataCount\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:dataCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > int {\b QCPAbstractPlottable1D}< DataType >::dataCount () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of data points of the plottable.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataMainKey\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:dataMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > double {\b QCPAbstractPlottable1D}< DataType >::dataMainKey (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the main key of the data point at the given {\i index} .\par
What the main key is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataMainValue\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:dataMainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > double {\b QCPAbstractPlottable1D}< DataType >::dataMainValue (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the main value of the data point at the given {\i index} .\par
What the main value is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataPixelPosition\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:dataPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > QPointF {\b QCPAbstractPlottable1D}< DataType >::dataPixelPosition (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the pixel position on the widget surface at which the data point at the given {\i index}  appears.\par
Usually this corresponds to the point of dataMainKey/ dataMainValue, in pixel coordinates. However, depending on the plottable, this might be a different apparent position than just a coord-to-pixel transform of those values. For example, {\b QCPBars} apparent data values can be shifted depending on their stacking, bar grouping or configured base value.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataSortKey\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:dataSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > double {\b QCPAbstractPlottable1D}< DataType >::dataSortKey (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the sort key of the data point at the given {\i index} .\par
What the sort key is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataValueRange\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:dataValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPRange} {\b QCPAbstractPlottable1D}< DataType >::dataValueRange (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value range of the data point at the given {\i index} .\par
What the value range is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawPolyline\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:drawPolyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPAbstractPlottable1D}< DataType >::drawPolyline ({\b QCPPainter} * painter, const QVector< QPointF > & lineData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A helper method which draws a line with the passed {\i painter} , according to the pixel data in {\i lineData} . NaN points create gaps in the line, as expected from {\b QCustomPlot}'s plottables (this is the main difference to QPainter's regular drawPolyline, which handles NaNs by lagging or crashing).\par
Further it uses a faster line drawing technique based on {\b QCPPainter::drawLine} rather than {\f2 QPainter::drawPolyline}  if the configured {\b QCustomPlot::setPlottingHints()} and {\i painter}  style allows. \par
}}
{\xe \v findBegin\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:findBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > int {\b QCPAbstractPlottable1D}< DataType >::findBegin (double sortKey, bool expandedRange = {\f2 true}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index of the data point with a (sort-)key that is equal to, just below, or just above {\i sortKey} . If {\i expandedRange}  is true, the data point just below {\i sortKey}  will be considered, otherwise the one just above.\par
This can be used in conjunction with {\b findEnd} to iterate over data points within a given key range, including or excluding the bounding data points that are just beyond the specified range.\par
If {\i expandedRange}  is true but there are no data points below {\i sortKey} , 0 is returned.\par
If the container is empty, returns 0 (in that case, {\b findEnd} will also return 0, so a loop using these methods will not iterate over the index 0).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findEnd}, {\b QCPDataContainer::findBegin}    \par
}}}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v findEnd\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:findEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > int {\b QCPAbstractPlottable1D}< DataType >::findEnd (double sortKey, bool expandedRange = {\f2 true}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index one after the data point with a (sort-)key that is equal to, just above, or just below {\i sortKey} . If {\i expandedRange}  is true, the data point just above {\i sortKey}  will be considered, otherwise the one just below.\par
This can be used in conjunction with {\b findBegin} to iterate over data points within a given key range, including the bounding data points that are just below and above the specified range.\par
If {\i expandedRange}  is true but there are no data points above {\i sortKey} , the index just above the highest data point is returned.\par
If the container is empty, returns 0.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findBegin}, {\b QCPDataContainer::findEnd}    \par
}}}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getDataSegments\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:getDataSegments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPAbstractPlottable1D}< DataType >::getDataSegments (QList< {\b QCPDataRange} > & selectedSegments, QList< {\b QCPDataRange} > & unselectedSegments) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Splits all data into selected and unselected segments and outputs them via {\i selectedSegments}  and {\i unselectedSegments} , respectively.\par
This is useful when subclasses implement their {\b draw} method and need to draw selected segments with a different pen/brush than unselected segments (also see {\b QCPSelectionDecorator}).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSelection} \par
}}}}
{\xe \v interface1D\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:interface1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > virtual {\b QCPPlottableInterface1D} * {\b QCPAbstractPlottable1D}< DataType >::interface1D (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a {\b QCPPlottableInterface1D} pointer to this plottable, providing access to its 1D interface.\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTest\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > double {\b QCPAbstractPlottable1D}< DataType >::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a point-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
If {\i details}  is not 0, it will be set to a {\b QCPDataSelection}, describing the closest data point to {\i pos} .\par
\\seebaseclassmethod \par
}{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTestRect\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:selectTestRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPDataSelection} {\b QCPAbstractPlottable1D}< DataType >::selectTestRect (const QRectF & rect, bool onlySelectable) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a rect-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
\\seebaseclassmethod \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v sortKeyIsMainKey\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > bool {\b QCPAbstractPlottable1D}< DataType >::sortKeyIsMainKey () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether the sort key ({\b dataSortKey}) is identical to the main key ({\b dataMainKey}).\par
What the sort and main keys are, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention.    \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mDataContainer\:QCPAbstractPlottable1D< DataType >}
{\xe \v QCPAbstractPlottable1D< DataType >\:mDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > QSharedPointer<{\b QCPDataContainer}<DataType> > {\b QCPAbstractPlottable1D}< DataType >::mDataContainer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxis Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxis}
{\xe \v QCPAxis}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxis:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AxisType} \{ {\b atLeft} = 0x01
, {\b atRight} = 0x02
, {\b atTop} = 0x04
, {\b atBottom} = 0x08
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LabelSide} \{ {\b lsInside}
, {\b lsOutside}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ScaleType} \{ {\b stLinear}
, {\b stLogarithmic}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectablePart} \{ {\b spNone} = 0
, {\b spAxis} = 0x001
, {\b spTickLabels} = 0x002
, {\b spAxisLabel} = 0x004
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rangeChanged} (const {\b QCPRange} &newRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rangeChanged} (const {\b QCPRange} &newRange, const {\b QCPRange} &oldRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleTypeChanged} ({\b QCPAxis::ScaleType} {\b scaleType})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const QCPAxis::SelectableParts &parts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (const QCPAxis::SelectableParts &parts)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} ({\b QCPAxisRect} *parent, {\b AxisType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxis} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AxisType} {\b axisType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b axisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScaleType} {\b scaleType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b range} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeReversed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPAxisTicker} > {\b ticker} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ticks} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tickLabels} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLabelPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b tickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b tickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickLabelRotation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LabelSide} {\b tickLabelSide} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b numberFormat} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberPrecision} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b tickVector} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b tickVectorLabels} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthIn} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthOut} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b subTicks} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthIn} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthOut} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b basePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b tickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b subTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b labelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b labelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b label} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b labelPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b padding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offset} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectedParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectableParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedTickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedBasePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedSubTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b lowerEnding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b upperEnding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGrid} * {\b grid} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setScaleType} ({\b QCPAxis::ScaleType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setRange} (const {\b QCPRange} &{\b range})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (double lower, double upper)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (double position, double size, Qt::AlignmentFlag alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeLower} (double lower)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeUpper} (double upper)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeReversed} (bool reversed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicker} (QSharedPointer< {\b QCPAxisTicker} > {\b ticker})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicks} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabels} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelPadding} (int {\b padding})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelRotation} (double degrees)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelSide} ({\b LabelSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNumberFormat} (const QString &formatCode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNumberPrecision} (int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLength} (int inside, int outside=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLengthIn} (int inside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLengthOut} (int outside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTicks} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLength} (int inside, int outside=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLengthIn} (int inside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLengthOut} (int outside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBasePen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabel} (const QString &str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelPadding} (int {\b padding})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPadding} (int {\b padding})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOffset} (int {\b offset})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBasePen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedSubTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectableParts} (const QCPAxis::SelectableParts &{\b selectableParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectedParts} (const QCPAxis::SelectableParts &{\b selectedParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLowerEnding} (const {\b QCPLineEnding} &ending)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUpperEnding} (const {\b QCPLineEnding} &ending)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientation {\b orientation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pixelOrientation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveRange} (double diff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleRange} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleRange} (double factor, double center)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScaleRatio} (const {\b QCPAxis} *otherAxis, double ratio=1.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescale} (bool onlyVisiblePlottables=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pixelToCoord} (double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b coordToPixel} (double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectablePart} {\b getPartAt} (const QPointF &pos) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractPlottable} * > {\b plottables} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPGraph} * > {\b graphs} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractItem} * > {\b items} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b AxisType} {\b marginSideToAxisType} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Qt::Orientation {\b orientation} ({\b AxisType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b AxisType} {\b opposite} ({\b AxisType} type)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateMargin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupTickVectors} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getBasePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getSubTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getTickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getTickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getLabelColor} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AxisType} {\b mAxisType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b mAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientation {\b mOrientation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectableParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectedParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mBasePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedBasePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mLabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTickLabels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mTickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedTickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mNumberPrecision}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLatin1Char {\b mNumberFormatChar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mNumberBeautifulPowers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSubTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSubTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedSubTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeReversed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScaleType} {\b mScaleType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGrid} * {\b mGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisPainterPrivate} * {\b mAxisPainter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPAxisTicker} > {\b mTicker}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b mTickVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b mTickVectorLabels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b mSubTickVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mCachedMarginValid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mCachedMargin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mDragging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mDragStartRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mNotAADragBackup}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisRect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AxisType\:QCPAxis}
{\xe \v QCPAxis\:AxisType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxis::AxisType}}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines at which side of the axis rect the axis will appear. This also affects how the tick marks are drawn, on which side the labels are placed etc. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v atLeft\:QCPAxis}
{\xe \v QCPAxis\:atLeft}
{\qr atLeft{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x01}  Axis is vertical and on the left side of the axis rect \par
}\cell }{\row }
{\xe \v atRight\:QCPAxis}
{\xe \v QCPAxis\:atRight}
{\qr atRight{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x02}  Axis is vertical and on the right side of the axis rect \par
}\cell }{\row }
{\xe \v atTop\:QCPAxis}
{\xe \v QCPAxis\:atTop}
{\qr atTop{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x04}  Axis is horizontal and on the top side of the axis rect \par
}\cell }{\row }
{\xe \v atBottom\:QCPAxis}
{\xe \v QCPAxis\:atBottom}
{\qr atBottom{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x08}  Axis is horizontal and on the bottom side of the axis rect \par
}\cell }{\row }
}
}
{\xe \v LabelSide\:QCPAxis}
{\xe \v QCPAxis\:LabelSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxis::LabelSide}}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines on which side of the axis the tick labels (numbers) shall appear.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setTickLabelSide} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lsInside\:QCPAxis}
{\xe \v QCPAxis\:lsInside}
{\qr lsInside{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tick labels will be displayed inside the axis rect and clipped to the inner axis rect. \par
}\cell }{\row }
{\xe \v lsOutside\:QCPAxis}
{\xe \v QCPAxis\:lsOutside}
{\qr lsOutside{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tick labels will be displayed outside the axis rect. \par
}\cell }{\row }
}
}
{\xe \v ScaleType\:QCPAxis}
{\xe \v QCPAxis\:ScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxis::ScaleType}}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the scale of an axis. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setScaleType} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v stLinear\:QCPAxis}
{\xe \v QCPAxis\:stLinear}
{\qr stLinear{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linear scaling. \par
}\cell }{\row }
{\xe \v stLogarithmic\:QCPAxis}
{\xe \v QCPAxis\:stLogarithmic}
{\qr stLogarithmic{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logarithmic scaling with correspondingly transformed axis coordinates (possibly also {\b setTicker} to a {\b QCPAxisTickerLog} instance). \par
}\cell }{\row }
}
}
{\xe \v SelectablePart\:QCPAxis}
{\xe \v QCPAxis\:SelectablePart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxis::SelectablePart}}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the selectable parts of an axis. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSelectableParts}, {\b setSelectedParts} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v spNone\:QCPAxis}
{\xe \v QCPAxis\:spNone}
{\qr spNone{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
None of the selectable parts. \par
}\cell }{\row }
{\xe \v spAxis\:QCPAxis}
{\xe \v QCPAxis\:spAxis}
{\qr spAxis{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis backbone and tick marks. \par
}\cell }{\row }
{\xe \v spTickLabels\:QCPAxis}
{\xe \v QCPAxis\:spTickLabels}
{\qr spTickLabels{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tick labels (numbers) of this axis (as a whole, not individually) \par
}\cell }{\row }
{\xe \v spAxisLabel\:QCPAxis}
{\xe \v QCPAxis\:spAxisLabel}
{\qr spAxisLabel{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis label. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxis\:QCPAxis}
{\xe \v QCPAxis\:QCPAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxis::QCPAxis ({\b QCPAxisRect} * parent, {\b AxisType} type){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAxis\:QCPAxis}
{\xe \v QCPAxis\:~QCPAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAxis::~QCPAxis (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyDefaultAntialiasingHint\:QCPAxis}
{\xe \v QCPAxis\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v axisRect\:QCPAxis}
{\xe \v QCPAxis\:axisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisRect} * QCPAxis::axisRect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisType\:QCPAxis}
{\xe \v QCPAxis\:axisType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AxisType} QCPAxis::axisType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v basePen\:QCPAxis}
{\xe \v QCPAxis\:basePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::basePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v calculateMargin\:QCPAxis}
{\xe \v QCPAxis\:calculateMargin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxis::calculateMargin (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordToPixel\:QCPAxis}
{\xe \v QCPAxis\:coordToPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxis::coordToPixel (double value) const}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPAxis}
{\xe \v QCPAxis\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPAxis}
{\xe \v QCPAxis\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getBasePen\:QCPAxis}
{\xe \v QCPAxis\:getBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::getBasePen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLabelColor\:QCPAxis}
{\xe \v QCPAxis\:getLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::getLabelColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLabelFont\:QCPAxis}
{\xe \v QCPAxis\:getLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::getLabelFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getPartAt\:QCPAxis}
{\xe \v QCPAxis\:getPartAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectablePart} QCPAxis::getPartAt (const QPointF & pos) const}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickPen\:QCPAxis}
{\xe \v QCPAxis\:getSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::getSubTickPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:getTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::getTickLabelColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:getTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::getTickLabelFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickPen\:QCPAxis}
{\xe \v QCPAxis\:getTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::getTickPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graphs\:QCPAxis}
{\xe \v QCPAxis\:graphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPGraph} * > QCPAxis::graphs () const}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v grid\:QCPAxis}
{\xe \v QCPAxis\:grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGrid} * QCPAxis::grid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v items\:QCPAxis}
{\xe \v QCPAxis\:items}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractItem} * > QCPAxis::items () const}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:QCPAxis}
{\xe \v QCPAxis\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxis::label () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelColor\:QCPAxis}
{\xe \v QCPAxis\:labelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::labelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelFont\:QCPAxis}
{\xe \v QCPAxis\:labelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::labelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelPadding\:QCPAxis}
{\xe \v QCPAxis\:labelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::labelPadding () const}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lowerEnding\:QCPAxis}
{\xe \v QCPAxis\:lowerEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPAxis::lowerEnding () const}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v marginSideToAxisType\:QCPAxis}
{\xe \v QCPAxis\:marginSideToAxisType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b AxisType} QCPAxis::marginSideToAxisType ({\b QCP::MarginSide} side){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMoveEvent\:QCPAxis}
{\xe \v QCPAxis\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPAxis}
{\xe \v QCPAxis\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPAxis}
{\xe \v QCPAxis\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v moveRange\:QCPAxis}
{\xe \v QCPAxis\:moveRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::moveRange (double diff)}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberFormat\:QCPAxis}
{\xe \v QCPAxis\:numberFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxis::numberFormat () const}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberPrecision\:QCPAxis}
{\xe \v QCPAxis\:numberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::numberPrecision () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v offset\:QCPAxis}
{\xe \v QCPAxis\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::offset () const}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v opposite\:QCPAxis}
{\xe \v QCPAxis\:opposite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b AxisType} QCPAxis::opposite ({\b AxisType} type){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v orientation\:QCPAxis}
{\xe \v QCPAxis\:orientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Orientation QCPAxis::orientation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v orientation\:QCPAxis}
{\xe \v QCPAxis\:orientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Qt::Orientation QCPAxis::orientation ({\b AxisType} type){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v padding\:QCPAxis}
{\xe \v QCPAxis\:padding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::padding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelOrientation\:QCPAxis}
{\xe \v QCPAxis\:pixelOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::pixelOrientation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelToCoord\:QCPAxis}
{\xe \v QCPAxis\:pixelToCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxis::pixelToCoord (double value) const}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottables\:QCPAxis}
{\xe \v QCPAxis\:plottables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractPlottable} * > QCPAxis::plottables () const}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v range\:QCPAxis}
{\xe \v QCPAxis\:range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} QCPAxis::range () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeChanged\:QCPAxis}
{\xe \v QCPAxis\:rangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::rangeChanged (const {\b QCPRange} & newRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeChanged\:QCPAxis}
{\xe \v QCPAxis\:rangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::rangeChanged (const {\b QCPRange} & newRange, const {\b QCPRange} & oldRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeReversed\:QCPAxis}
{\xe \v QCPAxis\:rangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::rangeReversed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescale\:QCPAxis}
{\xe \v QCPAxis\:rescale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::rescale (bool onlyVisiblePlottables = {\f2 false})}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleRange\:QCPAxis}
{\xe \v QCPAxis\:scaleRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::scaleRange (double factor)}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleRange\:QCPAxis}
{\xe \v QCPAxis\:scaleRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::scaleRange (double factor, double center)}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleType\:QCPAxis}
{\xe \v QCPAxis\:scaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScaleType} QCPAxis::scaleType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleTypeChanged\:QCPAxis}
{\xe \v QCPAxis\:scaleTypeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::scaleTypeChanged ({\b QCPAxis::ScaleType} scaleType){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPAxis}
{\xe \v QCPAxis\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::selectableChanged (const QCPAxis::SelectableParts & parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableParts\:QCPAxis}
{\xe \v QCPAxis\:selectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPAxis::selectableParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBasePen\:QCPAxis}
{\xe \v QCPAxis\:selectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::selectedBasePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLabelColor\:QCPAxis}
{\xe \v QCPAxis\:selectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::selectedLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLabelFont\:QCPAxis}
{\xe \v QCPAxis\:selectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::selectedLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedParts\:QCPAxis}
{\xe \v QCPAxis\:selectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPAxis::selectedParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedSubTickPen\:QCPAxis}
{\xe \v QCPAxis\:selectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::selectedSubTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:selectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::selectedTickLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:selectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::selectedTickLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickPen\:QCPAxis}
{\xe \v QCPAxis\:selectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::selectedTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPAxis}
{\xe \v QCPAxis\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionCategory\:QCPAxis}
{\xe \v QCPAxis\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPAxis::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPAxis}
{\xe \v QCPAxis\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::selectionChanged (const QCPAxis::SelectableParts & parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPAxis}
{\xe \v QCPAxis\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxis::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBasePen\:QCPAxis}
{\xe \v QCPAxis\:setBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setBasePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabel\:QCPAxis}
{\xe \v QCPAxis\:setLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setLabel (const QString & str)}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelColor\:QCPAxis}
{\xe \v QCPAxis\:setLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelFont\:QCPAxis}
{\xe \v QCPAxis\:setLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelPadding\:QCPAxis}
{\xe \v QCPAxis\:setLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setLabelPadding (int padding)}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLowerEnding\:QCPAxis}
{\xe \v QCPAxis\:setLowerEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setLowerEnding (const {\b QCPLineEnding} & ending)}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNumberFormat\:QCPAxis}
{\xe \v QCPAxis\:setNumberFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setNumberFormat (const QString & formatCode)}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNumberPrecision\:QCPAxis}
{\xe \v QCPAxis\:setNumberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setNumberPrecision (int precision)}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOffset\:QCPAxis}
{\xe \v QCPAxis\:setOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setOffset (int offset)}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPadding\:QCPAxis}
{\xe \v QCPAxis\:setPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setPadding (int padding)}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPAxis}
{\xe \v QCPAxis\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAxis::setRange (const {\b QCPRange} & range)}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPAxis}
{\xe \v QCPAxis\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setRange (double lower, double upper)}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPAxis}
{\xe \v QCPAxis\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setRange (double position, double size, Qt::AlignmentFlag alignment)}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeLower\:QCPAxis}
{\xe \v QCPAxis\:setRangeLower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setRangeLower (double lower)}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeReversed\:QCPAxis}
{\xe \v QCPAxis\:setRangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setRangeReversed (bool reversed)}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeUpper\:QCPAxis}
{\xe \v QCPAxis\:setRangeUpper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setRangeUpper (double upper)}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScaleRatio\:QCPAxis}
{\xe \v QCPAxis\:setScaleRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setScaleRatio (const {\b QCPAxis} * otherAxis, double ratio = {\f2 1.0})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScaleType\:QCPAxis}
{\xe \v QCPAxis\:setScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAxis::setScaleType ({\b QCPAxis::ScaleType} type)}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectableParts\:QCPAxis}
{\xe \v QCPAxis\:setSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAxis::setSelectableParts (const QCPAxis::SelectableParts & selectableParts)}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBasePen\:QCPAxis}
{\xe \v QCPAxis\:setSelectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedBasePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedLabelColor\:QCPAxis}
{\xe \v QCPAxis\:setSelectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedLabelFont\:QCPAxis}
{\xe \v QCPAxis\:setSelectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedParts\:QCPAxis}
{\xe \v QCPAxis\:setSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPAxis::setSelectedParts (const QCPAxis::SelectableParts & selectedParts)}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedSubTickPen\:QCPAxis}
{\xe \v QCPAxis\:setSelectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedSubTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:setSelectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedTickLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:setSelectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedTickLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickPen\:QCPAxis}
{\xe \v QCPAxis\:setSelectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSelectedTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLength\:QCPAxis}
{\xe \v QCPAxis\:setSubTickLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSubTickLength (int inside, int outside = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLengthIn\:QCPAxis}
{\xe \v QCPAxis\:setSubTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSubTickLengthIn (int inside)}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLengthOut\:QCPAxis}
{\xe \v QCPAxis\:setSubTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSubTickLengthOut (int outside)}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickPen\:QCPAxis}
{\xe \v QCPAxis\:setSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSubTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTicks\:QCPAxis}
{\xe \v QCPAxis\:setSubTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setSubTicks (bool show)}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicker\:QCPAxis}
{\xe \v QCPAxis\:setTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTicker (QSharedPointer< {\b QCPAxisTicker} > ticker)}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:setTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:setTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelPadding\:QCPAxis}
{\xe \v QCPAxis\:setTickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLabelPadding (int padding)}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelRotation\:QCPAxis}
{\xe \v QCPAxis\:setTickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLabelRotation (double degrees)}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabels\:QCPAxis}
{\xe \v QCPAxis\:setTickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLabels (bool show)}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelSide\:QCPAxis}
{\xe \v QCPAxis\:setTickLabelSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLabelSide ({\b LabelSide} side)}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLength\:QCPAxis}
{\xe \v QCPAxis\:setTickLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLength (int inside, int outside = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLengthIn\:QCPAxis}
{\xe \v QCPAxis\:setTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLengthIn (int inside)}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLengthOut\:QCPAxis}
{\xe \v QCPAxis\:setTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickLengthOut (int outside)}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickPen\:QCPAxis}
{\xe \v QCPAxis\:setTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicks\:QCPAxis}
{\xe \v QCPAxis\:setTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setTicks (bool show)}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setUpperEnding\:QCPAxis}
{\xe \v QCPAxis\:setUpperEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setUpperEnding (const {\b QCPLineEnding} & ending)}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupTickVectors\:QCPAxis}
{\xe \v QCPAxis\:setupTickVectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxis::setupTickVectors (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthIn\:QCPAxis}
{\xe \v QCPAxis\:subTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::subTickLengthIn () const}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthOut\:QCPAxis}
{\xe \v QCPAxis\:subTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::subTickLengthOut () const}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickPen\:QCPAxis}
{\xe \v QCPAxis\:subTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::subTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTicks\:QCPAxis}
{\xe \v QCPAxis\:subTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::subTicks () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticker\:QCPAxis}
{\xe \v QCPAxis\:ticker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPAxisTicker} > QCPAxis::ticker () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:tickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::tickLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:tickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::tickLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelPadding\:QCPAxis}
{\xe \v QCPAxis\:tickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::tickLabelPadding () const}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelRotation\:QCPAxis}
{\xe \v QCPAxis\:tickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxis::tickLabelRotation () const}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabels\:QCPAxis}
{\xe \v QCPAxis\:tickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::tickLabels () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelSide\:QCPAxis}
{\xe \v QCPAxis\:tickLabelSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LabelSide} QCPAxis::tickLabelSide () const}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthIn\:QCPAxis}
{\xe \v QCPAxis\:tickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::tickLengthIn () const}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthOut\:QCPAxis}
{\xe \v QCPAxis\:tickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::tickLengthOut () const}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickPen\:QCPAxis}
{\xe \v QCPAxis\:tickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::tickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticks\:QCPAxis}
{\xe \v QCPAxis\:ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::ticks () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickVector\:QCPAxis}
{\xe \v QCPAxis\:tickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< double > QCPAxis::tickVector () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickVectorLabels\:QCPAxis}
{\xe \v QCPAxis\:tickVectorLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QString > QCPAxis::tickVectorLabels () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v upperEnding\:QCPAxis}
{\xe \v QCPAxis\:upperEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPAxis::upperEnding () const}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wheelEvent\:QCPAxis}
{\xe \v QCPAxis\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxis::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAxisRect\:QCPAxis}
{\xe \v QCPAxis\:QCPAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAxisRect}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPGrid\:QCPAxis}
{\xe \v QCPAxis\:QCPGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPGrid}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPAxis}
{\xe \v QCPAxis\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAADragBackup\:QCPAxis}
{\xe \v QCPAxis\:mAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPAxis::mAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAxisPainter\:QCPAxis}
{\xe \v QCPAxis\:mAxisPainter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisPainterPrivate}* QCPAxis::mAxisPainter{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAxisRect\:QCPAxis}
{\xe \v QCPAxis\:mAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisRect}* QCPAxis::mAxisRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAxisType\:QCPAxis}
{\xe \v QCPAxis\:mAxisType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AxisType} QCPAxis::mAxisType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBasePen\:QCPAxis}
{\xe \v QCPAxis\:mBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::mBasePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mCachedMargin\:QCPAxis}
{\xe \v QCPAxis\:mCachedMargin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::mCachedMargin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mCachedMarginValid\:QCPAxis}
{\xe \v QCPAxis\:mCachedMarginValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mCachedMarginValid{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragging\:QCPAxis}
{\xe \v QCPAxis\:mDragging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mDragging{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragStartRange\:QCPAxis}
{\xe \v QCPAxis\:mDragStartRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPAxis::mDragStartRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGrid\:QCPAxis}
{\xe \v QCPAxis\:mGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGrid}* QCPAxis::mGrid{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabel\:QCPAxis}
{\xe \v QCPAxis\:mLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxis::mLabel{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelColor\:QCPAxis}
{\xe \v QCPAxis\:mLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::mLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelFont\:QCPAxis}
{\xe \v QCPAxis\:mLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::mLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNotAADragBackup\:QCPAxis}
{\xe \v QCPAxis\:mNotAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPAxis::mNotAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberBeautifulPowers\:QCPAxis}
{\xe \v QCPAxis\:mNumberBeautifulPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mNumberBeautifulPowers{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberFormatChar\:QCPAxis}
{\xe \v QCPAxis\:mNumberFormatChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLatin1Char QCPAxis::mNumberFormatChar{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberPrecision\:QCPAxis}
{\xe \v QCPAxis\:mNumberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::mNumberPrecision{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOrientation\:QCPAxis}
{\xe \v QCPAxis\:mOrientation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Orientation QCPAxis::mOrientation{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPadding\:QCPAxis}
{\xe \v QCPAxis\:mPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxis::mPadding{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRange\:QCPAxis}
{\xe \v QCPAxis\:mRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPAxis::mRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeReversed\:QCPAxis}
{\xe \v QCPAxis\:mRangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mRangeReversed{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaleType\:QCPAxis}
{\xe \v QCPAxis\:mScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScaleType} QCPAxis::mScaleType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectableParts\:QCPAxis}
{\xe \v QCPAxis\:mSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPAxis::mSelectableParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBasePen\:QCPAxis}
{\xe \v QCPAxis\:mSelectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::mSelectedBasePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedLabelColor\:QCPAxis}
{\xe \v QCPAxis\:mSelectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::mSelectedLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedLabelFont\:QCPAxis}
{\xe \v QCPAxis\:mSelectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::mSelectedLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedParts\:QCPAxis}
{\xe \v QCPAxis\:mSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPAxis::mSelectedParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedSubTickPen\:QCPAxis}
{\xe \v QCPAxis\:mSelectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::mSelectedSubTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:mSelectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::mSelectedTickLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:mSelectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::mSelectedTickLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickPen\:QCPAxis}
{\xe \v QCPAxis\:mSelectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::mSelectedTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickPen\:QCPAxis}
{\xe \v QCPAxis\:mSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::mSubTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTicks\:QCPAxis}
{\xe \v QCPAxis\:mSubTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mSubTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickVector\:QCPAxis}
{\xe \v QCPAxis\:mSubTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPAxis::mSubTickVector{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicker\:QCPAxis}
{\xe \v QCPAxis\:mTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer<{\b QCPAxisTicker}> QCPAxis::mTicker{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelColor\:QCPAxis}
{\xe \v QCPAxis\:mTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxis::mTickLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelFont\:QCPAxis}
{\xe \v QCPAxis\:mTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxis::mTickLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabels\:QCPAxis}
{\xe \v QCPAxis\:mTickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mTickLabels{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickPen\:QCPAxis}
{\xe \v QCPAxis\:mTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxis::mTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicks\:QCPAxis}
{\xe \v QCPAxis\:mTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxis::mTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVector\:QCPAxis}
{\xe \v QCPAxis\:mTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPAxis::mTickVector{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVectorLabels\:QCPAxis}
{\xe \v QCPAxis\:mTickVectorLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QString> QCPAxis::mTickVectorLabels{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisPainterPrivate Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate}
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CachedLabel}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TickLabelData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisPainterPrivate} ({\b QCustomPlot} *parentPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisPainterPrivate} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b size} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearCache} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b axisSelectionBox} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b tickLabelsSelectionBox} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b labelSelectionBox} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::AxisType} {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b basePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b lowerEnding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b upperEnding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b labelPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b labelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b labelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b label}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLabelPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickLabelRotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::LabelSide} {\b tickLabelSide}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b substituteExponent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b numberMultiplyCross}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthIn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthOut}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthIn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthOut}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b tickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b subTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b tickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b tickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b axisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b viewportRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b offset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b abbreviateDecimalPowers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b reversedEndings}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b subTickPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b tickPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b tickLabels}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QByteArray {\b generateLabelParameterHash} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b placeTickLabel} ({\b QCPPainter} *painter, double position, int distanceToAxis, const QString &text, QSize *tickLabelsSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawTickLabel} ({\b QCPPainter} *painter, double x, double y, const {\b TickLabelData} &labelData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b TickLabelData} {\b getTickLabelData} (const QFont &font, const QString &text) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b getTickLabelDrawOffset} (const {\b TickLabelData} &labelData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b getMaxTickLabelSize} (const QFont &font, const QString &text, QSize *tickLabelsSize) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QByteArray {\b mLabelParameterHash}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCache< QString, {\b CachedLabel} > {\b mLabelCache}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mAxisSelectionBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mTickLabelsSelectionBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mLabelSelectionBox}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisPainterPrivate\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:QCPAxisPainterPrivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisPainterPrivate::QCPAxisPainterPrivate ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAxisPainterPrivate\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:~QCPAxisPainterPrivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAxisPainterPrivate::~QCPAxisPainterPrivate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v axisSelectionBox\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:axisSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::axisSelectionBox () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearCache\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:clearCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisPainterPrivate::clearCache ()}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisPainterPrivate::draw ({\b QCPPainter} * painter){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawTickLabel\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:drawTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisPainterPrivate::drawTickLabel ({\b QCPPainter} * painter, double x, double y, const {\b TickLabelData} & labelData) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v generateLabelParameterHash\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:generateLabelParameterHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QByteArray QCPAxisPainterPrivate::generateLabelParameterHash () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getMaxTickLabelSize\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:getMaxTickLabelSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisPainterPrivate::getMaxTickLabelSize (const QFont & font, const QString & text, QSize * tickLabelsSize) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelData\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:getTickLabelData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b TickLabelData} QCPAxisPainterPrivate::getTickLabelData (const QFont & font, const QString & text) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelDrawOffset\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:getTickLabelDrawOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPAxisPainterPrivate::getTickLabelDrawOffset (const {\b TickLabelData} & labelData) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelSelectionBox\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:labelSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::labelSelectionBox () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v placeTickLabel\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:placeTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisPainterPrivate::placeTickLabel ({\b QCPPainter} * painter, double position, int distanceToAxis, const QString & text, QSize * tickLabelsSize){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisPainterPrivate::size (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelsSelectionBox\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabelsSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::tickLabelsSelectionBox () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v abbreviateDecimalPowers\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:abbreviateDecimalPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisPainterPrivate::abbreviateDecimalPowers}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisRect\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:axisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::axisRect}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v basePen\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:basePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxisPainterPrivate::basePen}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisPainterPrivate::label}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelColor\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:labelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxisPainterPrivate::labelColor}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelFont\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:labelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxisPainterPrivate::labelFont}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelPadding\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:labelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::labelPadding}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lowerEnding\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:lowerEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPAxisPainterPrivate::lowerEnding}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAxisSelectionBox\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:mAxisSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::mAxisSelectionBox{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelCache\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:mLabelCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCache<QString, {\b CachedLabel}> QCPAxisPainterPrivate::mLabelCache{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelParameterHash\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:mLabelParameterHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QByteArray QCPAxisPainterPrivate::mLabelParameterHash{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelSelectionBox\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:mLabelSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::mLabelSelectionBox{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPAxisPainterPrivate::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelsSelectionBox\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:mTickLabelsSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::mTickLabelsSelectionBox{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberMultiplyCross\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:numberMultiplyCross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisPainterPrivate::numberMultiplyCross}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v offset\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::offset}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reversedEndings\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:reversedEndings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisPainterPrivate::reversedEndings}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v substituteExponent\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:substituteExponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisPainterPrivate::substituteExponent}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthIn\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:subTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::subTickLengthIn}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthOut\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:subTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::subTickLengthOut}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickPen\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:subTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxisPainterPrivate::subTickPen}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickPositions\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:subTickPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPAxisPainterPrivate::subTickPositions}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelColor\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPAxisPainterPrivate::tickLabelColor}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelFont\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxisPainterPrivate::tickLabelFont}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelPadding\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::tickLabelPadding}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelRotation\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisPainterPrivate::tickLabelRotation}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabels\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QString> QCPAxisPainterPrivate::tickLabels}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelSide\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLabelSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::LabelSide} QCPAxisPainterPrivate::tickLabelSide}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthIn\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::tickLengthIn}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthOut\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisPainterPrivate::tickLengthOut}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickPen\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPAxisPainterPrivate::tickPen}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickPositions\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:tickPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPAxisPainterPrivate::tickPositions}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::AxisType} QCPAxisPainterPrivate::type}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v upperEnding\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:upperEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPAxisPainterPrivate::upperEnding}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v viewportRect\:QCPAxisPainterPrivate}
{\xe \v QCPAxisPainterPrivate\:viewportRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::viewportRect}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisRect Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisRect}
{\xe \v QCPAxisRect}
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisRect:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_rect.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} ({\b QCustomPlot} *{\b parentPlot}, bool setupDefaultAxes=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisRect} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b background} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b backgroundBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b backgroundScaled} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b backgroundScaledMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b rangeDrag} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b rangeZoom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b rangeDragAxis} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b rangeZoomAxis} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b rangeDragAxes} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b rangeZoomAxes} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rangeZoomFactor} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QBrush &brush)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaled} (bool scaled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaledMode} (Qt::AspectRatioMode mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDrag} (Qt::Orientations orientations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoom} (Qt::Orientations orientations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDragAxes} ({\b QCPAxis} *horizontal, {\b QCPAxis} *vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDragAxes} (QList< {\b QCPAxis} * > {\b axes})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDragAxes} (QList< {\b QCPAxis} * > horizontal, QList< {\b QCPAxis} * > vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomAxes} ({\b QCPAxis} *horizontal, {\b QCPAxis} *vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomAxes} (QList< {\b QCPAxis} * > {\b axes})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomAxes} (QList< {\b QCPAxis} * > horizontal, QList< {\b QCPAxis} * > vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomFactor} (double horizontalFactor, double verticalFactor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomFactor} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b axisCount} ({\b QCPAxis::AxisType} type) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b axis} ({\b QCPAxis::AxisType} type, int index=0) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b axes} (QCPAxis::AxisTypes types) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b axes} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b addAxis} ({\b QCPAxis::AxisType} type, {\b QCPAxis} *{\b axis}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b addAxes} (QCPAxis::AxisTypes types)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeAxis} ({\b QCPAxis} *{\b axis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} * {\b insetLayout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b zoom} (const QRectF &pixelRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b zoom} (const QRectF &pixelRect, const QList< {\b QCPAxis} * > &affectedAxes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupFullAxesBox} (bool connectRanges=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractPlottable} * > {\b plottables} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPGraph} * > {\b graphs} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractItem} * > {\b items} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b left} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b right} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bottom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b topLeft} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b topRight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b bottomLeft} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b bottomRight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b center} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawBackground} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateAxesOffset} ({\b QCPAxis::AxisType} type)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBackgroundBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mScaledBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mBackgroundScaled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b mBackgroundScaledMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} * {\b mInsetLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b mRangeDrag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b mRangeZoom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeDragHorzAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeDragVertAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeZoomHorzAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeZoomVertAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRangeZoomFactorHorz}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRangeZoomFactorVert}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPRange} > {\b mDragStartHorzRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPRange} > {\b mDragStartVertRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mNotAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mDragging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCPAxis::AxisType}, QList< {\b QCPAxis} * > > {\b mAxes}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisRect\:QCPAxisRect}
{\xe \v QCPAxisRect\:QCPAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisRect::QCPAxisRect ({\b QCustomPlot} * parentPlot, bool setupDefaultAxes = {\f2 true}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAxisRect\:QCPAxisRect}
{\xe \v QCPAxisRect\:~QCPAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAxisRect::~QCPAxisRect (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:addAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxis} * > QCPAxisRect::addAxes (QCPAxis::AxisTypes types)}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:addAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPAxisRect::addAxis ({\b QCPAxis::AxisType} type, {\b QCPAxis} * axis = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPAxisRect}
{\xe \v QCPAxisRect\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v axes\:QCPAxisRect}
{\xe \v QCPAxisRect\:axes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxis} * > QCPAxisRect::axes () const}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axes\:QCPAxisRect}
{\xe \v QCPAxisRect\:axes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxis} * > QCPAxisRect::axes (QCPAxis::AxisTypes types) const}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axis\:QCPAxisRect}
{\xe \v QCPAxisRect\:axis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPAxisRect::axis ({\b QCPAxis::AxisType} type, int index = {\f2 0}) const}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisCount\:QCPAxisRect}
{\xe \v QCPAxisRect\:axisCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::axisCount ({\b QCPAxis::AxisType} type) const}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v background\:QCPAxisRect}
{\xe \v QCPAxisRect\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPAxisRect::background () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundBrush\:QCPAxisRect}
{\xe \v QCPAxisRect\:backgroundBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPAxisRect::backgroundBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundScaled\:QCPAxisRect}
{\xe \v QCPAxisRect\:backgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisRect::backgroundScaled () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundScaledMode\:QCPAxisRect}
{\xe \v QCPAxisRect\:backgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCPAxisRect::backgroundScaledMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottom\:QCPAxisRect}
{\xe \v QCPAxisRect\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::bottom () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomLeft\:QCPAxisRect}
{\xe \v QCPAxisRect\:bottomLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPAxisRect::bottomLeft () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRight\:QCPAxisRect}
{\xe \v QCPAxisRect\:bottomRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPAxisRect::bottomRight () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v calculateAutoMargin\:QCPAxisRect}
{\xe \v QCPAxisRect\:calculateAutoMargin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisRect::calculateAutoMargin ({\b QCP::MarginSide} side){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v center\:QCPAxisRect}
{\xe \v QCPAxisRect\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPAxisRect::center () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPAxisRect}
{\xe \v QCPAxisRect\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawBackground\:QCPAxisRect}
{\xe \v QCPAxisRect\:drawBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::drawBackground ({\b QCPPainter} * painter){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elements\:QCPAxisRect}
{\xe \v QCPAxisRect\:elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QList< {\b QCPLayoutElement} * > QCPAxisRect::elements (bool recursive) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v graphs\:QCPAxisRect}
{\xe \v QCPAxisRect\:graphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPGraph} * > QCPAxisRect::graphs () const}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:QCPAxisRect}
{\xe \v QCPAxisRect\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::height () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insetLayout\:QCPAxisRect}
{\xe \v QCPAxisRect\:insetLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutInset} * QCPAxisRect::insetLayout () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v items\:QCPAxisRect}
{\xe \v QCPAxisRect\:items}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractItem} * > QCPAxisRect::items () const}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layoutChanged\:QCPAxisRect}
{\xe \v QCPAxisRect\:layoutChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::layoutChanged (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v left\:QCPAxisRect}
{\xe \v QCPAxisRect\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::left () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMoveEvent\:QCPAxisRect}
{\xe \v QCPAxisRect\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPAxisRect}
{\xe \v QCPAxisRect\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPAxisRect}
{\xe \v QCPAxisRect\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABCB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v plottables\:QCPAxisRect}
{\xe \v QCPAxisRect\:plottables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractPlottable} * > QCPAxisRect::plottables () const}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeDrag\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Orientations QCPAxisRect::rangeDrag () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeDragAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeDragAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxis} * > QCPAxisRect::rangeDragAxes (Qt::Orientation orientation)}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeDragAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeDragAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPAxisRect::rangeDragAxis (Qt::Orientation orientation)}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoom\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Orientations QCPAxisRect::rangeZoom () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoomAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeZoomAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxis} * > QCPAxisRect::rangeZoomAxes (Qt::Orientation orientation)}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoomAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeZoomAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPAxisRect::rangeZoomAxis (Qt::Orientation orientation)}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoomFactor\:QCPAxisRect}
{\xe \v QCPAxisRect\:rangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisRect::rangeZoomFactor (Qt::Orientation orientation)}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:removeAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisRect::removeAxis ({\b QCPAxis} * axis)}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPAxisRect}
{\xe \v QCPAxisRect\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::right () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCPAxisRect}
{\xe \v QCPAxisRect\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setBackground (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCPAxisRect}
{\xe \v QCPAxisRect\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setBackground (const QPixmap & pm)}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCPAxisRect}
{\xe \v QCPAxisRect\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setBackground (const QPixmap & pm, bool scaled, Qt::AspectRatioMode mode = {\f2 Qt::KeepAspectRatioByExpanding})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackgroundScaled\:QCPAxisRect}
{\xe \v QCPAxisRect\:setBackgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setBackgroundScaled (bool scaled)}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackgroundScaledMode\:QCPAxisRect}
{\xe \v QCPAxisRect\:setBackgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setBackgroundScaledMode (Qt::AspectRatioMode mode)}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDrag\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeDrag (Qt::Orientations orientations)}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDragAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeDragAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeDragAxes ({\b QCPAxis} * horizontal, {\b QCPAxis} * vertical)}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDragAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeDragAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeDragAxes (QList< {\b QCPAxis} * > axes)}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDragAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeDragAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeDragAxes (QList< {\b QCPAxis} * > horizontal, QList< {\b QCPAxis} * > vertical)}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoom\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeZoom (Qt::Orientations orientations)}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeZoomAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeZoomAxes ({\b QCPAxis} * horizontal, {\b QCPAxis} * vertical)}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeZoomAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeZoomAxes (QList< {\b QCPAxis} * > axes)}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeZoomAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeZoomAxes (QList< {\b QCPAxis} * > horizontal, QList< {\b QCPAxis} * > vertical)}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomFactor\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeZoomFactor (double factor)}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomFactor\:QCPAxisRect}
{\xe \v QCPAxisRect\:setRangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setRangeZoomFactor (double horizontalFactor, double verticalFactor)}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupFullAxesBox\:QCPAxisRect}
{\xe \v QCPAxisRect\:setupFullAxesBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::setupFullAxesBox (bool connectRanges = {\f2 false})}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPAxisRect}
{\xe \v QCPAxisRect\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPAxisRect::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:QCPAxisRect}
{\xe \v QCPAxisRect\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::top () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeft\:QCPAxisRect}
{\xe \v QCPAxisRect\:topLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPAxisRect::topLeft () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topRight\:QCPAxisRect}
{\xe \v QCPAxisRect\:topRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPAxisRect::topRight () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v update\:QCPAxisRect}
{\xe \v QCPAxisRect\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::update ({\b UpdatePhase} phase){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v updateAxesOffset\:QCPAxisRect}
{\xe \v QCPAxisRect\:updateAxesOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::updateAxesOffset ({\b QCPAxis::AxisType} type){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wheelEvent\:QCPAxisRect}
{\xe \v QCPAxisRect\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v width\:QCPAxisRect}
{\xe \v QCPAxisRect\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisRect::width () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v zoom\:QCPAxisRect}
{\xe \v QCPAxisRect\:zoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::zoom (const QRectF & pixelRect)}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v zoom\:QCPAxisRect}
{\xe \v QCPAxisRect\:zoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisRect::zoom (const QRectF & pixelRect, const QList< {\b QCPAxis} * > & affectedAxes)}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCustomPlot\:QCPAxisRect}
{\xe \v QCPAxisRect\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAADragBackup\:QCPAxisRect}
{\xe \v QCPAxisRect\:mAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPAxisRect::mAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAxes\:QCPAxisRect}
{\xe \v QCPAxisRect\:mAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QHash<{\b QCPAxis::AxisType}, QList<{\b QCPAxis}*> > QCPAxisRect::mAxes{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundBrush\:QCPAxisRect}
{\xe \v QCPAxisRect\:mBackgroundBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPAxisRect::mBackgroundBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundPixmap\:QCPAxisRect}
{\xe \v QCPAxisRect\:mBackgroundPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPAxisRect::mBackgroundPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundScaled\:QCPAxisRect}
{\xe \v QCPAxisRect\:mBackgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisRect::mBackgroundScaled{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundScaledMode\:QCPAxisRect}
{\xe \v QCPAxisRect\:mBackgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCPAxisRect::mBackgroundScaledMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragging\:QCPAxisRect}
{\xe \v QCPAxisRect\:mDragging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisRect::mDragging{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragStartHorzRange\:QCPAxisRect}
{\xe \v QCPAxisRect\:mDragStartHorzRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPRange}> QCPAxisRect::mDragStartHorzRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragStartVertRange\:QCPAxisRect}
{\xe \v QCPAxisRect\:mDragStartVertRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPRange}> QCPAxisRect::mDragStartVertRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInsetLayout\:QCPAxisRect}
{\xe \v QCPAxisRect\:mInsetLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutInset}* QCPAxisRect::mInsetLayout{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNotAADragBackup\:QCPAxisRect}
{\xe \v QCPAxisRect\:mNotAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPAxisRect::mNotAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeDrag\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Orientations QCPAxisRect::mRangeDrag{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeDragHorzAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeDragHorzAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QPointer<{\b QCPAxis}> > QCPAxisRect::mRangeDragHorzAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeDragVertAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeDragVertAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QPointer<{\b QCPAxis}> > QCPAxisRect::mRangeDragVertAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoom\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Orientations QCPAxisRect::mRangeZoom{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoomFactorHorz\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeZoomFactorHorz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisRect::mRangeZoomFactorHorz{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoomFactorVert\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeZoomFactorVert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisRect::mRangeZoomFactorVert{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoomHorzAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeZoomHorzAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QPointer<{\b QCPAxis}> > QCPAxisRect::mRangeZoomHorzAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoomVertAxis\:QCPAxisRect}
{\xe \v QCPAxisRect\:mRangeZoomVertAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QPointer<{\b QCPAxis}> > QCPAxisRect::mRangeZoomVertAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaledBackgroundPixmap\:QCPAxisRect}
{\xe \v QCPAxisRect\:mScaledBackgroundPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPAxisRect::mScaledBackgroundPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTicker Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTicker}
{\xe \v QCPAxisTicker}
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTicker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v TickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:TickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTicker::TickStepStrategy}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the strategies that the axis ticker may follow when choosing the size of the tick step.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setTickStepStrategy} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v tssReadability\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tssReadability}
{\qr tssReadability{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A nicely readable tick step is prioritized over matching the requested number of ticks (see {\b setTickCount}) \par
}\cell }{\row }
{\xe \v tssMeetTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tssMeetTickCount}
{\qr tssMeetTickCount{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Less readable tick steps are allowed which in turn facilitates getting closer to the requested tick count. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTicker\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:QCPAxisTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTicker::QCPAxisTicker ()}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPAxisTicker\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:~QCPAxisTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPAxisTicker::~QCPAxisTicker (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v cleanMantissa\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:cleanMantissa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::cleanMantissa (double input) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createLabelVector\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:createLabelVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QVector< QString > QCPAxisTicker::createLabelVector (const QVector< double > & ticks, const QLocale & locale, QChar formatChar, int precision){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createSubTickVector\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:createSubTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QVector< double > QCPAxisTicker::createSubTickVector (int subTickCount, const QVector< double > & ticks){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createTickVector\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:createTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QVector< double > QCPAxisTicker::createTickVector (double tickStep, const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerLog} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v generate\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisTicker::generate (const {\b QCPRange} & range, const QLocale & locale, QChar formatChar, int precision, QVector< double > & ticks, QVector< double > * subTicks, QVector< QString > * tickLabels){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getMantissa\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getMantissa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::getMantissa (double input, double * magnitude = {\f2 nullptr}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisTicker::getSubTickCount (double tickStep){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerLog} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerPi} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPAxisTickerTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickLabel\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QString QCPAxisTicker::getTickLabel (double tick, const QLocale & locale, QChar formatChar, int precision){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerPi} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPAxisTickerTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickStep\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxisTicker::getTickStep (const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisTickerDateTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerFixed} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerPi} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisTickerText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPAxisTickerTime} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v pickClosest\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:pickClosest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::pickClosest (double target, const QVector< double > & candidates) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:setTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::setTickCount (int count)}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickOrigin\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:setTickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::setTickOrigin (double origin)}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:setTickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::setTickStepStrategy ({\b TickStepStrategy} strategy)}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTicker::tickCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickOrigin\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::tickOrigin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:tickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TickStepStrategy} QCPAxisTicker::tickStepStrategy () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v trimTicks\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:trimTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTicker::trimTicks (const {\b QCPRange} & range, QVector< double > & ticks, bool keepOneOutlier) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mTickCount\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:mTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTicker::mTickCount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickOrigin\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:mTickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTicker::mTickOrigin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickStepStrategy\:QCPAxisTicker}
{\xe \v QCPAxisTicker\:mTickStepStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TickStepStrategy} QCPAxisTicker::mTickStepStrategy{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTickerDateTime Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime}
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTickerDateTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker_date_time.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTickerDateTime} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b dateTimeFormat} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::TimeSpec {\b dateTimeSpec} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QTimeZone {\b timeZone} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDateTimeFormat} (const QString &format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDateTimeSpec} (Qt::TimeSpec spec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTimeZone} (const QTimeZone &zone)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (const QDateTime &origin)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QDateTime {\b keyToDateTime} (double key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b dateTimeToKey} (const QDateTime &dateTime)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b dateTimeToKey} (const QDate &date, Qt::TimeSpec timeSpec=Qt::LocalTime)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DateStrategy} \{ {\b dsNone}
, {\b dsUniformTimeInDay}
, {\b dsUniformDayInMonth}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mDateTimeFormat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::TimeSpec {\b mDateTimeSpec}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QTimeZone {\b mTimeZone}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCPAxisTickerDateTime::DateStrategy} {\b mDateStrategy}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v DateStrategy\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:DateStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTickerDateTime::DateStrategy}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v dsNone\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dsNone}
{\qr dsNone{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
\cell }{\cell }{\row }
{\xe \v dsUniformTimeInDay\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dsUniformTimeInDay}
{\qr dsUniformTimeInDay{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
\cell }{\cell }{\row }
{\xe \v dsUniformDayInMonth\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dsUniformDayInMonth}
{\qr dsUniformDayInMonth{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTickerDateTime\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:QCPAxisTickerDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTickerDateTime::QCPAxisTickerDateTime ()}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createTickVector\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:createTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QVector< double > QCPAxisTickerDateTime::createTickVector (double tickStep, const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dateTimeFormat\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dateTimeFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerDateTime::dateTimeFormat () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dateTimeSpec\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dateTimeSpec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::TimeSpec QCPAxisTickerDateTime::dateTimeSpec () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dateTimeToKey\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dateTimeToKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double QCPAxisTickerDateTime::dateTimeToKey (const QDate & date, Qt::TimeSpec timeSpec = {\f2 Qt::LocalTime}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dateTimeToKey\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:dateTimeToKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double QCPAxisTickerDateTime::dateTimeToKey (const QDateTime & dateTime){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickCount\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisTickerDateTime::getSubTickCount (double tickStep){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickLabel\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:getTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QString QCPAxisTickerDateTime::getTickLabel (double tick, const QLocale & locale, QChar formatChar, int precision){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickStep\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxisTickerDateTime::getTickStep (const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v keyToDateTime\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:keyToDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static QDateTime QCPAxisTickerDateTime::keyToDateTime (double key){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDateTimeFormat\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:setDateTimeFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerDateTime::setDateTimeFormat (const QString & format)}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDateTimeSpec\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:setDateTimeSpec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerDateTime::setDateTimeSpec (Qt::TimeSpec spec)}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickOrigin\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:setTickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerDateTime::setTickOrigin (const QDateTime & origin)}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickOrigin\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:setTickOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerDateTime::setTickOrigin (double origin)}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTimeZone\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:setTimeZone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerDateTime::setTimeZone (const QTimeZone & zone)}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timeZone\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:timeZone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QTimeZone QCPAxisTickerDateTime::timeZone () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mDateStrategy\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:mDateStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTickerDateTime::DateStrategy} QCPAxisTickerDateTime::mDateStrategy{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDateTimeFormat\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:mDateTimeFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerDateTime::mDateTimeFormat{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDateTimeSpec\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:mDateTimeSpec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::TimeSpec QCPAxisTickerDateTime::mDateTimeSpec{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTimeZone\:QCPAxisTickerDateTime}
{\xe \v QCPAxisTickerDateTime\:mTimeZone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QTimeZone QCPAxisTickerDateTime::mTimeZone{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTickerFixed Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed}
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTickerFixed:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker_fixed.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ScaleStrategy} \{ {\b ssNone}
, {\b ssMultiples}
, {\b ssPowers}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTickerFixed} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickStep} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScaleStrategy} {\b scaleStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStep} (double step)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScaleStrategy} ({\b ScaleStrategy} strategy)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickStep}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScaleStrategy} {\b mScaleStrategy}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ScaleStrategy\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:ScaleStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTickerFixed::ScaleStrategy}}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how the axis ticker may modify the specified tick step ({\b setTickStep}) in order to control the number of ticks in the axis range.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setScaleStrategy} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ssNone\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:ssNone}
{\qr ssNone{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Modifications are not allowed, the specified tick step is absolutely fixed. This might cause a high tick density and overlapping labels if the axis range is zoomed out. \par
}\cell }{\row }
{\xe \v ssMultiples\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:ssMultiples}
{\qr ssMultiples{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An integer multiple of the specified tick step is allowed. The used factor follows the base class properties of {\b setTickStepStrategy} and {\b setTickCount}. \par
}\cell }{\row }
{\xe \v ssPowers\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:ssPowers}
{\qr ssPowers{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An integer power of the specified tick step is allowed. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTickerFixed\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:QCPAxisTickerFixed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTickerFixed::QCPAxisTickerFixed ()}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getTickStep\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxisTickerFixed::getTickStep (const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v scaleStrategy\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:scaleStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScaleStrategy} QCPAxisTickerFixed::scaleStrategy () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScaleStrategy\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:setScaleStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerFixed::setScaleStrategy ({\b ScaleStrategy} strategy)}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickStep\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:setTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerFixed::setTickStep (double step)}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickStep\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:tickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerFixed::tickStep () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mScaleStrategy\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:mScaleStrategy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScaleStrategy} QCPAxisTickerFixed::mScaleStrategy{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickStep\:QCPAxisTickerFixed}
{\xe \v QCPAxisTickerFixed\:mTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerFixed::mTickStep{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTickerLog Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog}
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTickerLog:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker_log.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTickerLog} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b logBase} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLogBase} (double base)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickCount} (int subTicks)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mLogBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSubTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mLogBaseLnInv}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTickerLog\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:QCPAxisTickerLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTickerLog::QCPAxisTickerLog ()}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v createTickVector\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:createTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QVector< double > QCPAxisTickerLog::createTickVector (double tickStep, const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getSubTickCount\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisTickerLog::getSubTickCount (double tickStep){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v logBase\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:logBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerLog::logBase () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLogBase\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:setLogBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerLog::setLogBase (double base)}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickCount\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:setSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerLog::setSubTickCount (int subTicks)}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickCount\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:subTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTickerLog::subTickCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mLogBase\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:mLogBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerLog::mLogBase{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLogBaseLnInv\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:mLogBaseLnInv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerLog::mLogBaseLnInv{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickCount\:QCPAxisTickerLog}
{\xe \v QCPAxisTickerLog\:mSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTickerLog::mSubTickCount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTickerPi Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi}
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTickerPi:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker_pi.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FractionStyle} \{ {\b fsFloatingPoint}
, {\b fsAsciiFractions}
, {\b fsUnicodeFractions}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTickerPi} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b piSymbol} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b piValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b periodicity} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FractionStyle} {\b fractionStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPiSymbol} (QString symbol)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPiValue} (double pi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPeriodicity} (int multiplesOfPi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFractionStyle} ({\b FractionStyle} style)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b simplifyFraction} (int &numerator, int &denominator) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b fractionToString} (int numerator, int denominator) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b unicodeFraction} (int numerator, int denominator) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b unicodeSuperscript} (int number) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b unicodeSubscript} (int number) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mPiSymbol}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mPiValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mPeriodicity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FractionStyle} {\b mFractionStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mPiTickStep}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v FractionStyle\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:FractionStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTickerPi::FractionStyle}}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how fractions should be displayed in tick labels.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setFractionStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v fsFloatingPoint\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:fsFloatingPoint}
{\qr fsFloatingPoint{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractions are displayed as regular decimal floating point numbers, e.g. "0.25" or "0.125". \par
}\cell }{\row }
{\xe \v fsAsciiFractions\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:fsAsciiFractions}
{\qr fsAsciiFractions{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractions are written as rationals using ASCII characters only, e.g. "1/4" or "1/8". \par
}\cell }{\row }
{\xe \v fsUnicodeFractions\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:fsUnicodeFractions}
{\qr fsUnicodeFractions{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fractions are written using sub- and superscript UTF-8 digits and the fraction symbol. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTickerPi\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:QCPAxisTickerPi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTickerPi::QCPAxisTickerPi ()}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fractionStyle\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:fractionStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FractionStyle} QCPAxisTickerPi::fractionStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fractionToString\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:fractionToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerPi::fractionToString (int numerator, int denominator) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickCount\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisTickerPi::getSubTickCount (double tickStep){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickLabel\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:getTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QString QCPAxisTickerPi::getTickLabel (double tick, const QLocale & locale, QChar formatChar, int precision){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickStep\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxisTickerPi::getTickStep (const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v periodicity\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:periodicity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPAxisTickerPi::periodicity () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v piSymbol\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:piSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerPi::piSymbol () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v piValue\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:piValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerPi::piValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFractionStyle\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:setFractionStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerPi::setFractionStyle ({\b FractionStyle} style)}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPeriodicity\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:setPeriodicity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerPi::setPeriodicity (int multiplesOfPi)}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPiSymbol\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:setPiSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerPi::setPiSymbol (QString symbol)}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPiValue\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:setPiValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerPi::setPiValue (double pi)}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v simplifyFraction\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:simplifyFraction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerPi::simplifyFraction (int & numerator, int & denominator) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unicodeFraction\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:unicodeFraction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerPi::unicodeFraction (int numerator, int denominator) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unicodeSubscript\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:unicodeSubscript}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerPi::unicodeSubscript (int number) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unicodeSuperscript\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:unicodeSuperscript}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerPi::unicodeSuperscript (int number) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mFractionStyle\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:mFractionStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FractionStyle} QCPAxisTickerPi::mFractionStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPeriodicity\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:mPeriodicity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTickerPi::mPeriodicity{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPiSymbol\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:mPiSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerPi::mPiSymbol{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPiTickStep\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:mPiTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerPi::mPiTickStep{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPiValue\:QCPAxisTickerPi}
{\xe \v QCPAxisTickerPi\:mPiValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPAxisTickerPi::mPiValue{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTickerText Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTickerText}
{\xe \v QCPAxisTickerText}
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTickerText:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker_text.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTickerText} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMap< double, QString > & {\b ticks} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicks} (const QMap< double, QString > &{\b ticks})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicks} (const QVector< double > &positions, const QVector< QString > &labels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickCount} (int subTicks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addTick} (double position, const QString &label)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addTicks} (const QMap< double, QString > &{\b ticks})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addTicks} (const QVector< double > &positions, const QVector< QString > &labels)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMap< double, QString > {\b mTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSubTickCount}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTickerText\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:QCPAxisTickerText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTickerText::QCPAxisTickerText ()}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addTick\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:addTick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::addTick (double position, const QString & label)}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addTicks\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:addTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::addTicks (const QMap< double, QString > & ticks)}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addTicks\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:addTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::addTicks (const QVector< double > & positions, const QVector< QString > & labels)}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::clear ()}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createTickVector\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:createTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QVector< double > QCPAxisTickerText::createTickVector (double tickStep, const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getSubTickCount\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisTickerText::getSubTickCount (double tickStep){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickLabel\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:getTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QString QCPAxisTickerText::getTickLabel (double tick, const QLocale & locale, QChar formatChar, int precision){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickStep\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxisTickerText::getTickStep (const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setSubTickCount\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:setSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::setSubTickCount (int subTicks)}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicks\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:setTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::setTicks (const QMap< double, QString > & ticks)}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicks\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:setTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerText::setTicks (const QVector< double > & positions, const QVector< QString > & labels)}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickCount\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:subTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTickerText::subTickCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticks\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMap< double, QString > & QCPAxisTickerText::ticks (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mSubTickCount\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:mSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTickerText::mSubTickCount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicks\:QCPAxisTickerText}
{\xe \v QCPAxisTickerText\:mTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMap<double, QString> QCPAxisTickerText::mTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisTickerTime Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime}
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPAxisTickerTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_axis_ticker_time.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TimeUnit} \{ {\b tuMilliseconds}
, {\b tuSeconds}
, {\b tuMinutes}
, {\b tuHours}
, {\b tuDays}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TickStepStrategy} \{ {\b tssReadability}
, {\b tssMeetTickCount}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTickerTime} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b timeFormat} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fieldWidth} ({\b TimeUnit} unit) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTimeFormat} (const QString &format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFieldWidth} ({\b TimeUnit} unit, int width)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisTicker} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b tickStepStrategy} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickOrigin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickStepStrategy} ({\b TickStepStrategy} strategy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickCount} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickOrigin} (double origin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b generate} (const {\b QCPRange} &range, const QLocale &locale, QChar formatChar, int precision, QVector< double > &ticks, QVector< double > *subTicks, QVector< QString > *tickLabels)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b getTickStep} (const {\b QCPRange} &range) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b getSubTickCount} (double tickStep) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QString {\b getTickLabel} (double tick, const QLocale &locale, QChar formatChar, int precision) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b replaceUnit} (QString &text, {\b TimeUnit} unit, int value) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createTickVector} (double tickStep, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< double > {\b createSubTickVector} (int subTickCount, const QVector< double > &ticks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QVector< QString > {\b createLabelVector} (const QVector< double > &ticks, const QLocale &locale, QChar formatChar, int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trimTicks} (const {\b QCPRange} &range, QVector< double > &ticks, bool keepOneOutlier) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pickClosest} (double target, const QVector< double > &candidates) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getMantissa} (double input, double *magnitude=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cleanMantissa} (double input) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mTimeFormat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b TimeUnit}, int > {\b mFieldWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TimeUnit} {\b mSmallestUnit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TimeUnit} {\b mBiggestUnit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b TimeUnit}, QString > {\b mFormatPattern}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisTicker}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TickStepStrategy} {\b mTickStepStrategy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mTickOrigin}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v TimeUnit\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:TimeUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPAxisTickerTime::TimeUnit}}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the logical units in which fractions of time spans can be expressed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setFieldWidth}, {\b setTimeFormat} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v tuMilliseconds\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:tuMilliseconds}
{\qr tuMilliseconds{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Milliseconds, one thousandth of a second (%z in {\b setTimeFormat}) \par
}\cell }{\row }
{\xe \v tuSeconds\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:tuSeconds}
{\qr tuSeconds{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seconds (%s in {\b setTimeFormat}) \par
}\cell }{\row }
{\xe \v tuMinutes\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:tuMinutes}
{\qr tuMinutes{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minutes (%m in {\b setTimeFormat}) \par
}\cell }{\row }
{\xe \v tuHours\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:tuHours}
{\qr tuHours{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hours (%h in {\b setTimeFormat}) \par
}\cell }{\row }
{\xe \v tuDays\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:tuDays}
{\qr tuDays{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Days (%d in {\b setTimeFormat}) \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPAxisTickerTime\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:QCPAxisTickerTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPAxisTickerTime::QCPAxisTickerTime ()}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fieldWidth\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:fieldWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPAxisTickerTime::fieldWidth ({\b TimeUnit} unit) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickCount\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:getSubTickCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisTickerTime::getSubTickCount (double tickStep){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickLabel\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:getTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QString QCPAxisTickerTime::getTickLabel (double tick, const QLocale & locale, QChar formatChar, int precision){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getTickStep\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:getTickStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPAxisTickerTime::getTickStep (const {\b QCPRange} & range){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisTicker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABFK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v replaceUnit\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:replaceUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerTime::replaceUnit (QString & text, {\b TimeUnit} unit, int value) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFieldWidth\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:setFieldWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerTime::setFieldWidth ({\b TimeUnit} unit, int width)}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTimeFormat\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:setTimeFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPAxisTickerTime::setTimeFormat (const QString & format)}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timeFormat\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:timeFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerTime::timeFormat () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBiggestUnit\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:mBiggestUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TimeUnit} QCPAxisTickerTime::mBiggestUnit{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mFieldWidth\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:mFieldWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QHash<{\b TimeUnit}, int> QCPAxisTickerTime::mFieldWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mFormatPattern\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:mFormatPattern}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QHash<{\b TimeUnit}, QString> QCPAxisTickerTime::mFormatPattern{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSmallestUnit\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:mSmallestUnit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TimeUnit} QCPAxisTickerTime::mSmallestUnit{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTimeFormat\:QCPAxisTickerTime}
{\xe \v QCPAxisTickerTime\:mTimeFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisTickerTime::mTimeFormat{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPBars Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPBars}
{\xe \v QCPBars}
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPBars:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_bars.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WidthType} \{ {\b wtAbsolute}
, {\b wtAxisRectRatio}
, {\b wtPlotCoords}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBars} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPBars} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WidthType} {\b widthType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBarsGroup} * {\b barsGroup} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b baseValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stackingGap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBars} * {\b barBelow} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBars} * {\b barAbove} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPBarsDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPBarsDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidth} (double {\b width})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidthType} ({\b WidthType} {\b widthType})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBarsGroup} ({\b QCPBarsGroup} *{\b barsGroup})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBaseValue} (double {\b baseValue})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStackingGap} (double pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double key, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveBelow} ({\b QCPBars} *bars)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveAbove} ({\b QCPBars} *bars)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable1D< QCPBarsData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable1D} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable1D} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVisibleDataBounds} ({\b QCPBarsDataContainer::const_iterator} &begin, {\b QCPBarsDataContainer::const_iterator} &end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRectF {\b getBarRect} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getPixelWidth} (double key, double &lower, double &upper) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getStackedBaseValue} (double key, bool positive) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable1D< QCPBarsData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b connectBars} ({\b QCPBars} *lower, {\b QCPBars} *upper)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WidthType} {\b mWidthType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBarsGroup} * {\b mBarsGroup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mBaseValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mStackingGap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPBars} > {\b mBarBelow}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPBars} > {\b mBarAbove}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable1D< QCPBarsData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPDataContainer}< {\b QCPBarsData} > > {\b mDataContainer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPBarsGroup}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v WidthType\:QCPBars}
{\xe \v QCPBars\:WidthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPBars::WidthType}}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the ways the width of the bar can be specified. Thus it defines what the number passed to {\b setWidth} actually means.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setWidthType}, {\b setWidth} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v wtAbsolute\:QCPBars}
{\xe \v QCPBars\:wtAbsolute}
{\qr wtAbsolute{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bar width is in absolute pixels. \par
}\cell }{\row }
{\xe \v wtAxisRectRatio\:QCPBars}
{\xe \v QCPBars\:wtAxisRectRatio}
{\qr wtAxisRectRatio{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bar width is given by a fraction of the axis rect size. \par
}\cell }{\row }
{\xe \v wtPlotCoords\:QCPBars}
{\xe \v QCPBars\:wtPlotCoords}
{\qr wtPlotCoords{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bar width is in key coordinates and thus scales with the key axis range. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPBars\:QCPBars}
{\xe \v QCPBars\:QCPBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPBars::QCPBars ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPBars\:QCPBars}
{\xe \v QCPBars\:~QCPBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPBars::~QCPBars (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addData\:QCPBars}
{\xe \v QCPBars\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::addData (const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPBars}
{\xe \v QCPBars\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::addData (double key, double value)}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barAbove\:QCPBars}
{\xe \v QCPBars\:barAbove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPBars} * QCPBars::barAbove () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barBelow\:QCPBars}
{\xe \v QCPBars\:barBelow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPBars} * QCPBars::barBelow () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barsGroup\:QCPBars}
{\xe \v QCPBars\:barsGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPBarsGroup} * QCPBars::barsGroup () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v baseValue\:QCPBars}
{\xe \v QCPBars\:baseValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::baseValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v connectBars\:QCPBars}
{\xe \v QCPBars\:connectBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void QCPBars::connectBars ({\b QCPBars} * lower, {\b QCPBars} * upper){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPBars}
{\xe \v QCPBars\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPBarsDataContainer} > QCPBars::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataPixelPosition\:QCPBars}
{\xe \v QCPBars\:dataPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPBars::dataPixelPosition (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
}}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the pixel position on the widget surface at which the data point at the given {\i index}  appears.\par
Usually this corresponds to the point of dataMainKey/ dataMainValue, in pixel coordinates. However, depending on the plottable, this might be a different apparent position than just a coord-to-pixel transform of those values. For example, {\b QCPBars} apparent data values can be shifted depending on their stacking, bar grouping or configured base value.    \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPBars}
{\xe \v QCPBars\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPBars::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawLegendIcon\:QCPBars}
{\xe \v QCPBars\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPBars::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getBarRect\:QCPBars}
{\xe \v QCPBars\:getBarRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRectF QCPBars::getBarRect (double key, double value) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPBars}
{\xe \v QCPBars\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPBars::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getPixelWidth\:QCPBars}
{\xe \v QCPBars\:getPixelWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::getPixelWidth (double key, double & lower, double & upper) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getStackedBaseValue\:QCPBars}
{\xe \v QCPBars\:getStackedBaseValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::getStackedBaseValue (double key, bool positive) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getValueRange\:QCPBars}
{\xe \v QCPBars\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPBars::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getVisibleDataBounds\:QCPBars}
{\xe \v QCPBars\:getVisibleDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::getVisibleDataBounds ({\b QCPBarsDataContainer::const_iterator} & begin, {\b QCPBarsDataContainer::const_iterator} & end) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v moveAbove\:QCPBars}
{\xe \v QCPBars\:moveAbove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::moveAbove ({\b QCPBars} * bars)}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v moveBelow\:QCPBars}
{\xe \v QCPBars\:moveBelow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::moveBelow ({\b QCPBars} * bars)}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPBars}
{\xe \v QCPBars\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPBars::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a point-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
If {\i details}  is not 0, it will be set to a {\b QCPDataSelection}, describing the closest data point to {\i pos} .\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTestRect\:QCPBars}
{\xe \v QCPBars\:selectTestRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPDataSelection} QCPBars::selectTestRect (const QRectF & rect, bool onlySelectable) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a rect-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBarsGroup\:QCPBars}
{\xe \v QCPBars\:setBarsGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setBarsGroup ({\b QCPBarsGroup} * barsGroup)}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBaseValue\:QCPBars}
{\xe \v QCPBars\:setBaseValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setBaseValue (double baseValue)}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPBars}
{\xe \v QCPBars\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setData (const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPBars}
{\xe \v QCPBars\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setData (QSharedPointer< {\b QCPBarsDataContainer} > data)}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setStackingGap\:QCPBars}
{\xe \v QCPBars\:setStackingGap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setStackingGap (double pixels)}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWidth\:QCPBars}
{\xe \v QCPBars\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setWidth (double width)}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWidthType\:QCPBars}
{\xe \v QCPBars\:setWidthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBars::setWidthType ({\b WidthType} widthType)}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stackingGap\:QCPBars}
{\xe \v QCPBars\:stackingGap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::stackingGap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:QCPBars}
{\xe \v QCPBars\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::width () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v widthType\:QCPBars}
{\xe \v QCPBars\:widthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WidthType} QCPBars::widthType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPBarsGroup\:QCPBars}
{\xe \v QCPBars\:QCPBarsGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPBarsGroup}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPLegend\:QCPBars}
{\xe \v QCPBars\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPBars}
{\xe \v QCPBars\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBarAbove\:QCPBars}
{\xe \v QCPBars\:mBarAbove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPBars}> QCPBars::mBarAbove{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBarBelow\:QCPBars}
{\xe \v QCPBars\:mBarBelow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPBars}> QCPBars::mBarBelow{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBarsGroup\:QCPBars}
{\xe \v QCPBars\:mBarsGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPBarsGroup}* QCPBars::mBarsGroup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBaseValue\:QCPBars}
{\xe \v QCPBars\:mBaseValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::mBaseValue{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mStackingGap\:QCPBars}
{\xe \v QCPBars\:mStackingGap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::mStackingGap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWidth\:QCPBars}
{\xe \v QCPBars\:mWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBars::mWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWidthType\:QCPBars}
{\xe \v QCPBars\:mWidthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WidthType} QCPBars::mWidthType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPBarsData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPBarsData}
{\xe \v QCPBarsData}
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBarsData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBarsData} (double {\b key}, double {\b value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sortKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b QCPBarsData} {\b fromSortKey} (double {\b sortKey})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b sortKeyIsMainKey} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b key}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPBarsData\:QCPBarsData}
{\xe \v QCPBarsData\:QCPBarsData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPBarsData::QCPBarsData ()}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPBarsData\:QCPBarsData}
{\xe \v QCPBarsData\:QCPBarsData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPBarsData::QCPBarsData (double key, double value)}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fromSortKey\:QCPBarsData}
{\xe \v QCPBarsData\:fromSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b QCPBarsData} QCPBarsData::fromSortKey (double sortKey){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainKey\:QCPBarsData}
{\xe \v QCPBarsData\:mainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsData::mainKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainValue\:QCPBarsData}
{\xe \v QCPBarsData\:mainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsData::mainValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKey\:QCPBarsData}
{\xe \v QCPBarsData\:sortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsData::sortKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKeyIsMainKey\:QCPBarsData}
{\xe \v QCPBarsData\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPBarsData::sortKeyIsMainKey (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueRange\:QCPBarsData}
{\xe \v QCPBarsData\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPBarsData::valueRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v key\:QCPBarsData}
{\xe \v QCPBarsData\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsData::key}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:QCPBarsData}
{\xe \v QCPBarsData\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsData::value}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPBarsGroup Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPBarsGroup}
{\xe \v QCPBarsGroup}
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPBarsGroup:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_bars_group.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SpacingType} \{ {\b stAbsolute}
, {\b stAxisRectRatio}
, {\b stPlotCoords}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBarsGroup} ({\b QCustomPlot} *parentPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPBarsGroup} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SpacingType} {\b spacingType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b spacing} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSpacingType} ({\b SpacingType} {\b spacingType})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSpacing} (double {\b spacing})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPBars} * > {\b bars} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPBars} * {\b bars} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b contains} ({\b QCPBars} *{\b bars}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b append} ({\b QCPBars} *{\b bars})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insert} (int i, {\b QCPBars} *{\b bars})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b remove} ({\b QCPBars} *{\b bars})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b registerBars} ({\b QCPBars} *{\b bars})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b unregisterBars} ({\b QCPBars} *{\b bars})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b keyPixelOffset} (const {\b QCPBars} *{\b bars}, double keyCoord)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPixelSpacing} (const {\b QCPBars} *{\b bars}, double keyCoord)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SpacingType} {\b mSpacingType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mSpacing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPBars} * > {\b mBars}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPBars}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v SpacingType\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:SpacingType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPBarsGroup::SpacingType}}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the ways the spacing between bars in the group can be specified. Thus it defines what the number passed to {\b setSpacing} actually means.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSpacingType}, {\b setSpacing} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v stAbsolute\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:stAbsolute}
{\qr stAbsolute{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bar spacing is in absolute pixels. \par
}\cell }{\row }
{\xe \v stAxisRectRatio\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:stAxisRectRatio}
{\qr stAxisRectRatio{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bar spacing is given by a fraction of the axis rect size. \par
}\cell }{\row }
{\xe \v stPlotCoords\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:stPlotCoords}
{\qr stPlotCoords{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bar spacing is in key coordinates and thus scales with the key axis range. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPBarsGroup\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:QCPBarsGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPBarsGroup::QCPBarsGroup ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPBarsGroup\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:~QCPBarsGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPBarsGroup::~QCPBarsGroup (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v append\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::append ({\b QCPBars} * bars)}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bars\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:bars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPBars} * > QCPBarsGroup::bars () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bars\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:bars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPBars} * QCPBarsGroup::bars (int index) const}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::clear ()}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v contains\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:contains}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPBarsGroup::contains ({\b QCPBars} * bars) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getPixelSpacing\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:getPixelSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsGroup::getPixelSpacing (const {\b QCPBars} * bars, double keyCoord){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insert\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::insert (int i, {\b QCPBars} * bars)}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isEmpty\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPBarsGroup::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keyPixelOffset\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:keyPixelOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsGroup::keyPixelOffset (const {\b QCPBars} * bars, double keyCoord){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerBars\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:registerBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::registerBars ({\b QCPBars} * bars){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remove\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::remove ({\b QCPBars} * bars)}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSpacing\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:setSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::setSpacing (double spacing)}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSpacingType\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:setSpacingType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::setSpacingType ({\b SpacingType} spacingType)}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPBarsGroup::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v spacing\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:spacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsGroup::spacing () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v spacingType\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:spacingType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SpacingType} QCPBarsGroup::spacingType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unregisterBars\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:unregisterBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPBarsGroup::unregisterBars ({\b QCPBars} * bars){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPBars\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:QCPBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPBars}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBars\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:mBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPBars}*> QCPBarsGroup::mBars{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPBarsGroup::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSpacing\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:mSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPBarsGroup::mSpacing{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSpacingType\:QCPBarsGroup}
{\xe \v QCPBarsGroup\:mSpacingType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SpacingType} QCPBarsGroup::mSpacingType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPColorGradient Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPColorGradient}
{\xe \v QCPColorGradient}
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ColorInterpolation} \{ {\b ciRGB}
, {\b ciHSV}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b NanHandling} \{ {\b nhNone}
, {\b nhLowestColor}
, {\b nhHighestColor}
, {\b nhTransparent}
, {\b nhNanColor}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GradientPreset} \{ {\b gpGrayscale}
, {\b gpHot}
, {\b gpCold}
, {\b gpNight}
, {\b gpCandy}
, {\b gpGeography}
, {\b gpIon}
, {\b gpThermal}
, {\b gpPolar}
, {\b gpSpectrum}
, {\b gpJet}
, {\b gpHues}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} ({\b GradientPreset} preset)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b QCPColorGradient} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b QCPColorGradient} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b levelCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMap< double, QColor > {\b colorStops} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ColorInterpolation} {\b colorInterpolation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NanHandling} {\b nanHandling} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b nanColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b periodic} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLevelCount} (int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColorStops} (const QMap< double, QColor > &{\b colorStops})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColorStopAt} (double position, const QColor &{\b color})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColorInterpolation} ({\b ColorInterpolation} interpolation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNanHandling} ({\b NanHandling} handling)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNanColor} (const QColor &{\b color})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPeriodic} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b colorize} (const double *data, const {\b QCPRange} &range, QRgb *scanLine, int n, int dataIndexFactor=1, bool logarithmic=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b colorize} (const double *data, const unsigned char *alpha, const {\b QCPRange} &range, QRgb *scanLine, int n, int dataIndexFactor=1, bool logarithmic=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRgb {\b color} (double position, const {\b QCPRange} &range, bool logarithmic=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadPreset} ({\b GradientPreset} preset)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearColorStops} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} {\b inverted} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stopsUseAlpha} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateColorBuffer} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mLevelCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMap< double, QColor > {\b mColorStops}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ColorInterpolation} {\b mColorInterpolation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NanHandling} {\b mNanHandling}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mNanColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mPeriodic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QRgb > {\b mColorBuffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mColorBufferInvalidated}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ColorInterpolation\:QCPColorGradient}
{\xe \v QCPColorGradient\:ColorInterpolation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPColorGradient::ColorInterpolation}}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the color spaces in which color interpolation between gradient stops can be performed.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setColorInterpolation} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ciRGB\:QCPColorGradient}
{\xe \v QCPColorGradient\:ciRGB}
{\qr ciRGB{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Color channels red, green and blue are linearly interpolated. \par
}\cell }{\row }
{\xe \v ciHSV\:QCPColorGradient}
{\xe \v QCPColorGradient\:ciHSV}
{\qr ciHSV{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Color channels hue, saturation and value are linearly interpolated (The hue is interpolated over the shortest angle distance) \par
}\cell }{\row }
}
}
{\xe \v GradientPreset\:QCPColorGradient}
{\xe \v QCPColorGradient\:GradientPreset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPColorGradient::GradientPreset}}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the available presets that can be loaded with {\b loadPreset}. See the documentation there for an image of the presets. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v gpGrayscale\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpGrayscale}
{\qr gpGrayscale{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Continuous lightness from black to white (suited for non-biased data representation) \par
}\cell }{\row }
{\xe \v gpHot\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpHot}
{\qr gpHot{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Continuous lightness from black over firey colors to white (suited for non-biased data representation) \par
}\cell }{\row }
{\xe \v gpCold\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpCold}
{\qr gpCold{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Continuous lightness from black over icey colors to white (suited for non-biased data representation) \par
}\cell }{\row }
{\xe \v gpNight\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpNight}
{\qr gpNight{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Continuous lightness from black over weak blueish colors to white (suited for non-biased data representation) \par
}\cell }{\row }
{\xe \v gpCandy\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpCandy}
{\qr gpCandy{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blue over pink to white. \par
}\cell }{\row }
{\xe \v gpGeography\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpGeography}
{\qr gpGeography{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Colors suitable to represent different elevations on geographical maps. \par
}\cell }{\row }
{\xe \v gpIon\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpIon}
{\qr gpIon{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Half hue spectrum from black over purple to blue and finally green (creates banding illusion but allows more precise magnitude estimates) \par
}\cell }{\row }
{\xe \v gpThermal\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpThermal}
{\qr gpThermal{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Colors suitable for thermal imaging, ranging from dark blue over purple to orange, yellow and white. \par
}\cell }{\row }
{\xe \v gpPolar\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpPolar}
{\qr gpPolar{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Colors suitable to emphasize polarity around the center, with blue for negative, black in the middle and red for positive values. \par
}\cell }{\row }
{\xe \v gpSpectrum\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpSpectrum}
{\qr gpSpectrum{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An approximation of the visible light spectrum (creates banding illusion but allows more precise magnitude estimates) \par
}\cell }{\row }
{\xe \v gpJet\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpJet}
{\qr gpJet{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hue variation similar to a spectrum, often used in numerical visualization (creates banding illusion but allows more precise magnitude estimates) \par
}\cell }{\row }
{\xe \v gpHues\:QCPColorGradient}
{\xe \v QCPColorGradient\:gpHues}
{\qr gpHues{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Full hue cycle, with highest and lowest color red (suitable for periodic data, such as angles and phases, see {\b setPeriodic}) \par
}\cell }{\row }
}
}
{\xe \v NanHandling\:QCPColorGradient}
{\xe \v QCPColorGradient\:NanHandling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPColorGradient::NanHandling}}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how NaN data points shall appear in the plot.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setNanHandling}, {\b setNanColor} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v nhNone\:QCPColorGradient}
{\xe \v QCPColorGradient\:nhNone}
{\qr nhNone{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NaN data points are not explicitly handled and shouldn't occur in the data (this gives slight performance improvement) \par
}\cell }{\row }
{\xe \v nhLowestColor\:QCPColorGradient}
{\xe \v QCPColorGradient\:nhLowestColor}
{\qr nhLowestColor{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NaN data points appear as the lowest color defined in this {\b QCPColorGradient}. \par
}\cell }{\row }
{\xe \v nhHighestColor\:QCPColorGradient}
{\xe \v QCPColorGradient\:nhHighestColor}
{\qr nhHighestColor{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NaN data points appear as the highest color defined in this {\b QCPColorGradient}. \par
}\cell }{\row }
{\xe \v nhTransparent\:QCPColorGradient}
{\xe \v QCPColorGradient\:nhTransparent}
{\qr nhTransparent{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NaN data points appear transparent. \par
}\cell }{\row }
{\xe \v nhNanColor\:QCPColorGradient}
{\xe \v QCPColorGradient\:nhNanColor}
{\qr nhNanColor{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NaN data points appear as the color defined with {\b setNanColor}. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPColorGradient\:QCPColorGradient}
{\xe \v QCPColorGradient\:QCPColorGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorGradient::QCPColorGradient ()}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPColorGradient\:QCPColorGradient}
{\xe \v QCPColorGradient\:QCPColorGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorGradient::QCPColorGradient ({\b GradientPreset} preset)}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clearColorStops\:QCPColorGradient}
{\xe \v QCPColorGradient\:clearColorStops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::clearColorStops ()}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v color\:QCPColorGradient}
{\xe \v QCPColorGradient\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRgb QCPColorGradient::color (double position, const {\b QCPRange} & range, bool logarithmic = {\f2 false})}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colorInterpolation\:QCPColorGradient}
{\xe \v QCPColorGradient\:colorInterpolation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ColorInterpolation} QCPColorGradient::colorInterpolation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colorize\:QCPColorGradient}
{\xe \v QCPColorGradient\:colorize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::colorize (const double * data, const {\b QCPRange} & range, QRgb * scanLine, int n, int dataIndexFactor = {\f2 1}, bool logarithmic = {\f2 false})}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colorize\:QCPColorGradient}
{\xe \v QCPColorGradient\:colorize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::colorize (const double * data, const unsigned char * alpha, const {\b QCPRange} & range, QRgb * scanLine, int n, int dataIndexFactor = {\f2 1}, bool logarithmic = {\f2 false})}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colorStops\:QCPColorGradient}
{\xe \v QCPColorGradient\:colorStops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMap< double, QColor > QCPColorGradient::colorStops () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inverted\:QCPColorGradient}
{\xe \v QCPColorGradient\:inverted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorGradient} QCPColorGradient::inverted () const}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v levelCount\:QCPColorGradient}
{\xe \v QCPColorGradient\:levelCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorGradient::levelCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loadPreset\:QCPColorGradient}
{\xe \v QCPColorGradient\:loadPreset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::loadPreset ({\b GradientPreset} preset)}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nanColor\:QCPColorGradient}
{\xe \v QCPColorGradient\:nanColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPColorGradient::nanColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nanHandling\:QCPColorGradient}
{\xe \v QCPColorGradient\:nanHandling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NanHandling} QCPColorGradient::nanHandling () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator!=\:QCPColorGradient}
{\xe \v QCPColorGradient\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorGradient::operator!= (const {\b QCPColorGradient} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:QCPColorGradient}
{\xe \v QCPColorGradient\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorGradient::operator== (const {\b QCPColorGradient} & other) const}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v periodic\:QCPColorGradient}
{\xe \v QCPColorGradient\:periodic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorGradient::periodic () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColorInterpolation\:QCPColorGradient}
{\xe \v QCPColorGradient\:setColorInterpolation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setColorInterpolation ({\b ColorInterpolation} interpolation)}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColorStopAt\:QCPColorGradient}
{\xe \v QCPColorGradient\:setColorStopAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setColorStopAt (double position, const QColor & color)}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColorStops\:QCPColorGradient}
{\xe \v QCPColorGradient\:setColorStops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setColorStops (const QMap< double, QColor > & colorStops)}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLevelCount\:QCPColorGradient}
{\xe \v QCPColorGradient\:setLevelCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setLevelCount (int n)}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNanColor\:QCPColorGradient}
{\xe \v QCPColorGradient\:setNanColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setNanColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNanHandling\:QCPColorGradient}
{\xe \v QCPColorGradient\:setNanHandling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setNanHandling ({\b NanHandling} handling)}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPeriodic\:QCPColorGradient}
{\xe \v QCPColorGradient\:setPeriodic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::setPeriodic (bool enabled)}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stopsUseAlpha\:QCPColorGradient}
{\xe \v QCPColorGradient\:stopsUseAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorGradient::stopsUseAlpha () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateColorBuffer\:QCPColorGradient}
{\xe \v QCPColorGradient\:updateColorBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorGradient::updateColorBuffer (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mColorBuffer\:QCPColorGradient}
{\xe \v QCPColorGradient\:mColorBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QRgb> QCPColorGradient::mColorBuffer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColorBufferInvalidated\:QCPColorGradient}
{\xe \v QCPColorGradient\:mColorBufferInvalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorGradient::mColorBufferInvalidated{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColorInterpolation\:QCPColorGradient}
{\xe \v QCPColorGradient\:mColorInterpolation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ColorInterpolation} QCPColorGradient::mColorInterpolation{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColorStops\:QCPColorGradient}
{\xe \v QCPColorGradient\:mColorStops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMap<double, QColor> QCPColorGradient::mColorStops{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLevelCount\:QCPColorGradient}
{\xe \v QCPColorGradient\:mLevelCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorGradient::mLevelCount{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNanColor\:QCPColorGradient}
{\xe \v QCPColorGradient\:mNanColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPColorGradient::mNanColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNanHandling\:QCPColorGradient}
{\xe \v QCPColorGradient\:mNanHandling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NanHandling} QCPColorGradient::mNanHandling{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPeriodic\:QCPColorGradient}
{\xe \v QCPColorGradient\:mPeriodic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorGradient::mPeriodic{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPColorMap Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPColorMap}
{\xe \v QCPColorMap}
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPColorMap:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_color_map.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dataRangeChanged} (const {\b QCPRange} &newRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dataScaleTypeChanged} ({\b QCPAxis::ScaleType} scaleType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gradientChanged} (const {\b QCPColorGradient} &newGradient)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorMap} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPColorMap} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorMapData} * {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b dataRange} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::ScaleType} {\b dataScaleType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b interpolate} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tightBoundary} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} {\b gradient} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorScale} * {\b colorScale} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} ({\b QCPColorMapData} *{\b data}, bool copy=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setDataRange} (const {\b QCPRange} &{\b dataRange})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setDataScaleType} ({\b QCPAxis::ScaleType} scaleType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setGradient} (const {\b QCPColorGradient} &{\b gradient})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInterpolate} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTightBoundary} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColorScale} ({\b QCPColorScale} *{\b colorScale})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleDataRange} (bool recalculateDataBounds=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b updateLegendIcon} (Qt::TransformationMode transformMode=Qt::SmoothTransformation, const QSize &thumbSize=QSize(32, 18))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateMapImage} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mDataRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::ScaleType} {\b mDataScaleType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorMapData} * {\b mMapData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} {\b mGradient}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mInterpolate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTightBoundary}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPColorScale} > {\b mColorScale}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QImage {\b mMapImage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QImage {\b mUndersampledMapImage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mLegendIcon}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mMapImageInvalidated}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPColorMap\:QCPColorMap}
{\xe \v QCPColorMap\:QCPColorMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorMap::QCPColorMap ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPColorMap\:QCPColorMap}
{\xe \v QCPColorMap\:~QCPColorMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPColorMap::~QCPColorMap (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v colorScale\:QCPColorMap}
{\xe \v QCPColorMap\:colorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorScale} * QCPColorMap::colorScale () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPColorMap}
{\xe \v QCPColorMap\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorMapData} * QCPColorMap::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRange\:QCPColorMap}
{\xe \v QCPColorMap\:dataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMap::dataRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRangeChanged\:QCPColorMap}
{\xe \v QCPColorMap\:dataRangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::dataRangeChanged (const {\b QCPRange} & newRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataScaleType\:QCPColorMap}
{\xe \v QCPColorMap\:dataScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::ScaleType} QCPColorMap::dataScaleType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataScaleTypeChanged\:QCPColorMap}
{\xe \v QCPColorMap\:dataScaleTypeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::dataScaleTypeChanged ({\b QCPAxis::ScaleType} scaleType){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPColorMap}
{\xe \v QCPColorMap\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorMap::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawLegendIcon\:QCPColorMap}
{\xe \v QCPColorMap\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorMap::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getKeyRange\:QCPColorMap}
{\xe \v QCPColorMap\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPColorMap::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getValueRange\:QCPColorMap}
{\xe \v QCPColorMap\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPColorMap::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v gradient\:QCPColorMap}
{\xe \v QCPColorMap\:gradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorGradient} QCPColorMap::gradient () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gradientChanged\:QCPColorMap}
{\xe \v QCPColorMap\:gradientChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::gradientChanged (const {\b QCPColorGradient} & newGradient){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v interpolate\:QCPColorMap}
{\xe \v QCPColorMap\:interpolate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMap::interpolate () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleDataRange\:QCPColorMap}
{\xe \v QCPColorMap\:rescaleDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::rescaleDataRange (bool recalculateDataBounds = {\f2 false})}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPColorMap}
{\xe \v QCPColorMap\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPColorMap::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setColorScale\:QCPColorMap}
{\xe \v QCPColorMap\:setColorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::setColorScale ({\b QCPColorScale} * colorScale)}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPColorMap}
{\xe \v QCPColorMap\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::setData ({\b QCPColorMapData} * data, bool copy = {\f2 false})}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDataRange\:QCPColorMap}
{\xe \v QCPColorMap\:setDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorMap::setDataRange (const {\b QCPRange} & dataRange)}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDataScaleType\:QCPColorMap}
{\xe \v QCPColorMap\:setDataScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorMap::setDataScaleType ({\b QCPAxis::ScaleType} scaleType)}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setGradient\:QCPColorMap}
{\xe \v QCPColorMap\:setGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorMap::setGradient (const {\b QCPColorGradient} & gradient)}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInterpolate\:QCPColorMap}
{\xe \v QCPColorMap\:setInterpolate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::setInterpolate (bool enabled)}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTightBoundary\:QCPColorMap}
{\xe \v QCPColorMap\:setTightBoundary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMap::setTightBoundary (bool enabled)}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tightBoundary\:QCPColorMap}
{\xe \v QCPColorMap\:tightBoundary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMap::tightBoundary () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateLegendIcon\:QCPColorMap}
{\xe \v QCPColorMap\:updateLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorMap::updateLegendIcon (Qt::TransformationMode transformMode = {\f2 Qt::SmoothTransformation}, const QSize & thumbSize = {\f2 QSize(32,\~ 18)})}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateMapImage\:QCPColorMap}
{\xe \v QCPColorMap\:updateMapImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorMap::updateMapImage (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPColorMap}
{\xe \v QCPColorMap\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPColorMap}
{\xe \v QCPColorMap\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mColorScale\:QCPColorMap}
{\xe \v QCPColorMap\:mColorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPColorScale}> QCPColorMap::mColorScale{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataRange\:QCPColorMap}
{\xe \v QCPColorMap\:mDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMap::mDataRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataScaleType\:QCPColorMap}
{\xe \v QCPColorMap\:mDataScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::ScaleType} QCPColorMap::mDataScaleType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGradient\:QCPColorMap}
{\xe \v QCPColorMap\:mGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorGradient} QCPColorMap::mGradient{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInterpolate\:QCPColorMap}
{\xe \v QCPColorMap\:mInterpolate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMap::mInterpolate{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLegendIcon\:QCPColorMap}
{\xe \v QCPColorMap\:mLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPColorMap::mLegendIcon{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMapData\:QCPColorMap}
{\xe \v QCPColorMap\:mMapData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorMapData}* QCPColorMap::mMapData{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMapImage\:QCPColorMap}
{\xe \v QCPColorMap\:mMapImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QImage QCPColorMap::mMapImage{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMapImageInvalidated\:QCPColorMap}
{\xe \v QCPColorMap\:mMapImageInvalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMap::mMapImageInvalidated{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTightBoundary\:QCPColorMap}
{\xe \v QCPColorMap\:mTightBoundary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMap::mTightBoundary{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mUndersampledMapImage\:QCPColorMap}
{\xe \v QCPColorMap\:mUndersampledMapImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QImage QCPColorMap::mUndersampledMapImage{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPColorMapData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPColorMapData}
{\xe \v QCPColorMapData}
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorMapData} (int {\b keySize}, int {\b valueSize}, const {\b QCPRange} &{\b keyRange}, const {\b QCPRange} &{\b valueRange})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~QCPColorMapData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorMapData} (const {\b QCPColorMapData} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorMapData} & {\b operator=} (const {\b QCPColorMapData} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b keySize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b valueSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b keyRange} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b dataBounds} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b data} (double key, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cell} (int keyIndex, int valueIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b alpha} (int keyIndex, int valueIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (int {\b keySize}, int {\b valueSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeySize} (int {\b keySize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueSize} (int {\b valueSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (const {\b QCPRange} &{\b keyRange}, const {\b QCPRange} &{\b valueRange})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyRange} (const {\b QCPRange} &{\b keyRange})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueRange} (const {\b QCPRange} &{\b valueRange})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (double key, double value, double z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCell} (int keyIndex, int valueIndex, double z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlpha} (int keyIndex, int valueIndex, unsigned char {\b alpha})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b recalculateDataBounds} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearAlpha} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fill} (double z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fillAlpha} (unsigned char {\b alpha})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordToCell} (double key, double value, int *keyIndex, int *valueIndex) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cellToCoord} (int keyIndex, int valueIndex, double *key, double *value) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b createAlpha} (bool initializeOpaque=true)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mKeySize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mValueSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mKeyRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mValueRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mIsEmpty}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b mData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b mAlpha}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mDataBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mDataModified}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorMap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPColorMapData\:QCPColorMapData}
{\xe \v QCPColorMapData\:QCPColorMapData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorMapData::QCPColorMapData (int keySize, int valueSize, const {\b QCPRange} & keyRange, const {\b QCPRange} & valueRange)}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPColorMapData\:QCPColorMapData}
{\xe \v QCPColorMapData\:~QCPColorMapData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorMapData::~QCPColorMapData ()}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPColorMapData\:QCPColorMapData}
{\xe \v QCPColorMapData\:QCPColorMapData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorMapData::QCPColorMapData (const {\b QCPColorMapData} & other)}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v alpha\:QCPColorMapData}
{\xe \v QCPColorMapData\:alpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char QCPColorMapData::alpha (int keyIndex, int valueIndex)}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cell\:QCPColorMapData}
{\xe \v QCPColorMapData\:cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPColorMapData::cell (int keyIndex, int valueIndex)}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cellToCoord\:QCPColorMapData}
{\xe \v QCPColorMapData\:cellToCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::cellToCoord (int keyIndex, int valueIndex, double * key, double * value) const}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear\:QCPColorMapData}
{\xe \v QCPColorMapData\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::clear ()}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearAlpha\:QCPColorMapData}
{\xe \v QCPColorMapData\:clearAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::clearAlpha ()}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordToCell\:QCPColorMapData}
{\xe \v QCPColorMapData\:coordToCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::coordToCell (double key, double value, int * keyIndex, int * valueIndex) const}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createAlpha\:QCPColorMapData}
{\xe \v QCPColorMapData\:createAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMapData::createAlpha (bool initializeOpaque = {\f2 true}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPColorMapData}
{\xe \v QCPColorMapData\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPColorMapData::data (double key, double value)}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataBounds\:QCPColorMapData}
{\xe \v QCPColorMapData\:dataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMapData::dataBounds () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill\:QCPColorMapData}
{\xe \v QCPColorMapData\:fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::fill (double z)}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fillAlpha\:QCPColorMapData}
{\xe \v QCPColorMapData\:fillAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::fillAlpha (unsigned char alpha)}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isEmpty\:QCPColorMapData}
{\xe \v QCPColorMapData\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMapData::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keyRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:keyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMapData::keyRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keySize\:QCPColorMapData}
{\xe \v QCPColorMapData\:keySize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorMapData::keySize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator=\:QCPColorMapData}
{\xe \v QCPColorMapData\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorMapData} & QCPColorMapData::operator= (const {\b QCPColorMapData} & other)}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recalculateDataBounds\:QCPColorMapData}
{\xe \v QCPColorMapData\:recalculateDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::recalculateDataBounds ()}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAlpha\:QCPColorMapData}
{\xe \v QCPColorMapData\:setAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setAlpha (int keyIndex, int valueIndex, unsigned char alpha)}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCell\:QCPColorMapData}
{\xe \v QCPColorMapData\:setCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setCell (int keyIndex, int valueIndex, double z)}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPColorMapData}
{\xe \v QCPColorMapData\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setData (double key, double value, double z)}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setKeyRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:setKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setKeyRange (const {\b QCPRange} & keyRange)}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setKeySize\:QCPColorMapData}
{\xe \v QCPColorMapData\:setKeySize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setKeySize (int keySize)}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setRange (const {\b QCPRange} & keyRange, const {\b QCPRange} & valueRange)}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSize\:QCPColorMapData}
{\xe \v QCPColorMapData\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setSize (int keySize, int valueSize)}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setValueRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:setValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setValueRange (const {\b QCPRange} & valueRange)}}
\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setValueSize\:QCPColorMapData}
{\xe \v QCPColorMapData\:setValueSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorMapData::setValueSize (int valueSize)}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMapData::valueRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueSize\:QCPColorMapData}
{\xe \v QCPColorMapData\:valueSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorMapData::valueSize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPColorMap\:QCPColorMapData}
{\xe \v QCPColorMapData\:QCPColorMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPColorMap}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAlpha\:QCPColorMapData}
{\xe \v QCPColorMapData\:mAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* QCPColorMapData::mAlpha{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mData\:QCPColorMapData}
{\xe \v QCPColorMapData\:mData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* QCPColorMapData::mData{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataBounds\:QCPColorMapData}
{\xe \v QCPColorMapData\:mDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMapData::mDataBounds{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataModified\:QCPColorMapData}
{\xe \v QCPColorMapData\:mDataModified}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMapData::mDataModified{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mIsEmpty\:QCPColorMapData}
{\xe \v QCPColorMapData\:mIsEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorMapData::mIsEmpty{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mKeyRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:mKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMapData::mKeyRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mKeySize\:QCPColorMapData}
{\xe \v QCPColorMapData\:mKeySize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorMapData::mKeySize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mValueRange\:QCPColorMapData}
{\xe \v QCPColorMapData\:mValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorMapData::mValueRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mValueSize\:QCPColorMapData}
{\xe \v QCPColorMapData\:mValueSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorMapData::mValueSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPColorScale Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPColorScale}
{\xe \v QCPColorScale}
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPColorScale:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_color_scale.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dataRangeChanged} (const {\b QCPRange} &newRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dataScaleTypeChanged} ({\b QCPAxis::ScaleType} scaleType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gradientChanged} (const {\b QCPColorGradient} &newGradient)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorScale} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPColorScale} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b axis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::AxisType} {\b type} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b dataRange} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::ScaleType} {\b dataScaleType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} {\b gradient} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b label} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b barWidth} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeDrag} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeZoom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setType} ({\b QCPAxis::AxisType} {\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setDataRange} (const {\b QCPRange} &{\b dataRange})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setDataScaleType} ({\b QCPAxis::ScaleType} scaleType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setGradient} (const {\b QCPColorGradient} &{\b gradient})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabel} (const QString &str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBarWidth} (int width)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDrag} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoom} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPColorMap} * > {\b colorMaps} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleDataRange} (bool onlyVisibleMaps)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::AxisType} {\b mType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mDataRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis::ScaleType} {\b mDataScaleType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorGradient} {\b mGradient}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mBarWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPColorScaleAxisRectPrivate} > {\b mAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mColorAxis}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorScaleAxisRectPrivate}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPColorScale\:QCPColorScale}
{\xe \v QCPColorScale\:QCPColorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorScale::QCPColorScale ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPColorScale\:QCPColorScale}
{\xe \v QCPColorScale\:~QCPColorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPColorScale::~QCPColorScale (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyDefaultAntialiasingHint\:QCPColorScale}
{\xe \v QCPColorScale\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScale::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v axis\:QCPColorScale}
{\xe \v QCPColorScale\:axis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPColorScale::axis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v barWidth\:QCPColorScale}
{\xe \v QCPColorScale\:barWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorScale::barWidth () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v colorMaps\:QCPColorScale}
{\xe \v QCPColorScale\:colorMaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPColorMap} * > QCPColorScale::colorMaps () const}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRange\:QCPColorScale}
{\xe \v QCPColorScale\:dataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorScale::dataRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRangeChanged\:QCPColorScale}
{\xe \v QCPColorScale\:dataRangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::dataRangeChanged (const {\b QCPRange} & newRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataScaleType\:QCPColorScale}
{\xe \v QCPColorScale\:dataScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::ScaleType} QCPColorScale::dataScaleType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataScaleTypeChanged\:QCPColorScale}
{\xe \v QCPColorScale\:dataScaleTypeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::dataScaleTypeChanged ({\b QCPAxis::ScaleType} scaleType){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gradient\:QCPColorScale}
{\xe \v QCPColorScale\:gradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorGradient} QCPColorScale::gradient () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gradientChanged\:QCPColorScale}
{\xe \v QCPColorScale\:gradientChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::gradientChanged (const {\b QCPColorGradient} & newGradient){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:QCPColorScale}
{\xe \v QCPColorScale\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPColorScale::label () const}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMoveEvent\:QCPColorScale}
{\xe \v QCPColorScale\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScale::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPColorScale}
{\xe \v QCPColorScale\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScale::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPColorScale}
{\xe \v QCPColorScale\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScale::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v rangeDrag\:QCPColorScale}
{\xe \v QCPColorScale\:rangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorScale::rangeDrag () const}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoom\:QCPColorScale}
{\xe \v QCPColorScale\:rangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorScale::rangeZoom () const}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleDataRange\:QCPColorScale}
{\xe \v QCPColorScale\:rescaleDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::rescaleDataRange (bool onlyVisibleMaps)}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBarWidth\:QCPColorScale}
{\xe \v QCPColorScale\:setBarWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::setBarWidth (int width)}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDataRange\:QCPColorScale}
{\xe \v QCPColorScale\:setDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorScale::setDataRange (const {\b QCPRange} & dataRange)}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDataScaleType\:QCPColorScale}
{\xe \v QCPColorScale\:setDataScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorScale::setDataScaleType ({\b QCPAxis::ScaleType} scaleType)}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setGradient\:QCPColorScale}
{\xe \v QCPColorScale\:setGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorScale::setGradient (const {\b QCPColorGradient} & gradient)}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabel\:QCPColorScale}
{\xe \v QCPColorScale\:setLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::setLabel (const QString & str)}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDrag\:QCPColorScale}
{\xe \v QCPColorScale\:setRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::setRangeDrag (bool enabled)}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoom\:QCPColorScale}
{\xe \v QCPColorScale\:setRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::setRangeZoom (bool enabled)}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setType\:QCPColorScale}
{\xe \v QCPColorScale\:setType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScale::setType ({\b QCPAxis::AxisType} type)}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:QCPColorScale}
{\xe \v QCPColorScale\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::AxisType} QCPColorScale::type () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v update\:QCPColorScale}
{\xe \v QCPColorScale\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScale::update ({\b UpdatePhase} phase){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v wheelEvent\:QCPColorScale}
{\xe \v QCPColorScale\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScale::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPColorScaleAxisRectPrivate\:QCPColorScale}
{\xe \v QCPColorScale\:QCPColorScaleAxisRectPrivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPColorScaleAxisRectPrivate}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAxisRect\:QCPColorScale}
{\xe \v QCPColorScale\:mAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPColorScaleAxisRectPrivate}> QCPColorScale::mAxisRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBarWidth\:QCPColorScale}
{\xe \v QCPColorScale\:mBarWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPColorScale::mBarWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColorAxis\:QCPColorScale}
{\xe \v QCPColorScale\:mColorAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxis}> QCPColorScale::mColorAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataRange\:QCPColorScale}
{\xe \v QCPColorScale\:mDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPColorScale::mDataRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataScaleType\:QCPColorScale}
{\xe \v QCPColorScale\:mDataScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::ScaleType} QCPColorScale::mDataScaleType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGradient\:QCPColorScale}
{\xe \v QCPColorScale\:mGradient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorGradient} QCPColorScale::mGradient{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mType\:QCPColorScale}
{\xe \v QCPColorScale\:mType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis::AxisType} QCPColorScale::mType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPColorScaleAxisRectPrivate Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate}
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPColorScaleAxisRectPrivate:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_color_scale_axis_rect_private.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorScaleAxisRectPrivate} ({\b QCPColorScale} *parentColorScale)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAxisRect}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} ({\b QCustomPlot} *{\b parentPlot}, bool setupDefaultAxes=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAxisRect} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b background} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b backgroundBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b backgroundScaled} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b backgroundScaledMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b rangeDrag} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b rangeZoom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b rangeDragAxis} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b rangeZoomAxis} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b rangeDragAxes} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b rangeZoomAxes} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rangeZoomFactor} (Qt::Orientation orientation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QBrush &brush)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaled} (bool scaled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaledMode} (Qt::AspectRatioMode mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDrag} (Qt::Orientations orientations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoom} (Qt::Orientations orientations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDragAxes} ({\b QCPAxis} *horizontal, {\b QCPAxis} *vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDragAxes} (QList< {\b QCPAxis} * > {\b axes})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDragAxes} (QList< {\b QCPAxis} * > horizontal, QList< {\b QCPAxis} * > vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomAxes} ({\b QCPAxis} *horizontal, {\b QCPAxis} *vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomAxes} (QList< {\b QCPAxis} * > {\b axes})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomAxes} (QList< {\b QCPAxis} * > horizontal, QList< {\b QCPAxis} * > vertical)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomFactor} (double horizontalFactor, double verticalFactor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomFactor} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b axisCount} ({\b QCPAxis::AxisType} type) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b axis} ({\b QCPAxis::AxisType} type, int index=0) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b axes} (QCPAxis::AxisTypes types) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b axes} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b addAxis} ({\b QCPAxis::AxisType} type, {\b QCPAxis} *{\b axis}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b addAxes} (QCPAxis::AxisTypes types)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeAxis} ({\b QCPAxis} *{\b axis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} * {\b insetLayout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b zoom} (const QRectF &pixelRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b zoom} (const QRectF &pixelRect, const QList< {\b QCPAxis} * > &affectedAxes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupFullAxesBox} (bool connectRanges=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractPlottable} * > {\b plottables} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPGraph} * > {\b graphs} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractItem} * > {\b items} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b left} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b right} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bottom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b topLeft} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b topRight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b bottomLeft} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b bottomRight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b center} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateGradientImage} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b axisSelectionChanged} (QCPAxis::SelectableParts selectedParts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b axisSelectableChanged} (QCPAxis::SelectableParts selectableParts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAxisRect}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawBackground} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateAxesOffset} ({\b QCPAxis::AxisType} type)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPColorScale} * {\b mParentColorScale}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QImage {\b mGradientImage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mGradientImageInvalidated}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAxisRect}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBackgroundBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mScaledBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mBackgroundScaled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b mBackgroundScaledMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} * {\b mInsetLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b mRangeDrag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Orientations {\b mRangeZoom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeDragHorzAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeDragVertAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeZoomHorzAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QPointer< {\b QCPAxis} > > {\b mRangeZoomVertAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRangeZoomFactorHorz}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRangeZoomFactorVert}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPRange} > {\b mDragStartHorzRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPRange} > {\b mDragStartVertRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mNotAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mDragging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCPAxis::AxisType}, QList< {\b QCPAxis} * > > {\b mAxes}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorScale}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPColorScaleAxisRectPrivate\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:QCPColorScaleAxisRectPrivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPColorScaleAxisRectPrivate::QCPColorScaleAxisRectPrivate ({\b QCPColorScale} * parentColorScale){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v axisSelectableChanged\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:axisSelectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorScaleAxisRectPrivate::axisSelectableChanged (QCPAxis::SelectableParts selectableParts){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisSelectionChanged\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:axisSelectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPColorScaleAxisRectPrivate::axisSelectionChanged (QCPAxis::SelectableParts selectedParts){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v calculateAutoMargin\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:calculateAutoMargin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPAxisRect::calculateAutoMargin ({\b QCP::MarginSide} side){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPColorScaleAxisRectPrivate::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseMoveEvent\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v update\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::update ({\b UpdatePhase} phase){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v updateGradientImage\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:updateGradientImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPColorScaleAxisRectPrivate::updateGradientImage (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wheelEvent\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPAxisRect::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPColorScale\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:QCPColorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPColorScale}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mGradientImage\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:mGradientImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QImage QCPColorScaleAxisRectPrivate::mGradientImage{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGradientImageInvalidated\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:mGradientImageInvalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPColorScaleAxisRectPrivate::mGradientImageInvalidated{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentColorScale\:QCPColorScaleAxisRectPrivate}
{\xe \v QCPColorScaleAxisRectPrivate\:mParentColorScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPColorScale}* QCPColorScaleAxisRectPrivate::mParentColorScale{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPCurve Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPCurve}
{\xe \v QCPCurve}
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPCurve:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_curve.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LineStyle} \{ {\b lsNone}
, {\b lsLine}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPCurve} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPCurve} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPCurveDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b scatterStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b scatterSkip} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineStyle} {\b lineStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPCurveDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &t, const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &keys, const QVector< double > &values)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterStyle} (const {\b QCPScatterStyle} &style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterSkip} (int skip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLineStyle} ({\b LineStyle} style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &t, const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &keys, const QVector< double > &values)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double t, double key, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double key, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable1D< QCPCurveData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable1D} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable1D} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawCurveLine} ({\b QCPPainter} *painter, const QVector< QPointF > &lines) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawScatterPlot} ({\b QCPPainter} *painter, const QVector< QPointF > &points, const {\b QCPScatterStyle} &style) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getCurveLines} (QVector< QPointF > *lines, const {\b QCPDataRange} &dataRange, double penWidth) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getScatters} (QVector< QPointF > *scatters, const {\b QCPDataRange} &dataRange, double scatterWidth) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getRegion} (double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b getOptimizedPoint} (int otherRegion, double otherKey, double otherValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b getOptimizedCornerPoints} (int prevRegion, int currentRegion, double prevKey, double prevValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mayTraverse} (int prevRegion, int currentRegion) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getTraverse} (double prevKey, double prevValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin, QPointF &crossA, QPointF &crossB) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getTraverseCornerPoints} (int prevRegion, int currentRegion, double keyMin, double valueMax, double keyMax, double valueMin, QVector< QPointF > &beforeTraverse, QVector< QPointF > &afterTraverse) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointDistance} (const QPointF &pixelPoint, {\b QCPCurveDataContainer::const_iterator} &closestData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable1D< QCPCurveData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b mScatterStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mScatterSkip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineStyle} {\b mLineStyle}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable1D< QCPCurveData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPDataContainer}< {\b QCPCurveData} > > {\b mDataContainer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LineStyle\:QCPCurve}
{\xe \v QCPCurve\:LineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPCurve::LineStyle}}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how the curve's line is represented visually in the plot. The line is drawn with the current pen of the curve ({\b setPen}). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setLineStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lsNone\:QCPCurve}
{\xe \v QCPCurve\:lsNone}
{\qr lsNone{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No line is drawn between data points (e.g. only scatters) \par
}\cell }{\row }
{\xe \v lsLine\:QCPCurve}
{\xe \v QCPCurve\:lsLine}
{\qr lsLine{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Data points are connected with a straight line. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPCurve\:QCPCurve}
{\xe \v QCPCurve\:QCPCurve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPCurve::QCPCurve ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPCurve\:QCPCurve}
{\xe \v QCPCurve\:~QCPCurve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPCurve::~QCPCurve (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addData\:QCPCurve}
{\xe \v QCPCurve\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::addData (const QVector< double > & keys, const QVector< double > & values)}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPCurve}
{\xe \v QCPCurve\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::addData (const QVector< double > & t, const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPCurve}
{\xe \v QCPCurve\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::addData (double key, double value)}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPCurve}
{\xe \v QCPCurve\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::addData (double t, double key, double value)}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPCurve}
{\xe \v QCPCurve\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPCurveDataContainer} > QCPCurve::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPCurve}
{\xe \v QCPCurve\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPCurve::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawCurveLine\:QCPCurve}
{\xe \v QCPCurve\:drawCurveLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPCurve::drawCurveLine ({\b QCPPainter} * painter, const QVector< QPointF > & lines) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLegendIcon\:QCPCurve}
{\xe \v QCPCurve\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPCurve::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawScatterPlot\:QCPCurve}
{\xe \v QCPCurve\:drawScatterPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPCurve::drawScatterPlot ({\b QCPPainter} * painter, const QVector< QPointF > & points, const {\b QCPScatterStyle} & style) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getCurveLines\:QCPCurve}
{\xe \v QCPCurve\:getCurveLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::getCurveLines (QVector< QPointF > * lines, const {\b QCPDataRange} & dataRange, double penWidth) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPCurve}
{\xe \v QCPCurve\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPCurve::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getOptimizedCornerPoints\:QCPCurve}
{\xe \v QCPCurve\:getOptimizedCornerPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPCurve::getOptimizedCornerPoints (int prevRegion, int currentRegion, double prevKey, double prevValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getOptimizedPoint\:QCPCurve}
{\xe \v QCPCurve\:getOptimizedPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPCurve::getOptimizedPoint (int otherRegion, double otherKey, double otherValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getRegion\:QCPCurve}
{\xe \v QCPCurve\:getRegion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPCurve::getRegion (double key, double value, double keyMin, double valueMax, double keyMax, double valueMin) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getScatters\:QCPCurve}
{\xe \v QCPCurve\:getScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::getScatters (QVector< QPointF > * scatters, const {\b QCPDataRange} & dataRange, double scatterWidth) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTraverse\:QCPCurve}
{\xe \v QCPCurve\:getTraverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPCurve::getTraverse (double prevKey, double prevValue, double key, double value, double keyMin, double valueMax, double keyMax, double valueMin, QPointF & crossA, QPointF & crossB) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTraverseCornerPoints\:QCPCurve}
{\xe \v QCPCurve\:getTraverseCornerPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::getTraverseCornerPoints (int prevRegion, int currentRegion, double keyMin, double valueMax, double keyMax, double valueMin, QVector< QPointF > & beforeTraverse, QVector< QPointF > & afterTraverse) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getValueRange\:QCPCurve}
{\xe \v QCPCurve\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPCurve::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v lineStyle\:QCPCurve}
{\xe \v QCPCurve\:lineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineStyle} QCPCurve::lineStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mayTraverse\:QCPCurve}
{\xe \v QCPCurve\:mayTraverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPCurve::mayTraverse (int prevRegion, int currentRegion) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pointDistance\:QCPCurve}
{\xe \v QCPCurve\:pointDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurve::pointDistance (const QPointF & pixelPoint, {\b QCPCurveDataContainer::const_iterator} & closestData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scatterSkip\:QCPCurve}
{\xe \v QCPCurve\:scatterSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPCurve::scatterSkip () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scatterStyle\:QCPCurve}
{\xe \v QCPCurve\:scatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPCurve::scatterStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPCurve}
{\xe \v QCPCurve\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPCurve::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a point-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
If {\i details}  is not 0, it will be set to a {\b QCPDataSelection}, describing the closest data point to {\i pos} .\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setData\:QCPCurve}
{\xe \v QCPCurve\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::setData (const QVector< double > & keys, const QVector< double > & values)}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPCurve}
{\xe \v QCPCurve\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::setData (const QVector< double > & t, const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPCurve}
{\xe \v QCPCurve\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::setData (QSharedPointer< {\b QCPCurveDataContainer} > data)}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLineStyle\:QCPCurve}
{\xe \v QCPCurve\:setLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::setLineStyle ({\b LineStyle} style)}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScatterSkip\:QCPCurve}
{\xe \v QCPCurve\:setScatterSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::setScatterSkip (int skip)}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScatterStyle\:QCPCurve}
{\xe \v QCPCurve\:setScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPCurve::setScatterStyle (const {\b QCPScatterStyle} & style)}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPCurve}
{\xe \v QCPCurve\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPCurve}
{\xe \v QCPCurve\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mLineStyle\:QCPCurve}
{\xe \v QCPCurve\:mLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineStyle} QCPCurve::mLineStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScatterSkip\:QCPCurve}
{\xe \v QCPCurve\:mScatterSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPCurve::mScatterSkip{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScatterStyle\:QCPCurve}
{\xe \v QCPCurve\:mScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPCurve::mScatterStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPCurveData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPCurveData}
{\xe \v QCPCurveData}
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPCurveData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPCurveData} (double {\b t}, double {\b key}, double {\b value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sortKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b QCPCurveData} {\b fromSortKey} (double {\b sortKey})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b sortKeyIsMainKey} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b key}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPCurveData\:QCPCurveData}
{\xe \v QCPCurveData\:QCPCurveData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPCurveData::QCPCurveData ()}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPCurveData\:QCPCurveData}
{\xe \v QCPCurveData\:QCPCurveData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPCurveData::QCPCurveData (double t, double key, double value)}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fromSortKey\:QCPCurveData}
{\xe \v QCPCurveData\:fromSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b QCPCurveData} QCPCurveData::fromSortKey (double sortKey){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainKey\:QCPCurveData}
{\xe \v QCPCurveData\:mainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurveData::mainKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainValue\:QCPCurveData}
{\xe \v QCPCurveData\:mainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurveData::mainValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKey\:QCPCurveData}
{\xe \v QCPCurveData\:sortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurveData::sortKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKeyIsMainKey\:QCPCurveData}
{\xe \v QCPCurveData\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPCurveData::sortKeyIsMainKey (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueRange\:QCPCurveData}
{\xe \v QCPCurveData\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPCurveData::valueRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v key\:QCPCurveData}
{\xe \v QCPCurveData\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurveData::key}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t\:QCPCurveData}
{\xe \v QCPCurveData\:t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurveData::t}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:QCPCurveData}
{\xe \v QCPCurveData\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPCurveData::value}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPDataContainer< DataType > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >}
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic data container for one-dimensional plottables. }}\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef QVector< DataType >::const_iterator {\b const_iterator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef QVector< DataType >::iterator {\b iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataContainer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b autoSqueeze} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoSqueeze} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set} (const {\b QCPDataContainer}< DataType > &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set} (const QVector< DataType > &data, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add} (const {\b QCPDataContainer}< DataType > &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add} (const QVector< DataType > &data, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add} (const DataType &data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeBefore} (double sortKey)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeAfter} (double sortKey)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b remove} (double sortKeyFrom, double sortKeyTo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b remove} (double sortKey)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sort} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b squeeze} (bool preAllocation=true, bool postAllocation=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b constBegin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b constEnd} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b begin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b end} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b findBegin} (double sortKey, bool expandedRange=true) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b findEnd} (double sortKey, bool expandedRange=true) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b at} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b keyRange} (bool &foundRange, {\b QCP::SignDomain} signDomain={\b QCP::sdBoth})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} (bool &foundRange, {\b QCP::SignDomain} signDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b dataRange} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b limitIteratorsToDataRange} ({\b const_iterator} &{\b begin}, {\b const_iterator} &{\b end}, const {\b QCPDataRange} &{\b dataRange}) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b preallocateGrow} (int minimumPreallocSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b performAutoSqueeze} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAutoSqueeze}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< DataType > {\b mData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mPreallocSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mPreallocIteration}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Related Symbols\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(Note that these are not member symbols.) \par
}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class DataType > bool {\b qcpLessThanSortKey} (const DataType &a, const DataType &b)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class DataType>\par
class QCPDataContainer< DataType >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic data container for one-dimensional plottables. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class template provides a fast container for data storage of one-dimensional data. The data type is specified as template parameter (called {\i DataType}  in the following) and must provide some methods as described in the {\b next section}.\par
The data is stored in a sorted fashion, which allows very quick lookups by the sorted key as well as retrieval of ranges (see {\b findBegin}, {\b findEnd}, {\b keyRange}) using binary search. The container uses a preallocation and a postallocation scheme, such that appending and prepending data (with respect to the sort key) is very fast and minimizes reallocations. If data is added which needs to be inserted between existing keys, the merge usually can be done quickly too, using the fact that existing data is always sorted. The user can further improve performance by specifying that added data is already itself sorted by key, if he can guarantee that this is the case (see for example {\b add(const QVector<DataType> &data, bool alreadySorted)}).\par
The data can be accessed with the provided const iterators ({\b constBegin}, {\b constEnd}). If it is necessary to alter existing data in-place, the non-const iterators can be used ({\b begin}, {\b end}). Changing data members that are not the sort key (for most data types called {\i key} ) is safe from the container's perspective.\par
Great care must be taken however if the sort key is modified through the non-const iterators. For performance reasons, the iterators don't automatically cause a re-sorting upon their manipulation. It is thus the responsibility of the user to leave the container in a sorted state when finished with the data manipulation, before calling any other methods on the container. A complete re-sort (e.g. after finishing all sort key manipulation) can be done by calling {\b sort}. Failing to do so can not be detected by the container efficiently and will cause both rendering artifacts and potential data loss.\par
Implementing one-dimensional plottables that make use of a {\b QCPDataContainer<T>} is usually done by subclassing from {\b QCPAbstractPlottable1D}, which introduces an according {\i mDataContainer}  member and some convenience methods.\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Requirements for the DataType template parameter
\par}
{\tc\tcl3 \v Requirements for the DataType template parameter}
The template parameter {\f2 DataType}  is the type of the stored data points. It must be trivially copyable and have the following public methods, preferably inline:\par
{
\par\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 double sortKey() const} \par
 Returns the member variable of this data point that is the sort key, defining the ordering in the container. Often this variable is simply called {\i key} .\par
}
{
\par\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 static DataType fromSortKey(double sortKey)} \par
 Returns a new instance of the data type initialized with its sort key set to {\i sortKey} .\par
}
{
\par\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 static bool sortKeyIsMainKey()} \par
 Returns true if the sort key is equal to the main key (see method {\f2 mainKey}  below). For most plottables this is the case. It is not the case for example for {\b QCPCurve}, which uses {\i t}  as sort key and {\i key}  as main key. This is the reason why {\b QCPCurve} unlike {\b QCPGraph} can display parametric curves with loops.\par
}
{
\par\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 double mainKey() const} \par
 Returns the variable of this data point considered the main key. This is commonly the variable that is used as the coordinate of this data point on the key axis of the plottable. This method is used for example when determining the automatic axis rescaling of key axes ({\b QCPAxis::rescale}).\par
}
{
\par\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 double mainValue() const} \par
 Returns the variable of this data point considered the main value. This is commonly the variable that is used as the coordinate of this data point on the value axis of the plottable.\par
}
{
\par\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b QCPRange} valueRange() const} \par
 Returns the range this data point spans in the value axis coordinate. If the data is single-valued (e.g. {\b QCPGraphData}), this is simply a range with both lower and upper set to the main data point value. However if the data points can represent multiple values at once (e.g {\b QCPFinancialData} with its {\i high} , {\i low} , {\i open}  and {\i close}  values at each {\i key} ) this method should return the range those values span. This method is used for example when determining the automatic axis rescaling of value axes ({\b QCPAxis::rescale}). \par
}
\par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Typedef Documentation\par
\pard\plain 
{\xe \v const_iterator\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:const_iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > typedef QVector<DataType>::const_iterator {\b QCPDataContainer}< DataType >::const_iterator}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v iterator\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > typedef QVector<DataType>::iterator {\b QCPDataContainer}< DataType >::iterator}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPDataContainer\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:QCPDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPDataContainer}< DataType >{\b ::QCPDataContainer} ()}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a {\b QCPDataContainer} used for plottable classes that represent a series of key-sorted data \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v add\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::add (const DataType & data)}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.\par
Adds the provided single data point to the current data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b remove} \par
}}}}
{\xe \v add\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::add (const {\b QCPDataContainer}< DataType > & data)}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.\par
Adds the provided {\i data}  to the current data in this container.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b set}, {\b remove} \par
}}}}
{\xe \v add\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::add (const QVector< DataType > & data, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the provided data points in {\i data}  to the current data.\par
If you can guarantee that the data points in {\i data}  have ascending order with respect to the DataType's sort key, set {\i alreadySorted}  to true to avoid an unnecessary sorting run.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b set}, {\b remove} \par
}}}}
{\xe \v at\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b const_iterator} {\b QCPDataContainer}< DataType >::at (int index) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a const iterator to the element with the specified {\i index} . If {\i index}  points beyond the available elements in this container, returns {\b constEnd}, i.e. an iterator past the last valid element.\par
You can use this method to easily obtain iterators from a {\b QCPDataRange}, see the data selection page for an example. \par
}}
{\xe \v autoSqueeze\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:autoSqueeze}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > bool {\b QCPDataContainer}< DataType >::autoSqueeze () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v begin\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b iterator} {\b QCPDataContainer}< DataType >::begin (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a non-const iterator to the first data point in this container.\par
You can manipulate the data points in-place through the non-const iterators, but great care must be taken when manipulating the sort key of a data point, see {\b sort}, or the detailed description of this class. \par
}}
{\xe \v clear\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::clear ()}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all data points.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b remove}, {\b removeAfter}, {\b removeBefore} \par
}}}}
{\xe \v constBegin\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:constBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b const_iterator} {\b QCPDataContainer}< DataType >::constBegin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a const iterator to the first data point in this container. \par
}}
{\xe \v constEnd\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:constEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b const_iterator} {\b QCPDataContainer}< DataType >::constEnd () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a const iterator to the element past the last data point in this container. \par
}}
{\xe \v dataRange\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:dataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPDataRange} {\b QCPDataContainer}< DataType >::dataRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a {\b QCPDataRange} encompassing the entire data set of this container. This means the begin index of the returned range is 0, and the end index is {\b size}. \par
}}
{\xe \v end\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b iterator} {\b QCPDataContainer}< DataType >::end (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a non-const iterator to the element past the last data point in this container.\par
You can manipulate the data points in-place through the non-const iterators, but great care must be taken when manipulating the sort key of a data point, see {\b sort}, or the detailed description of this class. \par
}}
{\xe \v findBegin\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:findBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPDataContainer}< DataType >{\b ::const_iterator} {\b QCPDataContainer}< DataType >::findBegin (double sortKey, bool expandedRange = {\f2 true}) const}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an iterator to the data point with a (sort-)key that is equal to, just below, or just above {\i sortKey} . If {\i expandedRange}  is true, the data point just below {\i sortKey}  will be considered, otherwise the one just above.\par
This can be used in conjunction with {\b findEnd} to iterate over data points within a given key range, including or excluding the bounding data points that are just beyond the specified range.\par
If {\i expandedRange}  is true but there are no data points below {\i sortKey} , {\b constBegin} is returned.\par
If the container is empty, returns {\b constEnd}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findEnd}, {\b QCPPlottableInterface1D::findBegin} \par
}}}}
{\xe \v findEnd\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:findEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPDataContainer}< DataType >{\b ::const_iterator} {\b QCPDataContainer}< DataType >::findEnd (double sortKey, bool expandedRange = {\f2 true}) const}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an iterator to the element after the data point with a (sort-)key that is equal to, just above or just below {\i sortKey} . If {\i expandedRange}  is true, the data point just above {\i sortKey}  will be considered, otherwise the one just below.\par
This can be used in conjunction with {\b findBegin} to iterate over data points within a given key range, including the bounding data points that are just below and above the specified range.\par
If {\i expandedRange}  is true but there are no data points above {\i sortKey} , {\b constEnd} is returned.\par
If the container is empty, {\b constEnd} is returned.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findBegin}, {\b QCPPlottableInterface1D::findEnd} \par
}}}}
{\xe \v isEmpty\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > bool {\b QCPDataContainer}< DataType >::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether this container holds no data points. \par
}}
{\xe \v keyRange\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:keyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPRange} {\b QCPDataContainer}< DataType >::keyRange (bool & foundRange, {\b QCP::SignDomain} signDomain = {\f2 {\b QCP::sdBoth}})}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the range encompassed by the (main-)key coordinate of all data points. The output parameter {\i foundRange}  indicates whether a sensible range was found. If this is false, you should not use the returned {\b QCPRange} (e.g. the data container is empty or all points have the same key).\par
Use {\i signDomain}  to control which sign of the key coordinates should be considered. This is relevant e.g. for logarithmic plots which can mathematically only display one sign domain at a time.\par
If the DataType reports that its main key is equal to the sort key ({\i sortKeyIsMainKey} ), as is the case for most plottables, this method uses this fact and finds the range very quickly.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b valueRange} \par
}}}}
{\xe \v limitIteratorsToDataRange\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:limitIteratorsToDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::limitIteratorsToDataRange ({\b const_iterator} & begin, {\b const_iterator} & end, const {\b QCPDataRange} & dataRange) const}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Makes sure {\i begin}  and {\i end}  mark a data range that is both within the bounds of this data container's data, as well as within the specified {\i dataRange} . The initial range described by the passed iterators {\i begin}  and {\i end}  is never expanded, only contracted if necessary.\par
This function doesn't require for {\i dataRange}  to be within the bounds of this data container's valid range. \par
}}
{\xe \v performAutoSqueeze\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:performAutoSqueeze}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::performAutoSqueeze (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v preallocateGrow\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:preallocateGrow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::preallocateGrow (int minimumPreallocSize){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remove\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::remove (double sortKey)}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.\par
Removes a single data point at {\i sortKey} . If the position is not known with absolute (binary) precision, consider using {\b remove(double sortKeyFrom, double sortKeyTo)} with a small fuzziness interval around the suspected position, depeding on the precision with which the (sort-)key is known.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b removeBefore}, {\b removeAfter}, {\b clear} \par
}}}}
{\xe \v remove\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::remove (double sortKeyFrom, double sortKeyTo)}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all data points with (sort-)keys between {\i sortKeyFrom}  and {\i sortKeyTo} . if {\i sortKeyFrom}  is greater or equal to {\i sortKeyTo} , the function does nothing. To remove a single data point with known (sort-)key, use {\b remove(double sortKey)}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b removeBefore}, {\b removeAfter}, {\b clear} \par
}}}}
{\xe \v removeAfter\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:removeAfter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::removeAfter (double sortKey)}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all data points with (sort-)keys greater than or equal to {\i sortKey} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b removeBefore}, {\b remove}, {\b clear} \par
}}}}
{\xe \v removeBefore\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:removeBefore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::removeBefore (double sortKey)}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes all data points with (sort-)keys smaller than or equal to {\i sortKey} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b removeAfter}, {\b remove}, {\b clear} \par
}}}}
{\xe \v set\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::set (const {\b QCPDataContainer}< DataType > & data)}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.\par
Replaces the current data in this container with the provided {\i data} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b add}, {\b remove} \par
}}}}
{\xe \v set\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::set (const QVector< DataType > & data, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.\par
Replaces the current data in this container with the provided {\i data}  \par
If you can guarantee that the data points in {\i data}  have ascending order with respect to the DataType's sort key, set {\i alreadySorted}  to true to avoid an unnecessary sorting run.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b add}, {\b remove} \par
}}}}
{\xe \v setAutoSqueeze\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:setAutoSqueeze}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::setAutoSqueeze (bool enabled)}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets whether the container automatically decides when to release memory from its post- and preallocation pools when data points are removed. By default this is enabled and for typical applications shouldn't be changed.\par
If auto squeeze is disabled, you can manually decide when to release pre-/postallocation with {\b squeeze}. \par
}}
{\xe \v size\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > int {\b QCPDataContainer}< DataType >::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of data points in the container. \par
}}
{\xe \v sort\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:sort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::sort ()}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Re-sorts all data points in the container by their sort key.\par
When setting, adding or removing points using the {\b QCPDataContainer} interface ({\b set}, {\b add}, {\b remove}, etc.), the container makes sure to always stay in a sorted state such that a full resort is never necessary. However, if you choose to directly manipulate the sort key on data points by accessing and modifying it through the non-const iterators ({\b begin}, {\b end}), it is your responsibility to bring the container back into a sorted state before any other methods are called on it. This can be achieved by calling this method immediately after finishing the sort key manipulation. \par
}}
{\xe \v squeeze\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:squeeze}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > void {\b QCPDataContainer}< DataType >::squeeze (bool preAllocation = {\f2 true}, bool postAllocation = {\f2 true})}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees all unused memory that is currently in the preallocation and postallocation pools.\par
Note that {\b QCPDataContainer} automatically decides whether squeezing is necessary, if {\b setAutoSqueeze} is left enabled. It should thus not be necessary to use this method for typical applications.\par
The parameters {\i preAllocation}  and {\i postAllocation}  control whether pre- and/or post allocation should be freed, respectively. \par
}}
{\xe \v valueRange\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > {\b QCPRange} {\b QCPDataContainer}< DataType >::valueRange (bool & foundRange, {\b QCP::SignDomain} signDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()})}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the range encompassed by the value coordinates of the data points in the specified key range ({\i inKeyRange} ), using the full {\i DataType::valueRange}  reported by the data points. The output parameter {\i foundRange}  indicates whether a sensible range was found. If this is false, you should not use the returned {\b QCPRange} (e.g. the data container is empty or all points have the same value).\par
Inf and -Inf data values are ignored.\par
If {\i inKeyRange}  has both lower and upper bound set to zero (is equal to {\f2 {\b QCPRange()}} ), all data points are considered, without any restriction on the keys.\par
Use {\i signDomain}  to control which sign of the value coordinates should be considered. This is relevant e.g. for logarithmic plots which can mathematically only display one sign domain at a time.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b keyRange} \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v qcpLessThanSortKey\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:qcpLessThanSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > bool qcpLessThanSortKey (const DataType & a, const DataType & b){\f2 [related]}}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether the sort key of {\i a}  is less than the sort key of {\i b} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPDataContainer::sort} \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAutoSqueeze\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:mAutoSqueeze}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > bool {\b QCPDataContainer}< DataType >::mAutoSqueeze{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mData\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:mData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > QVector<DataType> {\b QCPDataContainer}< DataType >::mData{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPreallocIteration\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:mPreallocIteration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > int {\b QCPDataContainer}< DataType >::mPreallocIteration{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPreallocSize\:QCPDataContainer< DataType >}
{\xe \v QCPDataContainer< DataType >\:mPreallocSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class DataType > int {\b QCPDataContainer}< DataType >::mPreallocSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPDataRange Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPDataRange}
{\xe \v QCPDataRange}
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} (int {\b begin}, int {\b end})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b begin} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b end} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b length} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBegin} (int {\b begin})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEnd} (int {\b end})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b bounded} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b expanded} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b intersection} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b adjusted} (int changeBegin, int changeEnd) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b intersects} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b contains} (const {\b QCPDataRange} &other) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Related Symbols\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(Note that these are not member symbols.) \par
}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDebug {\b operator<<} (QDebug d, const {\b QCPDataRange} &dataRange)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPDataRange\:QCPDataRange}
{\xe \v QCPDataRange\:QCPDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPDataRange::QCPDataRange ()}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPDataRange\:QCPDataRange}
{\xe \v QCPDataRange\:QCPDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPDataRange::QCPDataRange (int begin, int end)}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adjusted\:QCPDataRange}
{\xe \v QCPDataRange\:adjusted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataRange} QCPDataRange::adjusted (int changeBegin, int changeEnd) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v begin\:QCPDataRange}
{\xe \v QCPDataRange\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPDataRange::begin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bounded\:QCPDataRange}
{\xe \v QCPDataRange\:bounded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataRange} QCPDataRange::bounded (const {\b QCPDataRange} & other) const}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v contains\:QCPDataRange}
{\xe \v QCPDataRange\:contains}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataRange::contains (const {\b QCPDataRange} & other) const}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v end\:QCPDataRange}
{\xe \v QCPDataRange\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPDataRange::end () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expanded\:QCPDataRange}
{\xe \v QCPDataRange\:expanded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataRange} QCPDataRange::expanded (const {\b QCPDataRange} & other) const}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v intersection\:QCPDataRange}
{\xe \v QCPDataRange\:intersection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataRange} QCPDataRange::intersection (const {\b QCPDataRange} & other) const}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v intersects\:QCPDataRange}
{\xe \v QCPDataRange\:intersects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataRange::intersects (const {\b QCPDataRange} & other) const}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isEmpty\:QCPDataRange}
{\xe \v QCPDataRange\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataRange::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isValid\:QCPDataRange}
{\xe \v QCPDataRange\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataRange::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v length\:QCPDataRange}
{\xe \v QCPDataRange\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPDataRange::length () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator!=\:QCPDataRange}
{\xe \v QCPDataRange\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataRange::operator!= (const {\b QCPDataRange} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:QCPDataRange}
{\xe \v QCPDataRange\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataRange::operator== (const {\b QCPDataRange} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBegin\:QCPDataRange}
{\xe \v QCPDataRange\:setBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPDataRange::setBegin (int begin){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setEnd\:QCPDataRange}
{\xe \v QCPDataRange\:setEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPDataRange::setEnd (int end){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPDataRange}
{\xe \v QCPDataRange\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPDataRange::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator<<\:QCPDataRange}
{\xe \v QCPDataRange\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDebug operator<< (QDebug d, const {\b QCPDataRange} & dataRange){\f2 [related]}}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints {\i dataRange}  in a human readable format to the qDebug output. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPDataSelection Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPDataSelection}
{\xe \v QCPDataSelection}
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} (const {\b QCPDataRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b QCPDataSelection} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b QCPDataSelection} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} & {\b operator+=} (const {\b QCPDataSelection} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} & {\b operator+=} (const {\b QCPDataRange} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} & {\b operator-=} (const {\b QCPDataSelection} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} & {\b operator-=} (const {\b QCPDataRange} &other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dataRangeCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dataPointCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b dataRange} (int index=0) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPDataRange} > {\b dataRanges} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataRange} {\b span} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addDataRange} (const {\b QCPDataRange} &{\b dataRange}, bool {\b simplify}=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b simplify} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enforceType} ({\b QCP::SelectionType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b contains} (const {\b QCPDataSelection} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b intersection} (const {\b QCPDataRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b intersection} (const {\b QCPDataSelection} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b inverse} (const {\b QCPDataRange} &outerRange) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataSelection} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataRange} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataSelection} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataRange} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataSelection} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataRange} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataSelection} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataRange} &a, const {\b QCPDataRange} &b)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Related Symbols\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(Note that these are not member symbols.) \par
}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDebug {\b operator<<} (QDebug d, const {\b QCPDataSelection} &selection)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPDataSelection\:QCPDataSelection}
{\xe \v QCPDataSelection\:QCPDataSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPDataSelection::QCPDataSelection (){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPDataSelection\:QCPDataSelection}
{\xe \v QCPDataSelection\:QCPDataSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPDataSelection::QCPDataSelection (const {\b QCPDataRange} & range){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addDataRange\:QCPDataSelection}
{\xe \v QCPDataSelection\:addDataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPDataSelection::addDataRange (const {\b QCPDataRange} & dataRange, bool simplify = {\f2 true})}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear\:QCPDataSelection}
{\xe \v QCPDataSelection\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPDataSelection::clear ()}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v contains\:QCPDataSelection}
{\xe \v QCPDataSelection\:contains}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataSelection::contains (const {\b QCPDataSelection} & other) const}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataPointCount\:QCPDataSelection}
{\xe \v QCPDataSelection\:dataPointCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPDataSelection::dataPointCount () const}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRange\:QCPDataSelection}
{\xe \v QCPDataSelection\:dataRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataRange} QCPDataSelection::dataRange (int index = {\f2 0}) const}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRangeCount\:QCPDataSelection}
{\xe \v QCPDataSelection\:dataRangeCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPDataSelection::dataRangeCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataRanges\:QCPDataSelection}
{\xe \v QCPDataSelection\:dataRanges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPDataRange} > QCPDataSelection::dataRanges () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enforceType\:QCPDataSelection}
{\xe \v QCPDataSelection\:enforceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPDataSelection::enforceType ({\b QCP::SelectionType} type)}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v intersection\:QCPDataSelection}
{\xe \v QCPDataSelection\:intersection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPDataSelection::intersection (const {\b QCPDataRange} & other) const}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v intersection\:QCPDataSelection}
{\xe \v QCPDataSelection\:intersection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPDataSelection::intersection (const {\b QCPDataSelection} & other) const}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inverse\:QCPDataSelection}
{\xe \v QCPDataSelection\:inverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPDataSelection::inverse (const {\b QCPDataRange} & outerRange) const}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isEmpty\:QCPDataSelection}
{\xe \v QCPDataSelection\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataSelection::isEmpty () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator!=\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataSelection::operator!= (const {\b QCPDataSelection} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+=\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} & QCPDataSelection::operator+= (const {\b QCPDataRange} & other)}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+=\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} & QCPDataSelection::operator+= (const {\b QCPDataSelection} & other)}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-=\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} & QCPDataSelection::operator-= (const {\b QCPDataRange} & other)}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-=\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} & QCPDataSelection::operator-= (const {\b QCPDataSelection} & other)}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPDataSelection::operator== (const {\b QCPDataSelection} & other) const}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v simplify\:QCPDataSelection}
{\xe \v QCPDataSelection\:simplify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPDataSelection::simplify ()}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v span\:QCPDataSelection}
{\xe \v QCPDataSelection\:span}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataRange} QCPDataSelection::span () const}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator+\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataRange} & a, const {\b QCPDataRange} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataRange} & a, const {\b QCPDataSelection} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataSelection} & a, const {\b QCPDataRange} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataSelection} & a, const {\b QCPDataSelection} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator-\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataRange} & a, const {\b QCPDataRange} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataRange} & a, const {\b QCPDataSelection} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataSelection} & a, const {\b QCPDataRange} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataSelection} & a, const {\b QCPDataSelection} & b){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator<<\:QCPDataSelection}
{\xe \v QCPDataSelection\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDebug operator<< (QDebug d, const {\b QCPDataSelection} & selection){\f2 [related]}}}
\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints {\i selection}  in a human readable format to the qDebug output. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPErrorBars Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPErrorBars}
{\xe \v QCPErrorBars}
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPErrorBars:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_error_bars.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ErrorType} \{ {\b etKeyError}
, {\b etValueError}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPErrorBars} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPErrorBars} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPErrorBarsDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b dataPlottable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ErrorType} {\b errorType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b whiskerWidth} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b symbolGap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPErrorBarsDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &error)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &errorMinus, const QVector< double > &errorPlus)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDataPlottable} ({\b QCPAbstractPlottable} *plottable)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setErrorType} ({\b ErrorType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWhiskerWidth} (double pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSymbolGap} (double pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &error)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &errorMinus, const QVector< double > &errorPlus)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double error)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double errorMinus, double errorPlus)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getErrorBarLines} (QCPErrorBarsDataContainer::const_iterator it, QVector< QLineF > &backbones, QVector< QLineF > &whiskers) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVisibleDataBounds} (QCPErrorBarsDataContainer::const_iterator &begin, QCPErrorBarsDataContainer::const_iterator &end, const {\b QCPDataRange} &rangeRestriction) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointDistance} (const QPointF &pixelPoint, QCPErrorBarsDataContainer::const_iterator &closestData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b errorBarVisible} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rectIntersectsLine} (const QRectF &pixelRect, const QLineF &line) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPErrorBarsDataContainer} > {\b mDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAbstractPlottable} > {\b mDataPlottable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ErrorType} {\b mErrorType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mWhiskerWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mSymbolGap}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ErrorType\:QCPErrorBars}
{\xe \v QCPErrorBars\:ErrorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPErrorBars::ErrorType}}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines in which orientation the error bars shall appear. If your data needs both error dimensions, create two {\b QCPErrorBars} with different {\b ErrorType}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setErrorType} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v etKeyError\:QCPErrorBars}
{\xe \v QCPErrorBars\:etKeyError}
{\qr etKeyError{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The errors are for the key dimension (bars appear parallel to the key axis) \par
}\cell }{\row }
{\xe \v etValueError\:QCPErrorBars}
{\xe \v QCPErrorBars\:etValueError}
{\qr etValueError{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The errors are for the value dimension (bars appear parallel to the value axis) \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPErrorBars\:QCPErrorBars}
{\xe \v QCPErrorBars\:QCPErrorBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPErrorBars::QCPErrorBars ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPErrorBars\:QCPErrorBars}
{\xe \v QCPErrorBars\:~QCPErrorBars}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPErrorBars::~QCPErrorBars (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addData\:QCPErrorBars}
{\xe \v QCPErrorBars\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::addData (const QVector< double > & error)}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPErrorBars}
{\xe \v QCPErrorBars\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::addData (const QVector< double > & errorMinus, const QVector< double > & errorPlus)}}
\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPErrorBars}
{\xe \v QCPErrorBars\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::addData (double error)}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPErrorBars}
{\xe \v QCPErrorBars\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::addData (double errorMinus, double errorPlus)}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPErrorBars}
{\xe \v QCPErrorBars\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPErrorBarsDataContainer} > QCPErrorBars::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataCount\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPErrorBars::dataCount () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of data points of the plottable. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataMainKey\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPErrorBars::dataMainKey (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the main key of the data point at the given {\i index} .\par
What the main key is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataMainValue\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataMainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPErrorBars::dataMainValue (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the main value of the data point at the given {\i index} .\par
What the main value is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataPixelPosition\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPErrorBars::dataPixelPosition (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the pixel position on the widget surface at which the data point at the given {\i index}  appears.\par
Usually this corresponds to the point of dataMainKey/ dataMainValue, in pixel coordinates. However, depending on the plottable, this might be a different apparent position than just a coord-to-pixel transform of those values. For example, {\b QCPBars} apparent data values can be shifted depending on their stacking, bar grouping or configured base value. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataPlottable\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable} * QCPErrorBars::dataPlottable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataSortKey\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPErrorBars::dataSortKey (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the sort key of the data point at the given {\i index} .\par
What the sort key is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataValueRange\:QCPErrorBars}
{\xe \v QCPErrorBars\:dataValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPErrorBars::dataValueRange (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value range of the data point at the given {\i index} .\par
What the value range is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPErrorBars}
{\xe \v QCPErrorBars\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPErrorBars::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawLegendIcon\:QCPErrorBars}
{\xe \v QCPErrorBars\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPErrorBars::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v errorBarVisible\:QCPErrorBars}
{\xe \v QCPErrorBars\:errorBarVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPErrorBars::errorBarVisible (int index) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v errorType\:QCPErrorBars}
{\xe \v QCPErrorBars\:errorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ErrorType} QCPErrorBars::errorType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v findBegin\:QCPErrorBars}
{\xe \v QCPErrorBars\:findBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPErrorBars::findBegin (double sortKey, bool expandedRange = {\f2 true}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index of the data point with a (sort-)key that is equal to, just below, or just above {\i sortKey} . If {\i expandedRange}  is true, the data point just below {\i sortKey}  will be considered, otherwise the one just above.\par
This can be used in conjunction with {\b findEnd} to iterate over data points within a given key range, including or excluding the bounding data points that are just beyond the specified range.\par
If {\i expandedRange}  is true but there are no data points below {\i sortKey} , 0 is returned.\par
If the container is empty, returns 0 (in that case, {\b findEnd} will also return 0, so a loop using these methods will not iterate over the index 0).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findEnd}, {\b QCPDataContainer::findBegin} \par
}}}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v findEnd\:QCPErrorBars}
{\xe \v QCPErrorBars\:findEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPErrorBars::findEnd (double sortKey, bool expandedRange = {\f2 true}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index one after the data point with a (sort-)key that is equal to, just above, or just below {\i sortKey} . If {\i expandedRange}  is true, the data point just above {\i sortKey}  will be considered, otherwise the one just below.\par
This can be used in conjunction with {\b findBegin} to iterate over data points within a given key range, including the bounding data points that are just below and above the specified range.\par
If {\i expandedRange}  is true but there are no data points above {\i sortKey} , the index just above the highest data point is returned.\par
If the container is empty, returns 0.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findBegin}, {\b QCPDataContainer::findEnd} \par
}}}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getDataSegments\:QCPErrorBars}
{\xe \v QCPErrorBars\:getDataSegments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::getDataSegments (QList< {\b QCPDataRange} > & selectedSegments, QList< {\b QCPDataRange} > & unselectedSegments) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getErrorBarLines\:QCPErrorBars}
{\xe \v QCPErrorBars\:getErrorBarLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::getErrorBarLines (QCPErrorBarsDataContainer::const_iterator it, QVector< QLineF > & backbones, QVector< QLineF > & whiskers) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPErrorBars}
{\xe \v QCPErrorBars\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPErrorBars::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getValueRange\:QCPErrorBars}
{\xe \v QCPErrorBars\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPErrorBars::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getVisibleDataBounds\:QCPErrorBars}
{\xe \v QCPErrorBars\:getVisibleDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::getVisibleDataBounds (QCPErrorBarsDataContainer::const_iterator & begin, QCPErrorBarsDataContainer::const_iterator & end, const {\b QCPDataRange} & rangeRestriction) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v interface1D\:QCPErrorBars}
{\xe \v QCPErrorBars\:interface1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPPlottableInterface1D} * QCPErrorBars::interface1D (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v pointDistance\:QCPErrorBars}
{\xe \v QCPErrorBars\:pointDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBars::pointDistance (const QPointF & pixelPoint, QCPErrorBarsDataContainer::const_iterator & closestData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rectIntersectsLine\:QCPErrorBars}
{\xe \v QCPErrorBars\:rectIntersectsLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPErrorBars::rectIntersectsLine (const QRectF & pixelRect, const QLineF & line) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPErrorBars}
{\xe \v QCPErrorBars\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPErrorBars::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTestRect\:QCPErrorBars}
{\xe \v QCPErrorBars\:selectTestRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPDataSelection} QCPErrorBars::selectTestRect (const QRectF & rect, bool onlySelectable) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a data selection containing all the data points of this plottable which are contained (or hit by) {\i rect} . This is used mainly in the selection rect interaction for data selection (data selection mechanism).\par
If {\i onlySelectable}  is true, an empty {\b QCPDataSelection} is returned if this plottable is not selectable (i.e. if {\b QCPAbstractPlottable::setSelectable} is {\b QCP::stNone}).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\i rect}  must be a normalized rect (positive or zero width and height). This is especially important when using the rect of {\b QCPSelectionRect::accepted}, which is not necessarily normalized. Use {\f2 QRect::normalized()}  when passing a rect which might not be normalized. \par
}}}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setData\:QCPErrorBars}
{\xe \v QCPErrorBars\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setData (const QVector< double > & error)}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPErrorBars}
{\xe \v QCPErrorBars\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setData (const QVector< double > & errorMinus, const QVector< double > & errorPlus)}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPErrorBars}
{\xe \v QCPErrorBars\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setData (QSharedPointer< {\b QCPErrorBarsDataContainer} > data)}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setDataPlottable\:QCPErrorBars}
{\xe \v QCPErrorBars\:setDataPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setDataPlottable ({\b QCPAbstractPlottable} * plottable)}}
\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setErrorType\:QCPErrorBars}
{\xe \v QCPErrorBars\:setErrorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setErrorType ({\b ErrorType} type)}}
\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSymbolGap\:QCPErrorBars}
{\xe \v QCPErrorBars\:setSymbolGap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setSymbolGap (double pixels)}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWhiskerWidth\:QCPErrorBars}
{\xe \v QCPErrorBars\:setWhiskerWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPErrorBars::setWhiskerWidth (double pixels)}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKeyIsMainKey\:QCPErrorBars}
{\xe \v QCPErrorBars\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool QCPErrorBars::sortKeyIsMainKey () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether the sort key ({\b dataSortKey}) is identical to the main key ({\b dataMainKey}).\par
What the sort and main keys are, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implements {\b QCPPlottableInterface1D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v symbolGap\:QCPErrorBars}
{\xe \v QCPErrorBars\:symbolGap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBars::symbolGap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v whiskerWidth\:QCPErrorBars}
{\xe \v QCPErrorBars\:whiskerWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBars::whiskerWidth () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPErrorBars}
{\xe \v QCPErrorBars\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPErrorBars}
{\xe \v QCPErrorBars\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mDataContainer\:QCPErrorBars}
{\xe \v QCPErrorBars\:mDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer<{\b QCPErrorBarsDataContainer}> QCPErrorBars::mDataContainer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataPlottable\:QCPErrorBars}
{\xe \v QCPErrorBars\:mDataPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAbstractPlottable}> QCPErrorBars::mDataPlottable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mErrorType\:QCPErrorBars}
{\xe \v QCPErrorBars\:mErrorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ErrorType} QCPErrorBars::mErrorType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSymbolGap\:QCPErrorBars}
{\xe \v QCPErrorBars\:mSymbolGap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBars::mSymbolGap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWhiskerWidth\:QCPErrorBars}
{\xe \v QCPErrorBars\:mWhiskerWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBars::mWhiskerWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPErrorBarsData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPErrorBarsData}
{\xe \v QCPErrorBarsData}
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPErrorBarsData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPErrorBarsData} (double error)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPErrorBarsData} (double {\b errorMinus}, double {\b errorPlus})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b errorMinus}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b errorPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPErrorBarsData\:QCPErrorBarsData}
{\xe \v QCPErrorBarsData\:QCPErrorBarsData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPErrorBarsData::QCPErrorBarsData ()}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPErrorBarsData\:QCPErrorBarsData}
{\xe \v QCPErrorBarsData\:QCPErrorBarsData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPErrorBarsData::QCPErrorBarsData (double error){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPErrorBarsData\:QCPErrorBarsData}
{\xe \v QCPErrorBarsData\:QCPErrorBarsData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPErrorBarsData::QCPErrorBarsData (double errorMinus, double errorPlus)}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v errorMinus\:QCPErrorBarsData}
{\xe \v QCPErrorBarsData\:errorMinus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBarsData::errorMinus}}
\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v errorPlus\:QCPErrorBarsData}
{\xe \v QCPErrorBarsData\:errorPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPErrorBarsData::errorPlus}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPFinancial Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPFinancial}
{\xe \v QCPFinancial}
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPFinancial:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_financial.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b WidthType} \{ {\b wtAbsolute}
, {\b wtAxisRectRatio}
, {\b wtPlotCoords}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ChartStyle} \{ {\b csOhlc}
, {\b csCandlestick}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPFinancial} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPFinancial} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPFinancialDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ChartStyle} {\b chartStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WidthType} {\b widthType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b twoColored} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brushPositive} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brushNegative} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b penPositive} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b penNegative} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPFinancialDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &keys, const QVector< double > &open, const QVector< double > &high, const QVector< double > &low, const QVector< double > &close, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setChartStyle} ({\b ChartStyle} style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidth} (double {\b width})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidthType} ({\b WidthType} {\b widthType})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTwoColored} (bool {\b twoColored})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrushPositive} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrushNegative} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPenPositive} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPenNegative} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &keys, const QVector< double > &open, const QVector< double > &high, const QVector< double > &low, const QVector< double > &close, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double key, double open, double high, double low, double close)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable1D< QCPFinancialData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable1D} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable1D} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b QCPFinancialDataContainer} {\b timeSeriesToOhlc} (const QVector< double > &time, const QVector< double > &value, double timeBinSize, double timeBinOffset=0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawOhlcPlot} ({\b QCPPainter} *painter, const {\b QCPFinancialDataContainer::const_iterator} &begin, const {\b QCPFinancialDataContainer::const_iterator} &end, bool isSelected)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawCandlestickPlot} ({\b QCPPainter} *painter, const {\b QCPFinancialDataContainer::const_iterator} &begin, const {\b QCPFinancialDataContainer::const_iterator} &end, bool isSelected)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPixelWidth} (double key, double keyPixel) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ohlcSelectTest} (const QPointF &pos, const {\b QCPFinancialDataContainer::const_iterator} &begin, const {\b QCPFinancialDataContainer::const_iterator} &end, {\b QCPFinancialDataContainer::const_iterator} &closestDataPoint) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b candlestickSelectTest} (const QPointF &pos, const {\b QCPFinancialDataContainer::const_iterator} &begin, const {\b QCPFinancialDataContainer::const_iterator} &end, {\b QCPFinancialDataContainer::const_iterator} &closestDataPoint) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVisibleDataBounds} ({\b QCPFinancialDataContainer::const_iterator} &begin, {\b QCPFinancialDataContainer::const_iterator} &end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRectF {\b selectionHitBox} ({\b QCPFinancialDataContainer::const_iterator} it) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable1D< QCPFinancialData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ChartStyle} {\b mChartStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WidthType} {\b mWidthType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTwoColored}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrushPositive}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrushNegative}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPenPositive}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPenNegative}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable1D< QCPFinancialData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPDataContainer}< {\b QCPFinancialData} > > {\b mDataContainer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ChartStyle\:QCPFinancial}
{\xe \v QCPFinancial\:ChartStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPFinancial::ChartStyle}}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the possible representations of OHLC data in the plot.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setChartStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v csOhlc\:QCPFinancial}
{\xe \v QCPFinancial\:csOhlc}
{\qr csOhlc{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Open-High-Low-Close bar representation. \par
}\cell }{\row }
{\xe \v csCandlestick\:QCPFinancial}
{\xe \v QCPFinancial\:csCandlestick}
{\qr csCandlestick{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Candlestick representation. \par
}\cell }{\row }
}
}
{\xe \v WidthType\:QCPFinancial}
{\xe \v QCPFinancial\:WidthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPFinancial::WidthType}}}
\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the ways the width of the financial bar can be specified. Thus it defines what the number passed to {\b setWidth} actually means.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setWidthType}, {\b setWidth} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v wtAbsolute\:QCPFinancial}
{\xe \v QCPFinancial\:wtAbsolute}
{\qr wtAbsolute{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width is in absolute pixels \par
}\cell }{\row }
{\xe \v wtAxisRectRatio\:QCPFinancial}
{\xe \v QCPFinancial\:wtAxisRectRatio}
{\qr wtAxisRectRatio{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width is given by a fraction of the axis rect size \par
}\cell }{\row }
{\xe \v wtPlotCoords\:QCPFinancial}
{\xe \v QCPFinancial\:wtPlotCoords}
{\qr wtPlotCoords{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
width is in key coordinates and thus scales with the key axis range \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPFinancial\:QCPFinancial}
{\xe \v QCPFinancial\:QCPFinancial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPFinancial::QCPFinancial ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPFinancial\:QCPFinancial}
{\xe \v QCPFinancial\:~QCPFinancial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPFinancial::~QCPFinancial (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addData\:QCPFinancial}
{\xe \v QCPFinancial\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::addData (const QVector< double > & keys, const QVector< double > & open, const QVector< double > & high, const QVector< double > & low, const QVector< double > & close, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPFinancial}
{\xe \v QCPFinancial\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::addData (double key, double open, double high, double low, double close)}}
\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brushNegative\:QCPFinancial}
{\xe \v QCPFinancial\:brushNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPFinancial::brushNegative () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brushPositive\:QCPFinancial}
{\xe \v QCPFinancial\:brushPositive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPFinancial::brushPositive () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v candlestickSelectTest\:QCPFinancial}
{\xe \v QCPFinancial\:candlestickSelectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancial::candlestickSelectTest (const QPointF & pos, const {\b QCPFinancialDataContainer::const_iterator} & begin, const {\b QCPFinancialDataContainer::const_iterator} & end, {\b QCPFinancialDataContainer::const_iterator} & closestDataPoint) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v chartStyle\:QCPFinancial}
{\xe \v QCPFinancial\:chartStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ChartStyle} QCPFinancial::chartStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPFinancial}
{\xe \v QCPFinancial\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPFinancialDataContainer} > QCPFinancial::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPFinancial}
{\xe \v QCPFinancial\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPFinancial::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawCandlestickPlot\:QCPFinancial}
{\xe \v QCPFinancial\:drawCandlestickPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::drawCandlestickPlot ({\b QCPPainter} * painter, const {\b QCPFinancialDataContainer::const_iterator} & begin, const {\b QCPFinancialDataContainer::const_iterator} & end, bool isSelected){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLegendIcon\:QCPFinancial}
{\xe \v QCPFinancial\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPFinancial::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawOhlcPlot\:QCPFinancial}
{\xe \v QCPFinancial\:drawOhlcPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::drawOhlcPlot ({\b QCPPainter} * painter, const {\b QCPFinancialDataContainer::const_iterator} & begin, const {\b QCPFinancialDataContainer::const_iterator} & end, bool isSelected){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPFinancial}
{\xe \v QCPFinancial\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPFinancial::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getPixelWidth\:QCPFinancial}
{\xe \v QCPFinancial\:getPixelWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancial::getPixelWidth (double key, double keyPixel) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getValueRange\:QCPFinancial}
{\xe \v QCPFinancial\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPFinancial::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getVisibleDataBounds\:QCPFinancial}
{\xe \v QCPFinancial\:getVisibleDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::getVisibleDataBounds ({\b QCPFinancialDataContainer::const_iterator} & begin, {\b QCPFinancialDataContainer::const_iterator} & end) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ohlcSelectTest\:QCPFinancial}
{\xe \v QCPFinancial\:ohlcSelectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancial::ohlcSelectTest (const QPointF & pos, const {\b QCPFinancialDataContainer::const_iterator} & begin, const {\b QCPFinancialDataContainer::const_iterator} & end, {\b QCPFinancialDataContainer::const_iterator} & closestDataPoint) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v penNegative\:QCPFinancial}
{\xe \v QCPFinancial\:penNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPFinancial::penNegative () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v penPositive\:QCPFinancial}
{\xe \v QCPFinancial\:penPositive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPFinancial::penPositive () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionHitBox\:QCPFinancial}
{\xe \v QCPFinancial\:selectionHitBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRectF QCPFinancial::selectionHitBox ({\b QCPFinancialDataContainer::const_iterator} it) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPFinancial}
{\xe \v QCPFinancial\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPFinancial::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a point-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
If {\i details}  is not 0, it will be set to a {\b QCPDataSelection}, describing the closest data point to {\i pos} .\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTestRect\:QCPFinancial}
{\xe \v QCPFinancial\:selectTestRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPDataSelection} QCPFinancial::selectTestRect (const QRectF & rect, bool onlySelectable) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a rect-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBrushNegative\:QCPFinancial}
{\xe \v QCPFinancial\:setBrushNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setBrushNegative (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrushPositive\:QCPFinancial}
{\xe \v QCPFinancial\:setBrushPositive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setBrushPositive (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setChartStyle\:QCPFinancial}
{\xe \v QCPFinancial\:setChartStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setChartStyle ({\b ChartStyle} style)}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPFinancial}
{\xe \v QCPFinancial\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setData (const QVector< double > & keys, const QVector< double > & open, const QVector< double > & high, const QVector< double > & low, const QVector< double > & close, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPFinancial}
{\xe \v QCPFinancial\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setData (QSharedPointer< {\b QCPFinancialDataContainer} > data)}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPenNegative\:QCPFinancial}
{\xe \v QCPFinancial\:setPenNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setPenNegative (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPenPositive\:QCPFinancial}
{\xe \v QCPFinancial\:setPenPositive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setPenPositive (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTwoColored\:QCPFinancial}
{\xe \v QCPFinancial\:setTwoColored}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setTwoColored (bool twoColored)}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWidth\:QCPFinancial}
{\xe \v QCPFinancial\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setWidth (double width)}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWidthType\:QCPFinancial}
{\xe \v QCPFinancial\:setWidthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPFinancial::setWidthType ({\b WidthType} widthType)}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timeSeriesToOhlc\:QCPFinancial}
{\xe \v QCPFinancial\:timeSeriesToOhlc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b QCPFinancialDataContainer} QCPFinancial::timeSeriesToOhlc (const QVector< double > & time, const QVector< double > & value, double timeBinSize, double timeBinOffset = {\f2 0}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v twoColored\:QCPFinancial}
{\xe \v QCPFinancial\:twoColored}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPFinancial::twoColored () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:QCPFinancial}
{\xe \v QCPFinancial\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancial::width () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v widthType\:QCPFinancial}
{\xe \v QCPFinancial\:widthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WidthType} QCPFinancial::widthType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPFinancial}
{\xe \v QCPFinancial\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPFinancial}
{\xe \v QCPFinancial\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBrushNegative\:QCPFinancial}
{\xe \v QCPFinancial\:mBrushNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPFinancial::mBrushNegative{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrushPositive\:QCPFinancial}
{\xe \v QCPFinancial\:mBrushPositive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPFinancial::mBrushPositive{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mChartStyle\:QCPFinancial}
{\xe \v QCPFinancial\:mChartStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ChartStyle} QCPFinancial::mChartStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPenNegative\:QCPFinancial}
{\xe \v QCPFinancial\:mPenNegative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPFinancial::mPenNegative{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPenPositive\:QCPFinancial}
{\xe \v QCPFinancial\:mPenPositive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPFinancial::mPenPositive{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTwoColored\:QCPFinancial}
{\xe \v QCPFinancial\:mTwoColored}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPFinancial::mTwoColored{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWidth\:QCPFinancial}
{\xe \v QCPFinancial\:mWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancial::mWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWidthType\:QCPFinancial}
{\xe \v QCPFinancial\:mWidthType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WidthType} QCPFinancial::mWidthType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPFinancialData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPFinancialData}
{\xe \v QCPFinancialData}
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPFinancialData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPFinancialData} (double {\b key}, double {\b open}, double {\b high}, double {\b low}, double {\b close})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sortKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b QCPFinancialData} {\b fromSortKey} (double {\b sortKey})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b sortKeyIsMainKey} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b key}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b open}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b high}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b low}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b close}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPFinancialData\:QCPFinancialData}
{\xe \v QCPFinancialData\:QCPFinancialData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPFinancialData::QCPFinancialData ()}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPFinancialData\:QCPFinancialData}
{\xe \v QCPFinancialData\:QCPFinancialData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPFinancialData::QCPFinancialData (double key, double open, double high, double low, double close)}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fromSortKey\:QCPFinancialData}
{\xe \v QCPFinancialData\:fromSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b QCPFinancialData} QCPFinancialData::fromSortKey (double sortKey){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainKey\:QCPFinancialData}
{\xe \v QCPFinancialData\:mainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::mainKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainValue\:QCPFinancialData}
{\xe \v QCPFinancialData\:mainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::mainValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKey\:QCPFinancialData}
{\xe \v QCPFinancialData\:sortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::sortKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKeyIsMainKey\:QCPFinancialData}
{\xe \v QCPFinancialData\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPFinancialData::sortKeyIsMainKey (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueRange\:QCPFinancialData}
{\xe \v QCPFinancialData\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPFinancialData::valueRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v close\:QCPFinancialData}
{\xe \v QCPFinancialData\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::close}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v high\:QCPFinancialData}
{\xe \v QCPFinancialData\:high}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::high}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key\:QCPFinancialData}
{\xe \v QCPFinancialData\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::key}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v low\:QCPFinancialData}
{\xe \v QCPFinancialData\:low}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::low}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v open\:QCPFinancialData}
{\xe \v QCPFinancialData\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPFinancialData::open}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPGraph Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPGraph}
{\xe \v QCPGraph}
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPGraph:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LineStyle} \{ {\b lsNone}
, {\b lsLine}
, {\b lsStepLeft}
, {\b lsStepRight}
, {\b lsStepCenter}
, {\b lsImpulse}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPGraph} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPGraphDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineStyle} {\b lineStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b scatterStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b scatterSkip} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} * {\b channelFillGraph} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b adaptiveSampling} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPGraphDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLineStyle} ({\b LineStyle} ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterStyle} (const {\b QCPScatterStyle} &style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterSkip} (int skip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setChannelFillGraph} ({\b QCPGraph} *targetGraph)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAdaptiveSampling} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double key, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable1D< QCPGraphData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable1D} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable1D} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawFill} ({\b QCPPainter} *painter, QVector< QPointF > *lines) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawScatterPlot} ({\b QCPPainter} *painter, const QVector< QPointF > &scatters, const {\b QCPScatterStyle} &style) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLinePlot} ({\b QCPPainter} *painter, const QVector< QPointF > &lines) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawImpulsePlot} ({\b QCPPainter} *painter, const QVector< QPointF > &lines) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b getOptimizedLineData} (QVector< {\b QCPGraphData} > *lineData, const {\b QCPGraphDataContainer::const_iterator} &begin, const {\b QCPGraphDataContainer::const_iterator} &end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b getOptimizedScatterData} (QVector< {\b QCPGraphData} > *scatterData, {\b QCPGraphDataContainer::const_iterator} begin, {\b QCPGraphDataContainer::const_iterator} end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVisibleDataBounds} ({\b QCPGraphDataContainer::const_iterator} &begin, {\b QCPGraphDataContainer::const_iterator} &end, const {\b QCPDataRange} &rangeRestriction) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLines} (QVector< QPointF > *lines, const {\b QCPDataRange} &dataRange) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getScatters} (QVector< QPointF > *scatters, const {\b QCPDataRange} &dataRange) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b dataToLines} (const QVector< {\b QCPGraphData} > &{\b data}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b dataToStepLeftLines} (const QVector< {\b QCPGraphData} > &{\b data}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b dataToStepRightLines} (const QVector< {\b QCPGraphData} > &{\b data}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b dataToStepCenterLines} (const QVector< {\b QCPGraphData} > &{\b data}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b dataToImpulseLines} (const QVector< {\b QCPGraphData} > &{\b data}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< {\b QCPDataRange} > {\b getNonNanSegments} (const QVector< QPointF > *lineData, Qt::Orientation keyOrientation) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPair< {\b QCPDataRange}, {\b QCPDataRange} > > {\b getOverlappingSegments} (QVector< {\b QCPDataRange} > thisSegments, const QVector< QPointF > *thisData, QVector< {\b QCPDataRange} > otherSegments, const QVector< QPointF > *otherData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b segmentsIntersect} (double aLower, double aUpper, double bLower, double bUpper, int &bPrecedence) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b getFillBasePoint} (QPointF matchingDataPoint) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPolygonF {\b getFillPolygon} (const QVector< QPointF > *lineData, {\b QCPDataRange} segment) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPolygonF {\b getChannelFillPolygon} (const QVector< QPointF > *thisData, {\b QCPDataRange} thisSegment, const QVector< QPointF > *otherData, {\b QCPDataRange} otherSegment) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b findIndexBelowX} (const QVector< QPointF > *{\b data}, double x) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b findIndexAboveX} (const QVector< QPointF > *{\b data}, double x) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b findIndexBelowY} (const QVector< QPointF > *{\b data}, double y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b findIndexAboveY} (const QVector< QPointF > *{\b data}, double y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointDistance} (const QPointF &pixelPoint, {\b QCPGraphDataContainer::const_iterator} &closestData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable1D< QCPGraphData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineStyle} {\b mLineStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b mScatterStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mScatterSkip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPGraph} > {\b mChannelFillGraph}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAdaptiveSampling}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable1D< QCPGraphData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPDataContainer}< {\b QCPGraphData} > > {\b mDataContainer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LineStyle\:QCPGraph}
{\xe \v QCPGraph\:LineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPGraph::LineStyle}}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how the graph's line is represented visually in the plot. The line is drawn with the current pen of the graph ({\b setPen}). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setLineStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lsNone\:QCPGraph}
{\xe \v QCPGraph\:lsNone}
{\qr lsNone{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data points are not connected with any lines (e.g. data only represented with symbols according to the scatter style, see {\b setScatterStyle}) \par
}\cell }{\row }
{\xe \v lsLine\:QCPGraph}
{\xe \v QCPGraph\:lsLine}
{\qr lsLine{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data points are connected by a straight line \par
}\cell }{\row }
{\xe \v lsStepLeft\:QCPGraph}
{\xe \v QCPGraph\:lsStepLeft}
{\qr lsStepLeft{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
line is drawn as steps where the step height is the value of the left data point \par
}\cell }{\row }
{\xe \v lsStepRight\:QCPGraph}
{\xe \v QCPGraph\:lsStepRight}
{\qr lsStepRight{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
line is drawn as steps where the step height is the value of the right data point \par
}\cell }{\row }
{\xe \v lsStepCenter\:QCPGraph}
{\xe \v QCPGraph\:lsStepCenter}
{\qr lsStepCenter{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
line is drawn as steps where the step is in between two data points \par
}\cell }{\row }
{\xe \v lsImpulse\:QCPGraph}
{\xe \v QCPGraph\:lsImpulse}
{\qr lsImpulse{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
each data point is represented by a line parallel to the value axis, which reaches from the data point to the zero-value-line \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPGraph\:QCPGraph}
{\xe \v QCPGraph\:QCPGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPGraph::QCPGraph ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPGraph\:QCPGraph}
{\xe \v QCPGraph\:~QCPGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPGraph::~QCPGraph (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adaptiveSampling\:QCPGraph}
{\xe \v QCPGraph\:adaptiveSampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGraph::adaptiveSampling () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPGraph}
{\xe \v QCPGraph\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::addData (const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPGraph}
{\xe \v QCPGraph\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::addData (double key, double value)}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v channelFillGraph\:QCPGraph}
{\xe \v QCPGraph\:channelFillGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGraph} * QCPGraph::channelFillGraph () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPGraph}
{\xe \v QCPGraph\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPGraphDataContainer} > QCPGraph::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataToImpulseLines\:QCPGraph}
{\xe \v QCPGraph\:dataToImpulseLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPGraph::dataToImpulseLines (const QVector< {\b QCPGraphData} > & data) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataToLines\:QCPGraph}
{\xe \v QCPGraph\:dataToLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPGraph::dataToLines (const QVector< {\b QCPGraphData} > & data) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataToStepCenterLines\:QCPGraph}
{\xe \v QCPGraph\:dataToStepCenterLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPGraph::dataToStepCenterLines (const QVector< {\b QCPGraphData} > & data) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataToStepLeftLines\:QCPGraph}
{\xe \v QCPGraph\:dataToStepLeftLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPGraph::dataToStepLeftLines (const QVector< {\b QCPGraphData} > & data) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataToStepRightLines\:QCPGraph}
{\xe \v QCPGraph\:dataToStepRightLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPGraph::dataToStepRightLines (const QVector< {\b QCPGraphData} > & data) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPGraph}
{\xe \v QCPGraph\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawFill\:QCPGraph}
{\xe \v QCPGraph\:drawFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::drawFill ({\b QCPPainter} * painter, QVector< QPointF > * lines) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawImpulsePlot\:QCPGraph}
{\xe \v QCPGraph\:drawImpulsePlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::drawImpulsePlot ({\b QCPPainter} * painter, const QVector< QPointF > & lines) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLegendIcon\:QCPGraph}
{\xe \v QCPGraph\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawLinePlot\:QCPGraph}
{\xe \v QCPGraph\:drawLinePlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::drawLinePlot ({\b QCPPainter} * painter, const QVector< QPointF > & lines) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawScatterPlot\:QCPGraph}
{\xe \v QCPGraph\:drawScatterPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::drawScatterPlot ({\b QCPPainter} * painter, const QVector< QPointF > & scatters, const {\b QCPScatterStyle} & style) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v findIndexAboveX\:QCPGraph}
{\xe \v QCPGraph\:findIndexAboveX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPGraph::findIndexAboveX (const QVector< QPointF > * data, double x) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v findIndexAboveY\:QCPGraph}
{\xe \v QCPGraph\:findIndexAboveY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPGraph::findIndexAboveY (const QVector< QPointF > * data, double y) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v findIndexBelowX\:QCPGraph}
{\xe \v QCPGraph\:findIndexBelowX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPGraph::findIndexBelowX (const QVector< QPointF > * data, double x) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v findIndexBelowY\:QCPGraph}
{\xe \v QCPGraph\:findIndexBelowY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPGraph::findIndexBelowY (const QVector< QPointF > * data, double y) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getChannelFillPolygon\:QCPGraph}
{\xe \v QCPGraph\:getChannelFillPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QPolygonF QCPGraph::getChannelFillPolygon (const QVector< QPointF > * thisData, {\b QCPDataRange} thisSegment, const QVector< QPointF > * otherData, {\b QCPDataRange} otherSegment) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getFillBasePoint\:QCPGraph}
{\xe \v QCPGraph\:getFillBasePoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPGraph::getFillBasePoint (QPointF matchingDataPoint) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getFillPolygon\:QCPGraph}
{\xe \v QCPGraph\:getFillPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QPolygonF QCPGraph::getFillPolygon (const QVector< QPointF > * lineData, {\b QCPDataRange} segment) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPGraph}
{\xe \v QCPGraph\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPGraph::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getLines\:QCPGraph}
{\xe \v QCPGraph\:getLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::getLines (QVector< QPointF > * lines, const {\b QCPDataRange} & dataRange) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getNonNanSegments\:QCPGraph}
{\xe \v QCPGraph\:getNonNanSegments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< {\b QCPDataRange} > QCPGraph::getNonNanSegments (const QVector< QPointF > * lineData, Qt::Orientation keyOrientation) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getOptimizedLineData\:QCPGraph}
{\xe \v QCPGraph\:getOptimizedLineData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::getOptimizedLineData (QVector< {\b QCPGraphData} > * lineData, const {\b QCPGraphDataContainer::const_iterator} & begin, const {\b QCPGraphDataContainer::const_iterator} & end) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getOptimizedScatterData\:QCPGraph}
{\xe \v QCPGraph\:getOptimizedScatterData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGraph::getOptimizedScatterData (QVector< {\b QCPGraphData} > * scatterData, {\b QCPGraphDataContainer::const_iterator} begin, {\b QCPGraphDataContainer::const_iterator} end) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getOverlappingSegments\:QCPGraph}
{\xe \v QCPGraph\:getOverlappingSegments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPair< {\b QCPDataRange}, {\b QCPDataRange} > > QCPGraph::getOverlappingSegments (QVector< {\b QCPDataRange} > thisSegments, const QVector< QPointF > * thisData, QVector< {\b QCPDataRange} > otherSegments, const QVector< QPointF > * otherData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getScatters\:QCPGraph}
{\xe \v QCPGraph\:getScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::getScatters (QVector< QPointF > * scatters, const {\b QCPDataRange} & dataRange) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getValueRange\:QCPGraph}
{\xe \v QCPGraph\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPGraph::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getVisibleDataBounds\:QCPGraph}
{\xe \v QCPGraph\:getVisibleDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::getVisibleDataBounds ({\b QCPGraphDataContainer::const_iterator} & begin, {\b QCPGraphDataContainer::const_iterator} & end, const {\b QCPDataRange} & rangeRestriction) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineStyle\:QCPGraph}
{\xe \v QCPGraph\:lineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineStyle} QCPGraph::lineStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pointDistance\:QCPGraph}
{\xe \v QCPGraph\:pointDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPGraph::pointDistance (const QPointF & pixelPoint, {\b QCPGraphDataContainer::const_iterator} & closestData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scatterSkip\:QCPGraph}
{\xe \v QCPGraph\:scatterSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPGraph::scatterSkip () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scatterStyle\:QCPGraph}
{\xe \v QCPGraph\:scatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPGraph::scatterStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v segmentsIntersect\:QCPGraph}
{\xe \v QCPGraph\:segmentsIntersect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGraph::segmentsIntersect (double aLower, double aUpper, double bLower, double bUpper, int & bPrecedence) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPGraph}
{\xe \v QCPGraph\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPGraph::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a point-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
If {\i details}  is not 0, it will be set to a {\b QCPDataSelection}, describing the closest data point to {\i pos} .\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAdaptiveSampling\:QCPGraph}
{\xe \v QCPGraph\:setAdaptiveSampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setAdaptiveSampling (bool enabled)}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setChannelFillGraph\:QCPGraph}
{\xe \v QCPGraph\:setChannelFillGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setChannelFillGraph ({\b QCPGraph} * targetGraph)}}
\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPGraph}
{\xe \v QCPGraph\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setData (const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPGraph}
{\xe \v QCPGraph\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setData (QSharedPointer< {\b QCPGraphDataContainer} > data)}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLineStyle\:QCPGraph}
{\xe \v QCPGraph\:setLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setLineStyle ({\b LineStyle} ls)}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScatterSkip\:QCPGraph}
{\xe \v QCPGraph\:setScatterSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setScatterSkip (int skip)}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScatterStyle\:QCPGraph}
{\xe \v QCPGraph\:setScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGraph::setScatterStyle (const {\b QCPScatterStyle} & style)}}
\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPGraph}
{\xe \v QCPGraph\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPGraph}
{\xe \v QCPGraph\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAdaptiveSampling\:QCPGraph}
{\xe \v QCPGraph\:mAdaptiveSampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGraph::mAdaptiveSampling{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mChannelFillGraph\:QCPGraph}
{\xe \v QCPGraph\:mChannelFillGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPGraph}> QCPGraph::mChannelFillGraph{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLineStyle\:QCPGraph}
{\xe \v QCPGraph\:mLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineStyle} QCPGraph::mLineStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScatterSkip\:QCPGraph}
{\xe \v QCPGraph\:mScatterSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPGraph::mScatterSkip{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScatterStyle\:QCPGraph}
{\xe \v QCPGraph\:mScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPGraph::mScatterStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPGraphData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPGraphData}
{\xe \v QCPGraphData}
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraphData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraphData} (double {\b key}, double {\b value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sortKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b QCPGraphData} {\b fromSortKey} (double {\b sortKey})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b sortKeyIsMainKey} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b key}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPGraphData\:QCPGraphData}
{\xe \v QCPGraphData\:QCPGraphData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPGraphData::QCPGraphData ()}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPGraphData\:QCPGraphData}
{\xe \v QCPGraphData\:QCPGraphData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPGraphData::QCPGraphData (double key, double value)}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fromSortKey\:QCPGraphData}
{\xe \v QCPGraphData\:fromSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b QCPGraphData} QCPGraphData::fromSortKey (double sortKey){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainKey\:QCPGraphData}
{\xe \v QCPGraphData\:mainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPGraphData::mainKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainValue\:QCPGraphData}
{\xe \v QCPGraphData\:mainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPGraphData::mainValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKey\:QCPGraphData}
{\xe \v QCPGraphData\:sortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPGraphData::sortKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKeyIsMainKey\:QCPGraphData}
{\xe \v QCPGraphData\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPGraphData::sortKeyIsMainKey (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueRange\:QCPGraphData}
{\xe \v QCPGraphData\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPGraphData::valueRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v key\:QCPGraphData}
{\xe \v QCPGraphData\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPGraphData::key}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:QCPGraphData}
{\xe \v QCPGraphData\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPGraphData::value}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPGrid Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPGrid}
{\xe \v QCPGrid}
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPGrid:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_grid.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGrid} ({\b QCPAxis} *parentAxis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b subGridVisible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedSubGrid} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedZeroLine} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b subGridPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b zeroLinePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubGridVisible} (bool {\b visible})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedSubGrid} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedZeroLine} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubGridPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setZeroLinePen} (const QPen &{\b pen})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawGridLines} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawSubGridLines} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSubGridVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedSubGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedZeroLine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSubGridPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mZeroLinePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b mParentAxis}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxis}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPGrid\:QCPGrid}
{\xe \v QCPGrid\:QCPGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPGrid::QCPGrid ({\b QCPAxis} * parentAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v antialiasedSubGrid\:QCPGrid}
{\xe \v QCPGrid\:antialiasedSubGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGrid::antialiasedSubGrid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedZeroLine\:QCPGrid}
{\xe \v QCPGrid\:antialiasedZeroLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGrid::antialiasedZeroLine () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPGrid}
{\xe \v QCPGrid\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGrid::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPGrid}
{\xe \v QCPGrid\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPGrid::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawGridLines\:QCPGrid}
{\xe \v QCPGrid\:drawGridLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::drawGridLines ({\b QCPPainter} * painter) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawSubGridLines\:QCPGrid}
{\xe \v QCPGrid\:drawSubGridLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::drawSubGridLines ({\b QCPPainter} * painter) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPGrid}
{\xe \v QCPGrid\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPGrid::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedSubGrid\:QCPGrid}
{\xe \v QCPGrid\:setAntialiasedSubGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::setAntialiasedSubGrid (bool enabled)}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedZeroLine\:QCPGrid}
{\xe \v QCPGrid\:setAntialiasedZeroLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::setAntialiasedZeroLine (bool enabled)}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPGrid}
{\xe \v QCPGrid\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubGridPen\:QCPGrid}
{\xe \v QCPGrid\:setSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::setSubGridPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubGridVisible\:QCPGrid}
{\xe \v QCPGrid\:setSubGridVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::setSubGridVisible (bool visible)}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setZeroLinePen\:QCPGrid}
{\xe \v QCPGrid\:setZeroLinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPGrid::setZeroLinePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subGridPen\:QCPGrid}
{\xe \v QCPGrid\:subGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPGrid::subGridPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subGridVisible\:QCPGrid}
{\xe \v QCPGrid\:subGridVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGrid::subGridVisible () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v zeroLinePen\:QCPGrid}
{\xe \v QCPGrid\:zeroLinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPGrid::zeroLinePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAxis\:QCPGrid}
{\xe \v QCPGrid\:QCPAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAxis}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAntialiasedSubGrid\:QCPGrid}
{\xe \v QCPGrid\:mAntialiasedSubGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGrid::mAntialiasedSubGrid{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAntialiasedZeroLine\:QCPGrid}
{\xe \v QCPGrid\:mAntialiasedZeroLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGrid::mAntialiasedZeroLine{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentAxis\:QCPGrid}
{\xe \v QCPGrid\:mParentAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis}* QCPGrid::mParentAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPGrid}
{\xe \v QCPGrid\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPGrid::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubGridPen\:QCPGrid}
{\xe \v QCPGrid\:mSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPGrid::mSubGridPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubGridVisible\:QCPGrid}
{\xe \v QCPGrid\:mSubGridVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPGrid::mSubGridVisible{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mZeroLinePen\:QCPGrid}
{\xe \v QCPGrid\:mZeroLinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPGrid::mZeroLinePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemAnchor Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemAnchor}
{\xe \v QCPItemAnchor}
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemAnchor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_anchor.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} ({\b QCustomPlot} *parentPlot, {\b QCPAbstractItem} *parentItem, const QString &{\b name}, int anchorId=-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemAnchor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b pixelPosition} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPItemPosition} * {\b toQCPItemPosition} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addChildX} ({\b QCPItemPosition} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeChildX} ({\b QCPItemPosition} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addChildY} ({\b QCPItemPosition} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeChildY} ({\b QCPItemPosition} *pos)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} * {\b mParentItem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mAnchorId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSet< {\b QCPItemPosition} * > {\b mChildrenX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSet< {\b QCPItemPosition} * > {\b mChildrenY}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemPosition}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemAnchor\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:QCPItemAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemAnchor::QCPItemAnchor ({\b QCustomPlot} * parentPlot, {\b QCPAbstractItem} * parentItem, const QString & name, int anchorId = {\f2 -1})}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemAnchor\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:~QCPItemAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemAnchor::~QCPItemAnchor (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addChildX\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:addChildX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemAnchor::addChildX ({\b QCPItemPosition} * pos){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addChildY\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:addChildY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemAnchor::addChildY ({\b QCPItemPosition} * pos){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPItemAnchor::name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelPosition\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:pixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemAnchor::pixelPosition () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPItemPosition} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v removeChildX\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:removeChildX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemAnchor::removeChildX ({\b QCPItemPosition} * pos){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeChildY\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:removeChildY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemAnchor::removeChildY ({\b QCPItemPosition} * pos){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toQCPItemPosition\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:toQCPItemPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPItemPosition} * QCPItemAnchor::toQCPItemPosition (){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPItemPosition} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPItemPosition\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:QCPItemPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPItemPosition}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAnchorId\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:mAnchorId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPItemAnchor::mAnchorId{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mChildrenX\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:mChildrenX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSet<{\b QCPItemPosition}*> QCPItemAnchor::mChildrenX{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mChildrenY\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:mChildrenY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSet<{\b QCPItemPosition}*> QCPItemAnchor::mChildrenY{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mName\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:mName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPItemAnchor::mName{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentItem\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:mParentItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractItem}* QCPItemAnchor::mParentItem{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPItemAnchor}
{\xe \v QCPItemAnchor\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPItemAnchor::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemBracket Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemBracket}
{\xe \v QCPItemBracket}
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemBracket:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_bracket.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BracketStyle} \{ {\b bsSquare}
, {\b bsRound}
, {\b bsCurly}
, {\b bsCalligraphic}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemBracket} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemBracket} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b length} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BracketStyle} {\b style} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLength} (double {\b length})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStyle} ({\b BracketStyle} {\b style})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b center}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorIndex} \{ {\b aiCenter}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BracketStyle} {\b mStyle}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AnchorIndex\:QCPItemBracket}
{\xe \v QCPItemBracket\:AnchorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemBracket::AnchorIndex}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v aiCenter\:QCPItemBracket}
{\xe \v QCPItemBracket\:aiCenter}
{\qr aiCenter{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
\cell }{\cell }{\row }
}
}
{\xe \v BracketStyle\:QCPItemBracket}
{\xe \v QCPItemBracket\:BracketStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemBracket::BracketStyle}}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the various visual shapes of the bracket item. The appearance can be further modified by {\b setLength} and {\b setPen}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v bsSquare\:QCPItemBracket}
{\xe \v QCPItemBracket\:bsSquare}
{\qr bsSquare{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A brace with angled edges. \par
}\cell }{\row }
{\xe \v bsRound\:QCPItemBracket}
{\xe \v QCPItemBracket\:bsRound}
{\qr bsRound{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A brace with round edges. \par
}\cell }{\row }
{\xe \v bsCurly\:QCPItemBracket}
{\xe \v QCPItemBracket\:bsCurly}
{\qr bsCurly{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A curly brace. \par
}\cell }{\row }
{\xe \v bsCalligraphic\:QCPItemBracket}
{\xe \v QCPItemBracket\:bsCalligraphic}
{\qr bsCalligraphic{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A curly brace with varying stroke width giving a calligraphic impression. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemBracket\:QCPItemBracket}
{\xe \v QCPItemBracket\:QCPItemBracket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemBracket::QCPItemBracket ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemBracket\:QCPItemBracket}
{\xe \v QCPItemBracket\:~QCPItemBracket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemBracket::~QCPItemBracket (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchorPixelPosition\:QCPItemBracket}
{\xe \v QCPItemBracket\:anchorPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemBracket::anchorPixelPosition (int anchorId) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPItemBracket}
{\xe \v QCPItemBracket\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemBracket::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v length\:QCPItemBracket}
{\xe \v QCPItemBracket\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemBracket::length () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemBracket}
{\xe \v QCPItemBracket\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemBracket::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemBracket}
{\xe \v QCPItemBracket\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemBracket::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemBracket}
{\xe \v QCPItemBracket\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemBracket::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemBracket}
{\xe \v QCPItemBracket\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemBracket::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setLength\:QCPItemBracket}
{\xe \v QCPItemBracket\:setLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemBracket::setLength (double length)}}
\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemBracket}
{\xe \v QCPItemBracket\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemBracket::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemBracket}
{\xe \v QCPItemBracket\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemBracket::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setStyle\:QCPItemBracket}
{\xe \v QCPItemBracket\:setStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemBracket::setStyle ({\b BracketStyle} style)}}
\par
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v style\:QCPItemBracket}
{\xe \v QCPItemBracket\:style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BracketStyle} QCPItemBracket::style () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v center\:QCPItemBracket}
{\xe \v QCPItemBracket\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemBracket::center}}
\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:QCPItemBracket}
{\xe \v QCPItemBracket\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemBracket::left}}
\par
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLength\:QCPItemBracket}
{\xe \v QCPItemBracket\:mLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemBracket::mLength{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemBracket}
{\xe \v QCPItemBracket\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemBracket::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemBracket}
{\xe \v QCPItemBracket\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemBracket::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mStyle\:QCPItemBracket}
{\xe \v QCPItemBracket\:mStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BracketStyle} QCPItemBracket::mStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPItemBracket}
{\xe \v QCPItemBracket\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemBracket::right}}
\par
{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemCurve Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemCurve}
{\xe \v QCPItemCurve}
{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemCurve:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_curve.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemCurve} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemCurve} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b head} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b tail} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHead} (const {\b QCPLineEnding} &{\b head})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTail} (const {\b QCPLineEnding} &{\b tail})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b startDir}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b endDir}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b end}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b mHead}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b mTail}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemCurve\:QCPItemCurve}
{\xe \v QCPItemCurve\:QCPItemCurve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemCurve::QCPItemCurve ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemCurve\:QCPItemCurve}
{\xe \v QCPItemCurve\:~QCPItemCurve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemCurve::~QCPItemCurve (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw\:QCPItemCurve}
{\xe \v QCPItemCurve\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemCurve::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v head\:QCPItemCurve}
{\xe \v QCPItemCurve\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemCurve::head () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemCurve}
{\xe \v QCPItemCurve\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemCurve::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemCurve}
{\xe \v QCPItemCurve\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemCurve::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemCurve}
{\xe \v QCPItemCurve\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemCurve::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemCurve}
{\xe \v QCPItemCurve\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemCurve::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setHead\:QCPItemCurve}
{\xe \v QCPItemCurve\:setHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemCurve::setHead (const {\b QCPLineEnding} & head)}}
\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemCurve}
{\xe \v QCPItemCurve\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemCurve::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemCurve}
{\xe \v QCPItemCurve\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemCurve::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTail\:QCPItemCurve}
{\xe \v QCPItemCurve\:setTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemCurve::setTail (const {\b QCPLineEnding} & tail)}}
\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tail\:QCPItemCurve}
{\xe \v QCPItemCurve\:tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemCurve::tail () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v end\:QCPItemCurve}
{\xe \v QCPItemCurve\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemCurve::end}}
\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v endDir\:QCPItemCurve}
{\xe \v QCPItemCurve\:endDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemCurve::endDir}}
\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mHead\:QCPItemCurve}
{\xe \v QCPItemCurve\:mHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemCurve::mHead{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemCurve}
{\xe \v QCPItemCurve\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemCurve::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemCurve}
{\xe \v QCPItemCurve\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemCurve::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTail\:QCPItemCurve}
{\xe \v QCPItemCurve\:mTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemCurve::mTail{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start\:QCPItemCurve}
{\xe \v QCPItemCurve\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemCurve::start}}
\par
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v startDir\:QCPItemCurve}
{\xe \v QCPItemCurve\:startDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemCurve::startDir}}
\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemEllipse Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemEllipse}
{\xe \v QCPItemEllipse}
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemEllipse:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_ellipse.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemEllipse} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemEllipse} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b selectedBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b topLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b bottomRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b topLeftRim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b topRightRim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottomRightRim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottomLeftRim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b center}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorIndex} \{ {\b aiTopLeftRim}
, {\b aiTop}
, {\b aiTopRightRim}
, {\b aiRight}
, {\b aiBottomRightRim}
, {\b aiBottom}
, {\b aiBottomLeftRim}
, {\b aiLeft}
, {\b aiCenter}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mainBrush} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mSelectedBrush}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AnchorIndex\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:AnchorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemEllipse::AnchorIndex}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v aiTopLeftRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiTopLeftRim}
{\qr aiTopLeftRim{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
\cell }{\cell }{\row }
{\xe \v aiTop\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiTop}
{\qr aiTop{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
\cell }{\cell }{\row }
{\xe \v aiTopRightRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiTopRightRim}
{\qr aiTopRightRim{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
\cell }{\cell }{\row }
{\xe \v aiRight\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiRight}
{\qr aiRight{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
\cell }{\cell }{\row }
{\xe \v aiBottomRightRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiBottomRightRim}
{\qr aiBottomRightRim{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
\cell }{\cell }{\row }
{\xe \v aiBottom\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiBottom}
{\qr aiBottom{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
\cell }{\cell }{\row }
{\xe \v aiBottomLeftRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiBottomLeftRim}
{\qr aiBottomLeftRim{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
\cell }{\cell }{\row }
{\xe \v aiLeft\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiLeft}
{\qr aiLeft{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
\cell }{\cell }{\row }
{\xe \v aiCenter\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:aiCenter}
{\qr aiCenter{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemEllipse\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:QCPItemEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemEllipse::QCPItemEllipse ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemEllipse\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:~QCPItemEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemEllipse::~QCPItemEllipse (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchorPixelPosition\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:anchorPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemEllipse::anchorPixelPosition (int anchorId) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v brush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemEllipse::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemEllipse::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mainBrush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:mainBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemEllipse::mainBrush () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemEllipse::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemEllipse::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBrush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:selectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemEllipse::selectedBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemEllipse::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemEllipse::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBrush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemEllipse::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemEllipse::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBrush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:setSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemEllipse::setSelectedBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemEllipse::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bottom\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::bottom}}
\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomLeftRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:bottomLeftRim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::bottomLeftRim}}
\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRight\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:bottomRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemEllipse::bottomRight}}
\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRightRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:bottomRightRim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::bottomRightRim}}
\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v center\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::center}}
\par
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::left}}
\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemEllipse::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemEllipse::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBrush\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:mSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemEllipse::mSelectedBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemEllipse::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::right}}
\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::top}}
\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeft\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:topLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemEllipse::topLeft}}
\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeftRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:topLeftRim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::topLeftRim}}
\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topRightRim\:QCPItemEllipse}
{\xe \v QCPItemEllipse\:topRightRim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemEllipse::topRightRim}}
\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemLine Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemLine}
{\xe \v QCPItemLine}
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemLine:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_line.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemLine} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemLine} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b head} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b tail} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHead} (const {\b QCPLineEnding} &{\b head})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTail} (const {\b QCPLineEnding} &{\b tail})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b end}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLineF {\b getRectClippedLine} (const {\b QCPVector2D} &{\b start}, const {\b QCPVector2D} &{\b end}, const QRect &rect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b mHead}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} {\b mTail}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemLine\:QCPItemLine}
{\xe \v QCPItemLine\:QCPItemLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemLine::QCPItemLine ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemLine\:QCPItemLine}
{\xe \v QCPItemLine\:~QCPItemLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemLine::~QCPItemLine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw\:QCPItemLine}
{\xe \v QCPItemLine\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemLine::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getRectClippedLine\:QCPItemLine}
{\xe \v QCPItemLine\:getRectClippedLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineF QCPItemLine::getRectClippedLine (const {\b QCPVector2D} & start, const {\b QCPVector2D} & end, const QRect & rect) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v head\:QCPItemLine}
{\xe \v QCPItemLine\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemLine::head () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemLine}
{\xe \v QCPItemLine\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemLine::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemLine}
{\xe \v QCPItemLine\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemLine::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemLine}
{\xe \v QCPItemLine\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemLine::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemLine}
{\xe \v QCPItemLine\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemLine::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setHead\:QCPItemLine}
{\xe \v QCPItemLine\:setHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemLine::setHead (const {\b QCPLineEnding} & head)}}
\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemLine}
{\xe \v QCPItemLine\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemLine::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemLine}
{\xe \v QCPItemLine\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemLine::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTail\:QCPItemLine}
{\xe \v QCPItemLine\:setTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemLine::setTail (const {\b QCPLineEnding} & tail)}}
\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tail\:QCPItemLine}
{\xe \v QCPItemLine\:tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemLine::tail () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v end\:QCPItemLine}
{\xe \v QCPItemLine\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemLine::end}}
\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mHead\:QCPItemLine}
{\xe \v QCPItemLine\:mHead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemLine::mHead{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemLine}
{\xe \v QCPItemLine\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemLine::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemLine}
{\xe \v QCPItemLine\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemLine::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTail\:QCPItemLine}
{\xe \v QCPItemLine\:mTail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLineEnding} QCPItemLine::mTail{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start\:QCPItemLine}
{\xe \v QCPItemLine\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemLine::start}}
\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemPixmap Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemPixmap}
{\xe \v QCPItemPixmap}
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemPixmap:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_pixmap.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPixmap} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemPixmap} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b pixmap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b scaled} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b aspectRatioMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::TransformationMode {\b transformationMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPixmap} (const QPixmap &{\b pixmap})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScaled} (bool {\b scaled}, Qt::AspectRatioMode {\b aspectRatioMode}=Qt::KeepAspectRatio, Qt::TransformationMode {\b transformationMode}=Qt::SmoothTransformation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b topLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b bottomRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b topRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottomLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b left}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorIndex} \{ {\b aiTop}
, {\b aiTopRight}
, {\b aiRight}
, {\b aiBottom}
, {\b aiBottomLeft}
, {\b aiLeft}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateScaledPixmap} (QRect finalRect=QRect(), bool flipHorz=false, bool flipVert=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b getFinalRect} (bool *flippedHorz=nullptr, bool *flippedVert=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mScaledPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mScaled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mScaledPixmapInvalidated}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b mAspectRatioMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::TransformationMode {\b mTransformationMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AnchorIndex\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:AnchorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemPixmap::AnchorIndex}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v aiTop\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aiTop}
{\qr aiTop{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
\cell }{\cell }{\row }
{\xe \v aiTopRight\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aiTopRight}
{\qr aiTopRight{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
\cell }{\cell }{\row }
{\xe \v aiRight\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aiRight}
{\qr aiRight{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\cell }{\cell }{\row }
{\xe \v aiBottom\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aiBottom}
{\qr aiBottom{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
\cell }{\cell }{\row }
{\xe \v aiBottomLeft\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aiBottomLeft}
{\qr aiBottomLeft{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
\cell }{\cell }{\row }
{\xe \v aiLeft\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aiLeft}
{\qr aiLeft{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemPixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:QCPItemPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemPixmap::QCPItemPixmap ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemPixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:~QCPItemPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemPixmap::~QCPItemPixmap (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchorPixelPosition\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:anchorPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemPixmap::anchorPixelPosition (int anchorId) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v aspectRatioMode\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:aspectRatioMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCPItemPixmap::aspectRatioMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemPixmap::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFinalRect\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:getFinalRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPItemPixmap::getFinalRect (bool * flippedHorz = {\f2 nullptr}, bool * flippedVert = {\f2 nullptr}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemPixmap::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemPixmap::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPItemPixmap::pixmap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaled\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:scaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemPixmap::scaled () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemPixmap::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemPixmap::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setPen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPixmap::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:setPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPixmap::setPixmap (const QPixmap & pixmap)}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScaled\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:setScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPixmap::setScaled (bool scaled, Qt::AspectRatioMode aspectRatioMode = {\f2 Qt::KeepAspectRatio}, Qt::TransformationMode transformationMode = {\f2 Qt::SmoothTransformation})}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPixmap::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transformationMode\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:transformationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::TransformationMode QCPItemPixmap::transformationMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateScaledPixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:updateScaledPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPixmap::updateScaledPixmap (QRect finalRect = {\f2 QRect()}, bool flipHorz = {\f2 false}, bool flipVert = {\f2 false}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bottom\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemPixmap::bottom}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomLeft\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:bottomLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemPixmap::bottomLeft}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRight\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:bottomRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemPixmap::bottomRight}}
\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemPixmap::left}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAspectRatioMode\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mAspectRatioMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCPItemPixmap::mAspectRatioMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemPixmap::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPItemPixmap::mPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaled\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemPixmap::mScaled{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaledPixmap\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mScaledPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPItemPixmap::mScaledPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaledPixmapInvalidated\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mScaledPixmapInvalidated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemPixmap::mScaledPixmapInvalidated{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemPixmap::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTransformationMode\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:mTransformationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::TransformationMode QCPItemPixmap::mTransformationMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemPixmap::right}}
\par
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemPixmap::top}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeft\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:topLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemPixmap::topLeft}}
\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topRight\:QCPItemPixmap}
{\xe \v QCPItemPixmap\:topRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemPixmap::topRight}}
\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemPosition Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemPosition}
{\xe \v QCPItemPosition}
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemPosition:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_position.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PositionType} \{ {\b ptAbsolute}
, {\b ptViewportRatio}
, {\b ptAxisRectRatio}
, {\b ptPlotCoords}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} ({\b QCustomPlot} *parentPlot, {\b QCPAbstractItem} *parentItem, const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemPosition} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionType} {\b type} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionType} {\b typeX} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionType} {\b typeY} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b parentAnchor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b parentAnchorX} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b parentAnchorY} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b key} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b value} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b coords} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b axisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b pixelPosition} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setType} ({\b PositionType} {\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTypeX} ({\b PositionType} {\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTypeY} ({\b PositionType} {\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setParentAnchor} ({\b QCPItemAnchor} *{\b parentAnchor}, bool keepPixelPosition=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setParentAnchorX} ({\b QCPItemAnchor} *{\b parentAnchor}, bool keepPixelPosition=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setParentAnchorY} ({\b QCPItemAnchor} *{\b parentAnchor}, bool keepPixelPosition=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCoords} (double {\b key}, double {\b value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCoords} (const QPointF &pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAxes} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAxisRect} ({\b QCPAxisRect} *{\b axisRect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPixelPosition} (const QPointF &{\b pixelPosition})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPItemAnchor}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} ({\b QCustomPlot} *parentPlot, {\b QCPAbstractItem} *parentItem, const QString &{\b name}, int anchorId=-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemAnchor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPItemPosition} * {\b toQCPItemPosition} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPItemAnchor}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addChildX} ({\b QCPItemPosition} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeChildX} ({\b QCPItemPosition} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addChildY} ({\b QCPItemPosition} *pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeChildY} ({\b QCPItemPosition} *pos)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionType} {\b mPositionTypeX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PositionType} {\b mPositionTypeY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mKey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b mParentAnchorX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b mParentAnchorY}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPItemAnchor}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} * {\b mParentItem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mAnchorId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSet< {\b QCPItemPosition} * > {\b mChildrenX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSet< {\b QCPItemPosition} * > {\b mChildrenY}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v PositionType\:QCPItemPosition}
{\xe \v QCPItemPosition\:PositionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemPosition::PositionType}}}
\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the ways an item position can be specified. Thus it defines what the numbers passed to {\b setCoords} actually mean.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setType} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ptAbsolute\:QCPItemPosition}
{\xe \v QCPItemPosition\:ptAbsolute}
{\qr ptAbsolute{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static positioning in pixels, starting from the top left corner of the viewport/widget. \par
}\cell }{\row }
{\xe \v ptViewportRatio\:QCPItemPosition}
{\xe \v QCPItemPosition\:ptViewportRatio}
{\qr ptViewportRatio{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static positioning given by a fraction of the viewport size. For example, if you call setCoords(0, 0), the position will be at the top left corner of the viewport/widget. setCoords(1, 1) will be at the bottom right corner, setCoords(0.5, 0) will be horizontally centered and vertically at the top of the viewport/widget, etc. \par
}\cell }{\row }
{\xe \v ptAxisRectRatio\:QCPItemPosition}
{\xe \v QCPItemPosition\:ptAxisRectRatio}
{\qr ptAxisRectRatio{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Static positioning given by a fraction of the axis rect size (see {\b setAxisRect}). For example, if you call setCoords(0, 0), the position will be at the top left corner of the axis rect. setCoords(1, 1) will be at the bottom right corner, setCoords(0.5, 0) will be horizontally centered and vertically at the top of the axis rect, etc. You can also go beyond the axis rect by providing negative coordinates or coordinates larger than 1. \par
}\cell }{\row }
{\xe \v ptPlotCoords\:QCPItemPosition}
{\xe \v QCPItemPosition\:ptPlotCoords}
{\qr ptPlotCoords{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Dynamic positioning at a plot coordinate defined by two axes (see {\b setAxes}). \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemPosition\:QCPItemPosition}
{\xe \v QCPItemPosition\:QCPItemPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemPosition::QCPItemPosition ({\b QCustomPlot} * parentPlot, {\b QCPAbstractItem} * parentItem, const QString & name)}}
\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemPosition\:QCPItemPosition}
{\xe \v QCPItemPosition\:~QCPItemPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemPosition::~QCPItemPosition (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v axisRect\:QCPItemPosition}
{\xe \v QCPItemPosition\:axisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisRect} * QCPItemPosition::axisRect () const}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coords\:QCPItemPosition}
{\xe \v QCPItemPosition\:coords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPItemPosition::coords () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key\:QCPItemPosition}
{\xe \v QCPItemPosition\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemPosition::key () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keyAxis\:QCPItemPosition}
{\xe \v QCPItemPosition\:keyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPItemPosition::keyAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentAnchor\:QCPItemPosition}
{\xe \v QCPItemPosition\:parentAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor} * QCPItemPosition::parentAnchor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentAnchorX\:QCPItemPosition}
{\xe \v QCPItemPosition\:parentAnchorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor} * QCPItemPosition::parentAnchorX () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentAnchorY\:QCPItemPosition}
{\xe \v QCPItemPosition\:parentAnchorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor} * QCPItemPosition::parentAnchorY () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelPosition\:QCPItemPosition}
{\xe \v QCPItemPosition\:pixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemPosition::pixelPosition () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPItemAnchor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAxes\:QCPItemPosition}
{\xe \v QCPItemPosition\:setAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setAxes ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis)}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAxisRect\:QCPItemPosition}
{\xe \v QCPItemPosition\:setAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setAxisRect ({\b QCPAxisRect} * axisRect)}}
\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCoords\:QCPItemPosition}
{\xe \v QCPItemPosition\:setCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setCoords (const QPointF & pos)}}
\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCoords\:QCPItemPosition}
{\xe \v QCPItemPosition\:setCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setCoords (double key, double value)}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setParentAnchor\:QCPItemPosition}
{\xe \v QCPItemPosition\:setParentAnchor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemPosition::setParentAnchor ({\b QCPItemAnchor} * parentAnchor, bool keepPixelPosition = {\f2 false})}}
\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setParentAnchorX\:QCPItemPosition}
{\xe \v QCPItemPosition\:setParentAnchorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemPosition::setParentAnchorX ({\b QCPItemAnchor} * parentAnchor, bool keepPixelPosition = {\f2 false})}}
\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setParentAnchorY\:QCPItemPosition}
{\xe \v QCPItemPosition\:setParentAnchorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemPosition::setParentAnchorY ({\b QCPItemAnchor} * parentAnchor, bool keepPixelPosition = {\f2 false})}}
\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPixelPosition\:QCPItemPosition}
{\xe \v QCPItemPosition\:setPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setPixelPosition (const QPointF & pixelPosition)}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setType\:QCPItemPosition}
{\xe \v QCPItemPosition\:setType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setType ({\b PositionType} type)}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTypeX\:QCPItemPosition}
{\xe \v QCPItemPosition\:setTypeX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setTypeX ({\b PositionType} type)}}
\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTypeY\:QCPItemPosition}
{\xe \v QCPItemPosition\:setTypeY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemPosition::setTypeY ({\b PositionType} type)}}
\par
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toQCPItemPosition\:QCPItemPosition}
{\xe \v QCPItemPosition\:toQCPItemPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPItemPosition} * QCPItemPosition::toQCPItemPosition (){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPItemAnchor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v type\:QCPItemPosition}
{\xe \v QCPItemPosition\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PositionType} QCPItemPosition::type () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v typeX\:QCPItemPosition}
{\xe \v QCPItemPosition\:typeX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PositionType} QCPItemPosition::typeX () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v typeY\:QCPItemPosition}
{\xe \v QCPItemPosition\:typeY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PositionType} QCPItemPosition::typeY () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:QCPItemPosition}
{\xe \v QCPItemPosition\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemPosition::value () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueAxis\:QCPItemPosition}
{\xe \v QCPItemPosition\:valueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCPItemPosition::valueAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAxisRect\:QCPItemPosition}
{\xe \v QCPItemPosition\:mAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxisRect}> QCPItemPosition::mAxisRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mKey\:QCPItemPosition}
{\xe \v QCPItemPosition\:mKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemPosition::mKey{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mKeyAxis\:QCPItemPosition}
{\xe \v QCPItemPosition\:mKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxis}> QCPItemPosition::mKeyAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentAnchorX\:QCPItemPosition}
{\xe \v QCPItemPosition\:mParentAnchorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* QCPItemPosition::mParentAnchorX{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentAnchorY\:QCPItemPosition}
{\xe \v QCPItemPosition\:mParentAnchorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor} * QCPItemPosition::mParentAnchorY{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPositionTypeX\:QCPItemPosition}
{\xe \v QCPItemPosition\:mPositionTypeX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PositionType} QCPItemPosition::mPositionTypeX{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPositionTypeY\:QCPItemPosition}
{\xe \v QCPItemPosition\:mPositionTypeY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PositionType} QCPItemPosition::mPositionTypeY{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mValue\:QCPItemPosition}
{\xe \v QCPItemPosition\:mValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemPosition::mValue{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mValueAxis\:QCPItemPosition}
{\xe \v QCPItemPosition\:mValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPAxis}> QCPItemPosition::mValueAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemRect Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemRect}
{\xe \v QCPItemRect}
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemRect:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_rect.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemRect} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemRect} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b selectedBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b topLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b bottomRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b topRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottomLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b left}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorIndex} \{ {\b aiTop}
, {\b aiTopRight}
, {\b aiRight}
, {\b aiBottom}
, {\b aiBottomLeft}
, {\b aiLeft}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mainBrush} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mSelectedBrush}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AnchorIndex\:QCPItemRect}
{\xe \v QCPItemRect\:AnchorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemRect::AnchorIndex}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v aiTop\:QCPItemRect}
{\xe \v QCPItemRect\:aiTop}
{\qr aiTop{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
\cell }{\cell }{\row }
{\xe \v aiTopRight\:QCPItemRect}
{\xe \v QCPItemRect\:aiTopRight}
{\qr aiTopRight{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
\cell }{\cell }{\row }
{\xe \v aiRight\:QCPItemRect}
{\xe \v QCPItemRect\:aiRight}
{\qr aiRight{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
\cell }{\cell }{\row }
{\xe \v aiBottom\:QCPItemRect}
{\xe \v QCPItemRect\:aiBottom}
{\qr aiBottom{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
\cell }{\cell }{\row }
{\xe \v aiBottomLeft\:QCPItemRect}
{\xe \v QCPItemRect\:aiBottomLeft}
{\qr aiBottomLeft{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
\cell }{\cell }{\row }
{\xe \v aiLeft\:QCPItemRect}
{\xe \v QCPItemRect\:aiLeft}
{\qr aiLeft{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemRect\:QCPItemRect}
{\xe \v QCPItemRect\:QCPItemRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemRect::QCPItemRect ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemRect\:QCPItemRect}
{\xe \v QCPItemRect\:~QCPItemRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemRect::~QCPItemRect (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchorPixelPosition\:QCPItemRect}
{\xe \v QCPItemRect\:anchorPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemRect::anchorPixelPosition (int anchorId) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v brush\:QCPItemRect}
{\xe \v QCPItemRect\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemRect::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPItemRect}
{\xe \v QCPItemRect\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemRect::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mainBrush\:QCPItemRect}
{\xe \v QCPItemRect\:mainBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemRect::mainBrush () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemRect}
{\xe \v QCPItemRect\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemRect::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemRect}
{\xe \v QCPItemRect\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemRect::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBrush\:QCPItemRect}
{\xe \v QCPItemRect\:selectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemRect::selectedBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemRect}
{\xe \v QCPItemRect\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemRect::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemRect}
{\xe \v QCPItemRect\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemRect::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBrush\:QCPItemRect}
{\xe \v QCPItemRect\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemRect::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemRect}
{\xe \v QCPItemRect\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemRect::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBrush\:QCPItemRect}
{\xe \v QCPItemRect\:setSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemRect::setSelectedBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemRect}
{\xe \v QCPItemRect\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemRect::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bottom\:QCPItemRect}
{\xe \v QCPItemRect\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemRect::bottom}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomLeft\:QCPItemRect}
{\xe \v QCPItemRect\:bottomLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemRect::bottomLeft}}
\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRight\:QCPItemRect}
{\xe \v QCPItemRect\:bottomRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemRect::bottomRight}}
\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:QCPItemRect}
{\xe \v QCPItemRect\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemRect::left}}
\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPItemRect}
{\xe \v QCPItemRect\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemRect::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemRect}
{\xe \v QCPItemRect\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemRect::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBrush\:QCPItemRect}
{\xe \v QCPItemRect\:mSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemRect::mSelectedBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemRect}
{\xe \v QCPItemRect\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemRect::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPItemRect}
{\xe \v QCPItemRect\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemRect::right}}
\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:QCPItemRect}
{\xe \v QCPItemRect\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemRect::top}}
\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeft\:QCPItemRect}
{\xe \v QCPItemRect\:topLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemRect::topLeft}}
\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topRight\:QCPItemRect}
{\xe \v QCPItemRect\:topRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemRect::topRight}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemStraightLine Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemStraightLine}
{\xe \v QCPItemStraightLine}
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemStraightLine:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_straight_line.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemStraightLine} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemStraightLine} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b point1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b point2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLineF {\b getRectClippedStraightLine} (const {\b QCPVector2D} &base, const {\b QCPVector2D} &vec, const QRect &rect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemStraightLine\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:QCPItemStraightLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemStraightLine::QCPItemStraightLine ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemStraightLine\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:~QCPItemStraightLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemStraightLine::~QCPItemStraightLine (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemStraightLine::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getRectClippedStraightLine\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:getRectClippedStraightLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLineF QCPItemStraightLine::getRectClippedStraightLine (const {\b QCPVector2D} & base, const {\b QCPVector2D} & vec, const QRect & rect) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemStraightLine::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemStraightLine::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemStraightLine::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemStraightLine::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setPen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemStraightLine::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemStraightLine::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mPen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemStraightLine::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemStraightLine::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v point1\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:point1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemStraightLine::point1}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v point2\:QCPItemStraightLine}
{\xe \v QCPItemStraightLine\:point2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemStraightLine::point2}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemText Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemText}
{\xe \v QCPItemText}
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemText:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_text.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemText} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemText} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b color} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b selectedBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b text} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Alignment {\b positionAlignment} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Alignment {\b textAlignment} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rotation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b padding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColor} (const QColor &{\b color})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedColor} (const QColor &{\b color})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setText} (const QString &{\b text})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPositionAlignment} (Qt::Alignment alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextAlignment} (Qt::Alignment alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRotation} (double degrees)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPadding} (const QMargins &{\b padding})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b topLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b topRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottomRight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b bottomLeft}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} *const {\b left}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorIndex} \{ {\b aiTopLeft}
, {\b aiTop}
, {\b aiTopRight}
, {\b aiRight}
, {\b aiBottomRight}
, {\b aiBottom}
, {\b aiBottomLeft}
, {\b aiLeft}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b getTextDrawPoint} (const QPointF &pos, const QRectF &rect, Qt::Alignment {\b positionAlignment}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mainFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mainColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mainBrush} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mSelectedBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mText}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Alignment {\b mPositionAlignment}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Alignment {\b mTextAlignment}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mPadding}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AnchorIndex\:QCPItemText}
{\xe \v QCPItemText\:AnchorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemText::AnchorIndex}{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v aiTopLeft\:QCPItemText}
{\xe \v QCPItemText\:aiTopLeft}
{\qr aiTopLeft{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
\cell }{\cell }{\row }
{\xe \v aiTop\:QCPItemText}
{\xe \v QCPItemText\:aiTop}
{\qr aiTop{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
\cell }{\cell }{\row }
{\xe \v aiTopRight\:QCPItemText}
{\xe \v QCPItemText\:aiTopRight}
{\qr aiTopRight{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
\cell }{\cell }{\row }
{\xe \v aiRight\:QCPItemText}
{\xe \v QCPItemText\:aiRight}
{\qr aiRight{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
\cell }{\cell }{\row }
{\xe \v aiBottomRight\:QCPItemText}
{\xe \v QCPItemText\:aiBottomRight}
{\qr aiBottomRight{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
\cell }{\cell }{\row }
{\xe \v aiBottom\:QCPItemText}
{\xe \v QCPItemText\:aiBottom}
{\qr aiBottom{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
\cell }{\cell }{\row }
{\xe \v aiBottomLeft\:QCPItemText}
{\xe \v QCPItemText\:aiBottomLeft}
{\qr aiBottomLeft{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
\cell }{\cell }{\row }
{\xe \v aiLeft\:QCPItemText}
{\xe \v QCPItemText\:aiLeft}
{\qr aiLeft{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemText\:QCPItemText}
{\xe \v QCPItemText\:QCPItemText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemText::QCPItemText ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemText\:QCPItemText}
{\xe \v QCPItemText\:~QCPItemText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemText::~QCPItemText (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v anchorPixelPosition\:QCPItemText}
{\xe \v QCPItemText\:anchorPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPItemText::anchorPixelPosition (int anchorId) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v brush\:QCPItemText}
{\xe \v QCPItemText\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemText::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v color\:QCPItemText}
{\xe \v QCPItemText\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPItemText::color () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPItemText}
{\xe \v QCPItemText\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemText::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v font\:QCPItemText}
{\xe \v QCPItemText\:font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPItemText::font () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTextDrawPoint\:QCPItemText}
{\xe \v QCPItemText\:getTextDrawPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPItemText::getTextDrawPoint (const QPointF & pos, const QRectF & rect, Qt::Alignment positionAlignment) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainBrush\:QCPItemText}
{\xe \v QCPItemText\:mainBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemText::mainBrush () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainColor\:QCPItemText}
{\xe \v QCPItemText\:mainColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPItemText::mainColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainFont\:QCPItemText}
{\xe \v QCPItemText\:mainFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPItemText::mainFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemText}
{\xe \v QCPItemText\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemText::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v padding\:QCPItemText}
{\xe \v QCPItemText\:padding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMargins QCPItemText::padding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemText}
{\xe \v QCPItemText\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemText::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v positionAlignment\:QCPItemText}
{\xe \v QCPItemText\:positionAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Alignment QCPItemText::positionAlignment () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotation\:QCPItemText}
{\xe \v QCPItemText\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemText::rotation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBrush\:QCPItemText}
{\xe \v QCPItemText\:selectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemText::selectedBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedColor\:QCPItemText}
{\xe \v QCPItemText\:selectedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPItemText::selectedColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedFont\:QCPItemText}
{\xe \v QCPItemText\:selectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPItemText::selectedFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemText}
{\xe \v QCPItemText\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemText::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemText}
{\xe \v QCPItemText\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemText::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBrush\:QCPItemText}
{\xe \v QCPItemText\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColor\:QCPItemText}
{\xe \v QCPItemText\:setColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFont\:QCPItemText}
{\xe \v QCPItemText\:setFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPadding\:QCPItemText}
{\xe \v QCPItemText\:setPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setPadding (const QMargins & padding)}}
\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemText}
{\xe \v QCPItemText\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPositionAlignment\:QCPItemText}
{\xe \v QCPItemText\:setPositionAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setPositionAlignment (Qt::Alignment alignment)}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRotation\:QCPItemText}
{\xe \v QCPItemText\:setRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setRotation (double degrees)}}
\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBrush\:QCPItemText}
{\xe \v QCPItemText\:setSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setSelectedBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedColor\:QCPItemText}
{\xe \v QCPItemText\:setSelectedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setSelectedColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedFont\:QCPItemText}
{\xe \v QCPItemText\:setSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setSelectedFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemText}
{\xe \v QCPItemText\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setText\:QCPItemText}
{\xe \v QCPItemText\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setText (const QString & text)}}
\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTextAlignment\:QCPItemText}
{\xe \v QCPItemText\:setTextAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemText::setTextAlignment (Qt::Alignment alignment)}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v text\:QCPItemText}
{\xe \v QCPItemText\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPItemText::text () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v textAlignment\:QCPItemText}
{\xe \v QCPItemText\:textAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Alignment QCPItemText::textAlignment () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v bottom\:QCPItemText}
{\xe \v QCPItemText\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::bottom}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomLeft\:QCPItemText}
{\xe \v QCPItemText\:bottomLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::bottomLeft}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRight\:QCPItemText}
{\xe \v QCPItemText\:bottomRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::bottomRight}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:QCPItemText}
{\xe \v QCPItemText\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::left}}
\par
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPItemText}
{\xe \v QCPItemText\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemText::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColor\:QCPItemText}
{\xe \v QCPItemText\:mColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPItemText::mColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mFont\:QCPItemText}
{\xe \v QCPItemText\:mFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPItemText::mFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPadding\:QCPItemText}
{\xe \v QCPItemText\:mPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMargins QCPItemText::mPadding{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemText}
{\xe \v QCPItemText\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemText::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPositionAlignment\:QCPItemText}
{\xe \v QCPItemText\:mPositionAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Alignment QCPItemText::mPositionAlignment{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRotation\:QCPItemText}
{\xe \v QCPItemText\:mRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemText::mRotation{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBrush\:QCPItemText}
{\xe \v QCPItemText\:mSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemText::mSelectedBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedColor\:QCPItemText}
{\xe \v QCPItemText\:mSelectedColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPItemText::mSelectedColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedFont\:QCPItemText}
{\xe \v QCPItemText\:mSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPItemText::mSelectedFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemText}
{\xe \v QCPItemText\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemText::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mText\:QCPItemText}
{\xe \v QCPItemText\:mText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPItemText::mText{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTextAlignment\:QCPItemText}
{\xe \v QCPItemText\:mTextAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Alignment QCPItemText::mTextAlignment{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:QCPItemText}
{\xe \v QCPItemText\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemText::position}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPItemText}
{\xe \v QCPItemText\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::right}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:QCPItemText}
{\xe \v QCPItemText\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::top}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeft\:QCPItemText}
{\xe \v QCPItemText\:topLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::topLeft}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topRight\:QCPItemText}
{\xe \v QCPItemText\:topRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemAnchor}* const QCPItemText::topRight}}
\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPItemTracer Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPItemTracer}
{\xe \v QCPItemTracer}
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPItemTracer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_item_tracer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TracerStyle} \{ {\b tsNone}
, {\b tsPlus}
, {\b tsCrosshair}
, {\b tsCircle}
, {\b tsSquare}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemTracer} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPItemTracer} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b selectedBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TracerStyle} {\b style} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} * {\b graph} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b graphKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b interpolating} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (double {\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStyle} ({\b TracerStyle} {\b style})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGraph} ({\b QCPGraph} *{\b graph})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGraphKey} (double key)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInterpolating} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatePosition} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractItem} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clipToAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b clipAxisRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipToAxisRect} (bool clip)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setClipAxisRect} ({\b QCPAxisRect} *rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b positions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b anchors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b position} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b anchor} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasAnchor} (const QString &name) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} *const {\b position}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mainPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mainBrush} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b anchorPixelPosition} (int anchorId) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rectDistance} (const QRectF &rect, const QPointF &pos, bool filledRect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemPosition} * {\b createPosition} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPItemAnchor} * {\b createAnchor} (const QString &name, int anchorId)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mSelectedBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TracerStyle} {\b mStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} * {\b mGraph}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mGraphKey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mInterpolating}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mClipToAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxisRect} > {\b mClipAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemPosition} * > {\b mPositions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPItemAnchor} * > {\b mAnchors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v TracerStyle\:QCPItemTracer}
{\xe \v QCPItemTracer\:TracerStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPItemTracer::TracerStyle}}}
\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The different visual appearances a tracer item can have. Some styles size may be controlled with {\b setSize}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v tsNone\:QCPItemTracer}
{\xe \v QCPItemTracer\:tsNone}
{\qr tsNone{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The tracer is not visible. \par
}\cell }{\row }
{\xe \v tsPlus\:QCPItemTracer}
{\xe \v QCPItemTracer\:tsPlus}
{\qr tsPlus{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A plus shaped crosshair with limited size. \par
}\cell }{\row }
{\xe \v tsCrosshair\:QCPItemTracer}
{\xe \v QCPItemTracer\:tsCrosshair}
{\qr tsCrosshair{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A plus shaped crosshair which spans the complete axis rect. \par
}\cell }{\row }
{\xe \v tsCircle\:QCPItemTracer}
{\xe \v QCPItemTracer\:tsCircle}
{\qr tsCircle{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A circle. \par
}\cell }{\row }
{\xe \v tsSquare\:QCPItemTracer}
{\xe \v QCPItemTracer\:tsSquare}
{\qr tsSquare{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A square. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPItemTracer\:QCPItemTracer}
{\xe \v QCPItemTracer\:QCPItemTracer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPItemTracer::QCPItemTracer ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPItemTracer\:QCPItemTracer}
{\xe \v QCPItemTracer\:~QCPItemTracer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPItemTracer::~QCPItemTracer (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v brush\:QCPItemTracer}
{\xe \v QCPItemTracer\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemTracer::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPItemTracer}
{\xe \v QCPItemTracer\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPItemTracer::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v graph\:QCPItemTracer}
{\xe \v QCPItemTracer\:graph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGraph} * QCPItemTracer::graph () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graphKey\:QCPItemTracer}
{\xe \v QCPItemTracer\:graphKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemTracer::graphKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v interpolating\:QCPItemTracer}
{\xe \v QCPItemTracer\:interpolating}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemTracer::interpolating () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainBrush\:QCPItemTracer}
{\xe \v QCPItemTracer\:mainBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemTracer::mainBrush () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainPen\:QCPItemTracer}
{\xe \v QCPItemTracer\:mainPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemTracer::mainPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPItemTracer}
{\xe \v QCPItemTracer\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemTracer::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBrush\:QCPItemTracer}
{\xe \v QCPItemTracer\:selectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemTracer::selectedBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPen\:QCPItemTracer}
{\xe \v QCPItemTracer\:selectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemTracer::selectedPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPItemTracer}
{\xe \v QCPItemTracer\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPItemTracer::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBrush\:QCPItemTracer}
{\xe \v QCPItemTracer\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setGraph\:QCPItemTracer}
{\xe \v QCPItemTracer\:setGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setGraph ({\b QCPGraph} * graph)}}
\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setGraphKey\:QCPItemTracer}
{\xe \v QCPItemTracer\:setGraphKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setGraphKey (double key)}}
\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInterpolating\:QCPItemTracer}
{\xe \v QCPItemTracer\:setInterpolating}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setInterpolating (bool enabled)}}
\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPItemTracer}
{\xe \v QCPItemTracer\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBrush\:QCPItemTracer}
{\xe \v QCPItemTracer\:setSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setSelectedBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedPen\:QCPItemTracer}
{\xe \v QCPItemTracer\:setSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setSelectedPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSize\:QCPItemTracer}
{\xe \v QCPItemTracer\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setSize (double size)}}
\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setStyle\:QCPItemTracer}
{\xe \v QCPItemTracer\:setStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::setStyle ({\b TracerStyle} style)}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPItemTracer}
{\xe \v QCPItemTracer\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemTracer::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v style\:QCPItemTracer}
{\xe \v QCPItemTracer\:style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TracerStyle} QCPItemTracer::style () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updatePosition\:QCPItemTracer}
{\xe \v QCPItemTracer\:updatePosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPItemTracer::updatePosition ()}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBrush\:QCPItemTracer}
{\xe \v QCPItemTracer\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemTracer::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGraph\:QCPItemTracer}
{\xe \v QCPItemTracer\:mGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGraph}* QCPItemTracer::mGraph{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGraphKey\:QCPItemTracer}
{\xe \v QCPItemTracer\:mGraphKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemTracer::mGraphKey{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInterpolating\:QCPItemTracer}
{\xe \v QCPItemTracer\:mInterpolating}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPItemTracer::mInterpolating{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPItemTracer}
{\xe \v QCPItemTracer\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemTracer::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBrush\:QCPItemTracer}
{\xe \v QCPItemTracer\:mSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPItemTracer::mSelectedBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedPen\:QCPItemTracer}
{\xe \v QCPItemTracer\:mSelectedPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPItemTracer::mSelectedPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSize\:QCPItemTracer}
{\xe \v QCPItemTracer\:mSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPItemTracer::mSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mStyle\:QCPItemTracer}
{\xe \v QCPItemTracer\:mStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TracerStyle} QCPItemTracer::mStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v position\:QCPItemTracer}
{\xe \v QCPItemTracer\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPItemPosition}* const QCPItemTracer::position}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLabelPainterPrivate Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate}
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CachedLabel}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LabelData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorMode} \{ {\b amRectangular}
, {\b amSkewedUpright}
, {\b amSkewedRotated}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorReferenceType} \{ {\b artNormal}
, {\b artTangent}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AnchorSide} \{ {\b asLeft}
, {\b asRight}
, {\b asTop}
, {\b asBottom}
, {\b asTopLeft}
, {\b asTopRight}
, {\b asBottomRight}
, {\b asBottomLeft}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLabelPainterPrivate} ({\b QCustomPlot} *parentPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLabelPainterPrivate} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAnchorSide} ({\b AnchorSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAnchorMode} ({\b AnchorMode} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAnchorReference} (const QPointF &pixelPoint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAnchorReferenceType} ({\b AnchorReferenceType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColor} (const QColor &{\b color})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPadding} (int {\b padding})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRotation} (double {\b rotation})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubstituteExponent} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMultiplicationSymbol} (QChar symbol)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAbbreviateDecimalPowers} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCacheSize} (int labelCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorMode} {\b anchorMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorSide} {\b anchorSide} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b anchorReference} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorReferenceType} {\b anchorReferenceType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b color} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b padding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rotation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b substituteExponent} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QChar {\b multiplicationSymbol} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b abbreviateDecimalPowers} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cacheSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawTickLabel} ({\b QCPPainter} *painter, const QPointF &tickPos, const QString &text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearCache} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const QChar {\b SymbolDot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const QChar {\b SymbolCross}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLabelMaybeCached} ({\b QCPPainter} *painter, const QFont &{\b font}, const QColor &{\b color}, const QPointF &pos, {\b AnchorSide} side, double {\b rotation}, const QString &text)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QByteArray {\b generateLabelParameterHash} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b getAnchorPos} (const QPointF &tickPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawText} ({\b QCPPainter} *painter, const QPointF &pos, const {\b LabelData} &labelData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LabelData} {\b getTickLabelData} (const QFont &{\b font}, const QColor &{\b color}, double {\b rotation}, {\b AnchorSide} side, const QString &text) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAnchorTransform} ({\b LabelData} &labelData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CachedLabel} * {\b createCachedLabel} (const {\b LabelData} &labelData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QByteArray {\b cacheKey} (const QString &text, const QColor &{\b color}, double {\b rotation}, {\b AnchorSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorSide} {\b skewedAnchorSide} (const QPointF &tickPos, double sideExpandHorz, double sideExpandVert) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorSide} {\b rotationCorrectedSide} ({\b AnchorSide} side, double {\b rotation}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b analyzeFontMetrics} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorMode} {\b mAnchorMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorSide} {\b mAnchorSide}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b mAnchorReference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AnchorReferenceType} {\b mAnchorReferenceType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSubstituteExponent}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QChar {\b mMultiplicationSymbol}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAbbreviateDecimalPowers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QByteArray {\b mLabelParameterHash}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCache< QString, {\b CachedLabel} > {\b mLabelCache}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mAxisSelectionBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mTickLabelsSelectionBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mLabelSelectionBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mLetterCapHeight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mLetterDescent}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AnchorMode\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:AnchorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLabelPainterPrivate::AnchorMode}}}
\par
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v amRectangular\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:amRectangular}
{\qr amRectangular{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
\cell }{\cell }{\row }
{\xe \v amSkewedUpright\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:amSkewedUpright}
{\qr amSkewedUpright{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
\cell }{\cell }{\row }
{\xe \v amSkewedRotated\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:amSkewedRotated}
{\qr amSkewedRotated{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
\cell }{\cell }{\row }
}
}
{\xe \v AnchorReferenceType\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:AnchorReferenceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLabelPainterPrivate::AnchorReferenceType}}}
\par
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v artNormal\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:artNormal}
{\qr artNormal{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
\cell }{\cell }{\row }
{\xe \v artTangent\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:artTangent}
{\qr artTangent{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
\cell }{\cell }{\row }
}
}
{\xe \v AnchorSide\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:AnchorSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLabelPainterPrivate::AnchorSide}}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v asLeft\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asLeft}
{\qr asLeft{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
\cell }{\cell }{\row }
{\xe \v asRight\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asRight}
{\qr asRight{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
\cell }{\cell }{\row }
{\xe \v asTop\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asTop}
{\qr asTop{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
\cell }{\cell }{\row }
{\xe \v asBottom\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asBottom}
{\qr asBottom{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
\cell }{\cell }{\row }
{\xe \v asTopLeft\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asTopLeft}
{\qr asTopLeft{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
\cell }{\cell }{\row }
{\xe \v asTopRight\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asTopRight}
{\qr asTopRight{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
\cell }{\cell }{\row }
{\xe \v asBottomRight\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asBottomRight}
{\qr asBottomRight{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
\cell }{\cell }{\row }
{\xe \v asBottomLeft\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:asBottomLeft}
{\qr asBottomLeft{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLabelPainterPrivate\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:QCPLabelPainterPrivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLabelPainterPrivate::QCPLabelPainterPrivate ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLabelPainterPrivate\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:~QCPLabelPainterPrivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLabelPainterPrivate::~QCPLabelPainterPrivate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v abbreviateDecimalPowers\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:abbreviateDecimalPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLabelPainterPrivate::abbreviateDecimalPowers () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v analyzeFontMetrics\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:analyzeFontMetrics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::analyzeFontMetrics (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v anchorMode\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:anchorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorMode} QCPLabelPainterPrivate::anchorMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v anchorReference\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:anchorReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPLabelPainterPrivate::anchorReference () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v anchorReferenceType\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:anchorReferenceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorReferenceType} QCPLabelPainterPrivate::anchorReferenceType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v anchorSide\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:anchorSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorSide} QCPLabelPainterPrivate::anchorSide () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyAnchorTransform\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:applyAnchorTransform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::applyAnchorTransform ({\b LabelData} & labelData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cacheKey\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:cacheKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QByteArray QCPLabelPainterPrivate::cacheKey (const QString & text, const QColor & color, double rotation, {\b AnchorSide} side) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cacheSize\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:cacheSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLabelPainterPrivate::cacheSize () const}}
\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearCache\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:clearCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::clearCache ()}}
\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v color\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLabelPainterPrivate::color () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createCachedLabel\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:createCachedLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CachedLabel} * QCPLabelPainterPrivate::createCachedLabel (const {\b LabelData} & labelData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLabelMaybeCached\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:drawLabelMaybeCached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLabelPainterPrivate::drawLabelMaybeCached ({\b QCPPainter} * painter, const QFont & font, const QColor & color, const QPointF & pos, {\b AnchorSide} side, double rotation, const QString & text){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawText\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:drawText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::drawText ({\b QCPPainter} * painter, const QPointF & pos, const {\b LabelData} & labelData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawTickLabel\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:drawTickLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::drawTickLabel ({\b QCPPainter} * painter, const QPointF & tickPos, const QString & text)}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v font\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLabelPainterPrivate::font () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v generateLabelParameterHash\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:generateLabelParameterHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QByteArray QCPLabelPainterPrivate::generateLabelParameterHash () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getAnchorPos\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:getAnchorPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPLabelPainterPrivate::getAnchorPos (const QPointF & tickPos){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelData\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:getTickLabelData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LabelData} QCPLabelPainterPrivate::getTickLabelData (const QFont & font, const QColor & color, double rotation, {\b AnchorSide} side, const QString & text) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v multiplicationSymbol\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:multiplicationSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QChar QCPLabelPainterPrivate::multiplicationSymbol () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v padding\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:padding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLabelPainterPrivate::padding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotation\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLabelPainterPrivate::rotation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotationCorrectedSide\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:rotationCorrectedSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorSide} QCPLabelPainterPrivate::rotationCorrectedSide ({\b AnchorSide} side, double rotation) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAbbreviateDecimalPowers\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setAbbreviateDecimalPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setAbbreviateDecimalPowers (bool enabled)}}
\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAnchorMode\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setAnchorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setAnchorMode ({\b AnchorMode} mode)}}
\par
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAnchorReference\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setAnchorReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setAnchorReference (const QPointF & pixelPoint)}}
\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAnchorReferenceType\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setAnchorReferenceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setAnchorReferenceType ({\b AnchorReferenceType} type)}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAnchorSide\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setAnchorSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setAnchorSide ({\b AnchorSide} side)}}
\par
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCacheSize\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setCacheSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setCacheSize (int labelCount)}}
\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColor\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFont\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMultiplicationSymbol\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setMultiplicationSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setMultiplicationSymbol (QChar symbol)}}
\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPadding\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setPadding (int padding)}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRotation\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setRotation (double rotation)}}
\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubstituteExponent\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:setSubstituteExponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLabelPainterPrivate::setSubstituteExponent (bool enabled)}}
\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v skewedAnchorSide\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:skewedAnchorSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorSide} QCPLabelPainterPrivate::skewedAnchorSide (const QPointF & tickPos, double sideExpandHorz, double sideExpandVert) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v substituteExponent\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:substituteExponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLabelPainterPrivate::substituteExponent () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAbbreviateDecimalPowers\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mAbbreviateDecimalPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLabelPainterPrivate::mAbbreviateDecimalPowers{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAnchorMode\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mAnchorMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorMode} QCPLabelPainterPrivate::mAnchorMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAnchorReference\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mAnchorReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPLabelPainterPrivate::mAnchorReference{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAnchorReferenceType\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mAnchorReferenceType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorReferenceType} QCPLabelPainterPrivate::mAnchorReferenceType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAnchorSide\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mAnchorSide}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AnchorSide} QCPLabelPainterPrivate::mAnchorSide{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAxisSelectionBox\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mAxisSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::mAxisSelectionBox{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColor\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLabelPainterPrivate::mColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mFont\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLabelPainterPrivate::mFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelCache\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mLabelCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCache<QString, {\b CachedLabel}> QCPLabelPainterPrivate::mLabelCache{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelParameterHash\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mLabelParameterHash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QByteArray QCPLabelPainterPrivate::mLabelParameterHash{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelSelectionBox\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mLabelSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::mLabelSelectionBox{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLetterCapHeight\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mLetterCapHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLabelPainterPrivate::mLetterCapHeight{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLetterDescent\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mLetterDescent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLabelPainterPrivate::mLetterDescent{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMultiplicationSymbol\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mMultiplicationSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QChar QCPLabelPainterPrivate::mMultiplicationSymbol{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPadding\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLabelPainterPrivate::mPadding{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPLabelPainterPrivate::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRotation\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLabelPainterPrivate::mRotation{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubstituteExponent\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mSubstituteExponent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLabelPainterPrivate::mSubstituteExponent{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelsSelectionBox\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:mTickLabelsSelectionBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLabelPainterPrivate::mTickLabelsSelectionBox{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SymbolCross\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:SymbolCross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QChar QCPLabelPainterPrivate::SymbolCross{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SymbolDot\:QCPLabelPainterPrivate}
{\xe \v QCPLabelPainterPrivate\:SymbolDot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QChar QCPLabelPainterPrivate::SymbolDot{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLayer Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLayer}
{\xe \v QCPLayer}
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLayer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_layer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LayerMode} \{ {\b lmLogical}
, {\b lmBuffered}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} ({\b QCustomPlot} *{\b parentPlot}, const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b index} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLayerable} * > {\b children} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LayerMode} {\b mode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool {\b visible})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMode} ({\b LayerMode} {\b mode})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b replot} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b draw} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawToPaintBuffer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addChild} ({\b QCPLayerable} *layerable, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeChild} ({\b QCPLayerable} *layerable)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mIndex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLayerable} * > {\b mChildren}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LayerMode} {\b mMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QWeakPointer< {\b QCPAbstractPaintBuffer} > {\b mPaintBuffer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayerable}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LayerMode\:QCPLayer}
{\xe \v QCPLayer\:LayerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLayer::LayerMode}}}
\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the different rendering modes of a layer. Depending on the mode, certain layers can be replotted individually, without the need to replot (possibly complex) layerables on other layers.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setMode} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lmLogical\:QCPLayer}
{\xe \v QCPLayer\:lmLogical}
{\qr lmLogical{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layer is used only for rendering order, and shares paint buffer with all other adjacent logical layers. \par
}\cell }{\row }
{\xe \v lmBuffered\:QCPLayer}
{\xe \v QCPLayer\:lmBuffered}
{\qr lmBuffered{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layer has its own paint buffer and may be replotted individually (see {\b replot}). \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLayer\:QCPLayer}
{\xe \v QCPLayer\:QCPLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLayer::QCPLayer ({\b QCustomPlot} * parentPlot, const QString & layerName)}}
\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLayer\:QCPLayer}
{\xe \v QCPLayer\:~QCPLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLayer::~QCPLayer (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addChild\:QCPLayer}
{\xe \v QCPLayer\:addChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::addChild ({\b QCPLayerable} * layerable, bool prepend){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v children\:QCPLayer}
{\xe \v QCPLayer\:children}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPLayerable} * > QCPLayer::children () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPLayer}
{\xe \v QCPLayer\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::draw ({\b QCPPainter} * painter){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawToPaintBuffer\:QCPLayer}
{\xe \v QCPLayer\:drawToPaintBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::drawToPaintBuffer (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v index\:QCPLayer}
{\xe \v QCPLayer\:index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayer::index () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mode\:QCPLayer}
{\xe \v QCPLayer\:mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LayerMode} QCPLayer::mode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name\:QCPLayer}
{\xe \v QCPLayer\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPLayer::name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentPlot\:QCPLayer}
{\xe \v QCPLayer\:parentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot} * QCPLayer::parentPlot () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeChild\:QCPLayer}
{\xe \v QCPLayer\:removeChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::removeChild ({\b QCPLayerable} * layerable){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v replot\:QCPLayer}
{\xe \v QCPLayer\:replot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::replot ()}}
\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMode\:QCPLayer}
{\xe \v QCPLayer\:setMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::setMode ({\b LayerMode} mode)}}
\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setVisible\:QCPLayer}
{\xe \v QCPLayer\:setVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayer::setVisible (bool visible)}}
\par
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visible\:QCPLayer}
{\xe \v QCPLayer\:visible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayer::visible () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLayerable\:QCPLayer}
{\xe \v QCPLayer\:QCPLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLayerable}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPLayer}
{\xe \v QCPLayer\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mChildren\:QCPLayer}
{\xe \v QCPLayer\:mChildren}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPLayerable}*> QCPLayer::mChildren{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mIndex\:QCPLayer}
{\xe \v QCPLayer\:mIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayer::mIndex{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMode\:QCPLayer}
{\xe \v QCPLayer\:mMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LayerMode} QCPLayer::mMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mName\:QCPLayer}
{\xe \v QCPLayer\:mName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPLayer::mName{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPaintBuffer\:QCPLayer}
{\xe \v QCPLayer\:mPaintBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QWeakPointer<{\b QCPAbstractPaintBuffer}> QCPLayer::mPaintBuffer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPLayer}
{\xe \v QCPLayer\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPLayer::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mVisible\:QCPLayer}
{\xe \v QCPLayer\:mVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayer::mVisible{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLayerable Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLayerable}
{\xe \v QCPLayerable}
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLayerable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_layerable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisRect}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLayerable\:QCPLayerable}
{\xe \v QCPLayerable\:QCPLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLayerable::QCPLayerable ({\b QCustomPlot} * plot, QString targetLayer = {\f2 QString()}, {\b QCPLayerable} * parentLayerable = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLayerable\:QCPLayerable}
{\xe \v QCPLayerable\:~QCPLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLayerable::~QCPLayerable (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v antialiased\:QCPLayerable}
{\xe \v QCPLayerable\:antialiased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::antialiased () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyAntialiasingHint\:QCPLayerable}
{\xe \v QCPLayerable\:applyAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayerable::applyAntialiasingHint ({\b QCPPainter} * painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPLayerable}
{\xe \v QCPLayerable\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABAU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACGJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPSelectionRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZV \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v clipRect\:QCPLayerable}
{\xe \v QCPLayerable\:clipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QRect QCPLayerable::clipRect () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v deselectEvent\:QCPLayerable}
{\xe \v QCPLayerable\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPLayerable}
{\xe \v QCPLayerable\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAME \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACGK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemBracket} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemEllipse} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemStraightLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemTracer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPlottableLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPSelectionRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMK \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v initializeParentPlot\:QCPLayerable}
{\xe \v QCPLayerable\:initializeParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayerable::initializeParentPlot ({\b QCustomPlot} * parentPlot){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layer\:QCPLayerable}
{\xe \v QCPLayerable\:layer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayer} * QCPLayerable::layer () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layerChanged\:QCPLayerable}
{\xe \v QCPLayerable\:layerChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayerable::layerChanged ({\b QCPLayer} * newLayer){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseDoubleClickEvent\:QCPLayerable}
{\xe \v QCPLayerable\:mouseDoubleClickEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::mouseDoubleClickEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseMoveEvent\:QCPLayerable}
{\xe \v QCPLayerable\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAO \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPLayerable}
{\xe \v QCPLayerable\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPLayerable}
{\xe \v QCPLayerable\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABCB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAU \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v moveToLayer\:QCPLayerable}
{\xe \v QCPLayerable\:moveToLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::moveToLayer ({\b QCPLayer} * layer, bool prepend){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentLayerable\:QCPLayerable}
{\xe \v QCPLayerable\:parentLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayerable} * QCPLayerable::parentLayerable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentPlot\:QCPLayerable}
{\xe \v QCPLayerable\:parentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot} * QCPLayerable::parentPlot () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentPlotInitialized\:QCPLayerable}
{\xe \v QCPLayerable\:parentPlotInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::parentPlotInitialized ({\b QCustomPlot} * parentPlot){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v realVisibility\:QCPLayerable}
{\xe \v QCPLayerable\:realVisibility}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::realVisibility () const}}
\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPLayerable}
{\xe \v QCPLayerable\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionCategory\:QCPLayerable}
{\xe \v QCPLayerable\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPLayerable::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAII \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTest\:QCPLayerable}
{\xe \v QCPLayerable\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPLayerable::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAbstractItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorMap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemBracket} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemCurve} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemEllipse} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemPixmap} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemStraightLine} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemText} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPItemTracer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarGraph} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAntialiased\:QCPLayerable}
{\xe \v QCPLayerable\:setAntialiased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayerable::setAntialiased (bool enabled)}}
\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLayer\:QCPLayerable}
{\xe \v QCPLayerable\:setLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::setLayer (const QString & layerName)}}
\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLayer\:QCPLayerable}
{\xe \v QCPLayerable\:setLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT bool QCPLayerable::setLayer ({\b QCPLayer} * layer)}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setParentLayerable\:QCPLayerable}
{\xe \v QCPLayerable\:setParentLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayerable::setParentLayerable ({\b QCPLayerable} * parentLayerable){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setVisible\:QCPLayerable}
{\xe \v QCPLayerable\:setVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayerable::setVisible (bool on)}}
\par
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visible\:QCPLayerable}
{\xe \v QCPLayerable\:visible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::visible () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wheelEvent\:QCPLayerable}
{\xe \v QCPLayerable\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayerable::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxis} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarAxisRadial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAxisRect\:QCPLayerable}
{\xe \v QCPLayerable\:QCPAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAxisRect}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPLayer\:QCPLayerable}
{\xe \v QCPLayerable\:QCPLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLayer}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPLayerable}
{\xe \v QCPLayerable\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAntialiased\:QCPLayerable}
{\xe \v QCPLayerable\:mAntialiased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::mAntialiased{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLayer\:QCPLayerable}
{\xe \v QCPLayerable\:mLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayer}* QCPLayerable::mLayer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentLayerable\:QCPLayerable}
{\xe \v QCPLayerable\:mParentLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPLayerable}> QCPLayerable::mParentLayerable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPLayerable}
{\xe \v QCPLayerable\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPLayerable::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mVisible\:QCPLayerable}
{\xe \v QCPLayerable\:mVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayerable::mVisible{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLayout Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLayout}
{\xe \v QCPLayout}
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLayout:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_layout.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b elementCount} () const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b elementAt} (int index) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b takeAt} (int index)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b take} ({\b QCPLayoutElement} *element)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b simplify} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeAt} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b remove} ({\b QCPLayoutElement} *element)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sizeConstraintsChanged} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adoptElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b releaseElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< int > {\b getSectionSizes} (QVector< int > maxSizes, QVector< int > minSizes, QVector< double > stretchFactors, int totalSize) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMinimumOuterSize} (const {\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMaximumOuterSize} (const {\b QCPLayoutElement} *el)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayoutElement}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLayout\:QCPLayout}
{\xe \v QCPLayout\:QCPLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLayout::QCPLayout (){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adoptElement\:QCPLayout}
{\xe \v QCPLayout\:adoptElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayout::adoptElement ({\b QCPLayoutElement} * el){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear\:QCPLayout}
{\xe \v QCPLayout\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayout::clear ()}}
\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elementAt\:QCPLayout}
{\xe \v QCPLayout\:elementAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPLayoutElement} * QCPLayout::elementAt (int index) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCM \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v elementCount\:QCPLayout}
{\xe \v QCPLayout\:elementCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPLayout::elementCount () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v elements\:QCPLayout}
{\xe \v QCPLayout\:elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QList< {\b QCPLayoutElement} * > QCPLayout::elements (bool recursive) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFinalMaximumOuterSize\:QCPLayout}
{\xe \v QCPLayout\:getFinalMaximumOuterSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static QSize QCPLayout::getFinalMaximumOuterSize (const {\b QCPLayoutElement} * el){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getFinalMinimumOuterSize\:QCPLayout}
{\xe \v QCPLayout\:getFinalMinimumOuterSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static QSize QCPLayout::getFinalMinimumOuterSize (const {\b QCPLayoutElement} * el){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSectionSizes\:QCPLayout}
{\xe \v QCPLayout\:getSectionSizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< int > QCPLayout::getSectionSizes (QVector< int > maxSizes, QVector< int > minSizes, QVector< double > stretchFactors, int totalSize) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v releaseElement\:QCPLayout}
{\xe \v QCPLayout\:releaseElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayout::releaseElement ({\b QCPLayoutElement} * el){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remove\:QCPLayout}
{\xe \v QCPLayout\:remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayout::remove ({\b QCPLayoutElement} * element)}}
\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeAt\:QCPLayout}
{\xe \v QCPLayout\:removeAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayout::removeAt (int index)}}
\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v simplify\:QCPLayout}
{\xe \v QCPLayout\:simplify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayout::simplify (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v sizeConstraintsChanged\:QCPLayout}
{\xe \v QCPLayout\:sizeConstraintsChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayout::sizeConstraintsChanged () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v take\:QCPLayout}
{\xe \v QCPLayout\:take}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool QCPLayout::take ({\b QCPLayoutElement} * element){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDE \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v takeAt\:QCPLayout}
{\xe \v QCPLayout\:takeAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPLayoutElement} * QCPLayout::takeAt (int index){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDH \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v update\:QCPLayout}
{\xe \v QCPLayout\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayout::update ({\b UpdatePhase} phase){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v updateLayout\:QCPLayout}
{\xe \v QCPLayout\:updateLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayout::updateLayout (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDL \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLayoutElement\:QCPLayout}
{\xe \v QCPLayout\:QCPLayoutElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLayoutElement}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLayoutElement Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLayoutElement}
{\xe \v QCPLayoutElement}
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLayoutElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_layout_element.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPMarginGroup}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v SizeConstraintRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:SizeConstraintRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLayoutElement::SizeConstraintRect}}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines to which rect of a layout element the size constraints that can be set via {\b setMinimumSize} and {\b setMaximumSize} apply. The outer rect ({\b outerRect}) includes the margins (e.g. in the case of a {\b QCPAxisRect} the axis labels), whereas the inner rect ({\b rect}) does not.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSizeConstraintRect} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v scrInnerRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:scrInnerRect}
{\qr scrInnerRect{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum/Maximum size constraints apply to inner rect. \par
}\cell }{\row }
{\xe \v scrOuterRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:scrOuterRect}
{\qr scrOuterRect{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum/Maximum size constraints apply to outer rect, thus include layout element margins. \par
}\cell }{\row }
}
}
{\xe \v UpdatePhase\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:UpdatePhase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLayoutElement::UpdatePhase}}}
\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the phases of the update process, that happens just before a replot. At each phase, {\b update} is called with the according UpdatePhase value. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v upPreparation\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:upPreparation}
{\qr upPreparation{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phase used for any type of preparation that needs to be done before margin calculation and layout. \par
}\cell }{\row }
{\xe \v upMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:upMargins}
{\qr upMargins{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Phase in which the margins are calculated and set. \par
}\cell }{\row }
{\xe \v upLayout\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:upLayout}
{\qr upLayout{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Final phase in which the layout system places the rects of the elements. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLayoutElement\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:QCPLayoutElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLayoutElement::QCPLayoutElement ({\b QCustomPlot} * parentPlot = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLayoutElement\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:~QCPLayoutElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLayoutElement::~QCPLayoutElement (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyDefaultAntialiasingHint\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutElement::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABAU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v autoMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:autoMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::MarginSides QCPLayoutElement::autoMargins () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v calculateAutoMargin\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:calculateAutoMargin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPLayoutElement::calculateAutoMargin ({\b QCP::MarginSide} side){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutElement::draw ({\b QCPPainter} * painter){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPlottableLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v elements\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QList< {\b QCPLayoutElement} * > QCPLayoutElement::elements (bool recursive) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCS \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v layout\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:layout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayout} * QCPLayoutElement::layout () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layoutChanged\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:layoutChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutElement::layoutChanged (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v marginGroup\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:marginGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPMarginGroup} * QCPLayoutElement::marginGroup ({\b QCP::MarginSide} side) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v marginGroups\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:marginGroups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > QCPLayoutElement::marginGroups () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v margins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:margins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMargins QCPLayoutElement::margins () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maximumOuterSizeHint\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:maximumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPLayoutElement::maximumOuterSizeHint () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v maximumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:maximumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPLayoutElement::maximumSize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:minimumMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMargins QCPLayoutElement::minimumMargins () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumOuterSizeHint\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:minimumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPLayoutElement::minimumOuterSizeHint () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPLayoutGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPlottableLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEM \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v minimumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:minimumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPLayoutElement::minimumSize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v outerRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:outerRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLayoutElement::outerRect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentPlotInitialized\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:parentPlotInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutElement::parentPlotInitialized ({\b QCustomPlot} * parentPlot){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v rect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLayoutElement::rect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPLayoutElement::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayoutInset} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLegend} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBN \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPTextElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAutoMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setAutoMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setAutoMargins (QCP::MarginSides sides)}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMarginGroup\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMarginGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMarginGroup (QCP::MarginSides sides, {\b QCPMarginGroup} * group)}}
\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMargins (const QMargins & margins)}}
\par
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMaximumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMaximumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMaximumSize (const QSize & size)}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMaximumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMaximumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMaximumSize (int width, int height)}}
\par
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMinimumMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMinimumMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMinimumMargins (const QMargins & margins)}}
\par
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMinimumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMinimumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMinimumSize (const QSize & size)}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMinimumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setMinimumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setMinimumSize (int width, int height)}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOuterRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setOuterRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setOuterRect (const QRect & rect)}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSizeConstraintRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:setSizeConstraintRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutElement::setSizeConstraintRect ({\b SizeConstraintRect} constraintRect)}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sizeConstraintRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:sizeConstraintRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SizeConstraintRect} QCPLayoutElement::sizeConstraintRect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v update\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutElement::update ({\b UpdatePhase} phase){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPAxisRect} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScale} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPColorScaleAxisRectPrivate} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDJ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPPolarAxisAngular} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADFC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLayout\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:QCPLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLayout}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPMarginGroup\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:QCPMarginGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPMarginGroup}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAutoMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mAutoMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::MarginSides QCPLayoutElement::mAutoMargins{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMarginGroups\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mMarginGroups}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QHash<{\b QCP::MarginSide}, {\b QCPMarginGroup}*> QCPLayoutElement::mMarginGroups{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMargins QCPLayoutElement::mMargins{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMaximumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mMaximumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPLayoutElement::mMaximumSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMinimumMargins\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mMinimumMargins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QMargins QCPLayoutElement::mMinimumMargins{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMinimumSize\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mMinimumSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPLayoutElement::mMinimumSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOuterRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mOuterRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLayoutElement::mOuterRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentLayout\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mParentLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayout}* QCPLayoutElement::mParentLayout{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPLayoutElement::mRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSizeConstraintRect\:QCPLayoutElement}
{\xe \v QCPLayoutElement\:mSizeConstraintRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SizeConstraintRect} QCPLayoutElement::mSizeConstraintRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLayoutGrid Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLayoutGrid}
{\xe \v QCPLayoutGrid}
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLayoutGrid:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_layout_grid.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FillOrder} \{ {\b foRowsFirst}
, {\b foColumnsFirst}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutGrid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutGrid} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rowCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b columnStretchFactors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b rowStretchFactors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnSpacing} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rowSpacing} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b wrap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FillOrder} {\b fillOrder} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumnStretchFactor} (int column, double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumnStretchFactors} (const QList< double > &factors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRowStretchFactor} (int row, double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRowStretchFactors} (const QList< double > &factors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumnSpacing} (int pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRowSpacing} (int pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWrap} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFillOrder} ({\b FillOrder} order, bool rearrange=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateLayout} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b elementCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b elementAt} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b takeAt} (int index) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b take} ({\b QCPLayoutElement} *{\b element}) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b simplify} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} * {\b element} (int row, int column) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addElement} (int row, int column, {\b QCPLayoutElement} *{\b element})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addElement} ({\b QCPLayoutElement} *{\b element})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasElement} (int row, int column)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b expandTo} (int newRowCount, int newColumnCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertRow} (int newIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertColumn} (int newIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rowColToIndex} (int row, int column) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b indexToRowCol} (int index, int &row, int &column) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeAt} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b remove} ({\b QCPLayoutElement} *element)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getMinimumRowColSizes} (QVector< int > *minColWidths, QVector< int > *minRowHeights) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getMaximumRowColSizes} (QVector< int > *maxColWidths, QVector< int > *maxRowHeights) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sizeConstraintsChanged} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adoptElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b releaseElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< int > {\b getSectionSizes} (QVector< int > maxSizes, QVector< int > minSizes, QVector< double > stretchFactors, int totalSize) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QList< {\b QCPLayoutElement} * > > {\b mElements}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b mColumnStretchFactors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b mRowStretchFactors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mColumnSpacing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mRowSpacing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mWrap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FillOrder} {\b mFillOrder}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Protected Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMinimumOuterSize} (const {\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMaximumOuterSize} (const {\b QCPLayoutElement} *el)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v FillOrder\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:FillOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLayoutGrid::FillOrder}}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines in which direction the grid is filled when using {\b addElement(QCPLayoutElement*)}. The column/row at which wrapping into the next row/column occurs can be specified with {\b setWrap}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setFillOrder} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v foRowsFirst\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:foRowsFirst}
{\qr foRowsFirst{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rows are filled first, and a new element is wrapped to the next column if the row count would exceed {\b setWrap}. \par
}\cell }{\row }
{\xe \v foColumnsFirst\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:foColumnsFirst}
{\qr foColumnsFirst{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Columns are filled first, and a new element is wrapped to the next row if the column count would exceed {\b setWrap}. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLayoutGrid\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:QCPLayoutGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLayoutGrid::QCPLayoutGrid (){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLayoutGrid\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:~QCPLayoutGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLayoutGrid::~QCPLayoutGrid (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addElement\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:addElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayoutGrid::addElement (int row, int column, {\b QCPLayoutElement} * element)}}
\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addElement\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:addElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayoutGrid::addElement ({\b QCPLayoutElement} * element)}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v columnCount\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:columnCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::columnCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v columnSpacing\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:columnSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::columnSpacing () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v columnStretchFactors\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:columnStretchFactors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< double > QCPLayoutGrid::columnStretchFactors () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v element\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:element}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutElement} * QCPLayoutGrid::element (int row, int column) const}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elementAt\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:elementAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPLayoutElement} * QCPLayoutGrid::elementAt (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v elementCount\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:elementCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPLayoutGrid::elementCount () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v elements\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QList< {\b QCPLayoutElement} * > QCPLayoutGrid::elements (bool recursive) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v expandTo\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:expandTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::expandTo (int newRowCount, int newColumnCount)}}
\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fillOrder\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:fillOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FillOrder} QCPLayoutGrid::fillOrder () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getMaximumRowColSizes\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:getMaximumRowColSizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::getMaximumRowColSizes (QVector< int > * maxColWidths, QVector< int > * maxRowHeights) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getMinimumRowColSizes\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:getMinimumRowColSizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::getMinimumRowColSizes (QVector< int > * minColWidths, QVector< int > * minRowHeights) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hasElement\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:hasElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLayoutGrid::hasElement (int row, int column)}}
\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indexToRowCol\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:indexToRowCol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::indexToRowCol (int index, int & row, int & column) const}}
\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insertColumn\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:insertColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::insertColumn (int newIndex)}}
\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insertRow\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:insertRow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::insertRow (int newIndex)}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maximumOuterSizeHint\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:maximumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPLayoutGrid::maximumOuterSizeHint () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v minimumOuterSizeHint\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:minimumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPLayoutGrid::minimumOuterSizeHint () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v rowColToIndex\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:rowColToIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::rowColToIndex (int row, int column) const}}
\par
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rowCount\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:rowCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::rowCount () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rowSpacing\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:rowSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::rowSpacing () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rowStretchFactors\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:rowStretchFactors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< double > QCPLayoutGrid::rowStretchFactors () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColumnSpacing\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setColumnSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setColumnSpacing (int pixels)}}
\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColumnStretchFactor\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setColumnStretchFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setColumnStretchFactor (int column, double factor)}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setColumnStretchFactors\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setColumnStretchFactors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setColumnStretchFactors (const QList< double > & factors)}}
\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFillOrder\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setFillOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setFillOrder ({\b FillOrder} order, bool rearrange = {\f2 true})}}
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRowSpacing\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setRowSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setRowSpacing (int pixels)}}
\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRowStretchFactor\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setRowStretchFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setRowStretchFactor (int row, double factor)}}
\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRowStretchFactors\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setRowStretchFactors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setRowStretchFactors (const QList< double > & factors)}}
\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWrap\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:setWrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutGrid::setWrap (int count)}}
\par
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v simplify\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:simplify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutGrid::simplify (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v take\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:take}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool QCPLayoutGrid::take ({\b QCPLayoutElement} * element){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v takeAt\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:takeAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPLayoutElement} * QCPLayoutGrid::takeAt (int index){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v updateLayout\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:updateLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutGrid::updateLayout (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v wrap\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:wrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::wrap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mColumnSpacing\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mColumnSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::mColumnSpacing{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mColumnStretchFactors\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mColumnStretchFactors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<double> QCPLayoutGrid::mColumnStretchFactors{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mElements\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QList<{\b QCPLayoutElement}*> > QCPLayoutGrid::mElements{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mFillOrder\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mFillOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FillOrder} QCPLayoutGrid::mFillOrder{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRowSpacing\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mRowSpacing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::mRowSpacing{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRowStretchFactors\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mRowStretchFactors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<double> QCPLayoutGrid::mRowStretchFactors{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWrap\:QCPLayoutGrid}
{\xe \v QCPLayoutGrid\:mWrap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLayoutGrid::mWrap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLayoutInset Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLayoutInset}
{\xe \v QCPLayoutInset}
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLayoutInset:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_layout_inset.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b InsetPlacement} \{ {\b ipFree}
, {\b ipBorderAligned}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutInset} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InsetPlacement} {\b insetPlacement} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::Alignment {\b insetAlignment} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRectF {\b insetRect} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInsetPlacement} (int index, {\b InsetPlacement} placement)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInsetAlignment} (int index, Qt::Alignment alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInsetRect} (int index, const QRectF &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateLayout} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b elementCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b elementAt} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b takeAt} (int index) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b take} ({\b QCPLayoutElement} *element) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b simplify} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addElement} ({\b QCPLayoutElement} *element, Qt::Alignment alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addElement} ({\b QCPLayoutElement} *element, const QRectF &{\b rect})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeAt} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b remove} ({\b QCPLayoutElement} *element)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLayoutElement} * > {\b mElements}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b InsetPlacement} > {\b mInsetPlacement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< Qt::Alignment > {\b mInsetAlignment}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QRectF > {\b mInsetRect}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sizeConstraintsChanged} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adoptElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b releaseElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< int > {\b getSectionSizes} (QVector< int > maxSizes, QVector< int > minSizes, QVector< double > stretchFactors, int totalSize) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Protected Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMinimumOuterSize} (const {\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMaximumOuterSize} (const {\b QCPLayoutElement} *el)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v InsetPlacement\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:InsetPlacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLayoutInset::InsetPlacement}}}
\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how the placement and sizing is handled for a certain element in a {\b QCPLayoutInset}. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ipFree\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:ipFree}
{\qr ipFree{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The element may be positioned/sized arbitrarily, see {\b setInsetRect}. \par
}\cell }{\row }
{\xe \v ipBorderAligned\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:ipBorderAligned}
{\qr ipBorderAligned{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The element is aligned to one of the layout sides, see {\b setInsetAlignment}. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLayoutInset\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:QCPLayoutInset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLayoutInset::QCPLayoutInset (){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLayoutInset\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:~QCPLayoutInset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLayoutInset::~QCPLayoutInset (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addElement\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:addElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutInset::addElement ({\b QCPLayoutElement} * element, const QRectF & rect)}}
\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addElement\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:addElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutInset::addElement ({\b QCPLayoutElement} * element, Qt::Alignment alignment)}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elementAt\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:elementAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPLayoutElement} * QCPLayoutInset::elementAt (int index) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v elementCount\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:elementCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPLayoutInset::elementCount () const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v insetAlignment\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:insetAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::Alignment QCPLayoutInset::insetAlignment (int index) const}}
\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insetPlacement\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:insetPlacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b InsetPlacement} QCPLayoutInset::insetPlacement (int index) const}}
\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insetRect\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:insetRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRectF QCPLayoutInset::insetRect (int index) const}}
\par
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPLayoutInset::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setInsetAlignment\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:setInsetAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutInset::setInsetAlignment (int index, Qt::Alignment alignment)}}
\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInsetPlacement\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:setInsetPlacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutInset::setInsetPlacement (int index, {\b InsetPlacement} placement)}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInsetRect\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:setInsetRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLayoutInset::setInsetRect (int index, const QRectF & rect)}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v simplify\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:simplify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutInset::simplify (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADCZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v take\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:take}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool QCPLayoutInset::take ({\b QCPLayoutElement} * element){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v takeAt\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:takeAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPLayoutElement} * QCPLayoutInset::takeAt (int index){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v updateLayout\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:updateLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLayoutInset::updateLayout (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayout} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mElements\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:mElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPLayoutElement}*> QCPLayoutInset::mElements{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInsetAlignment\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:mInsetAlignment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<Qt::Alignment> QCPLayoutInset::mInsetAlignment{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInsetPlacement\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:mInsetPlacement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b InsetPlacement}> QCPLayoutInset::mInsetPlacement{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInsetRect\:QCPLayoutInset}
{\xe \v QCPLayoutInset\:mInsetRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QRectF> QCPLayoutInset::mInsetRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLegend Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLegend}
{\xe \v QCPLegend}
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPLegend:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_legend.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectablePart} \{ {\b spNone} = 0x000
, {\b spLegendBox} = 0x001
, {\b spItems} = 0x002
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutGrid}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FillOrder} \{ {\b foRowsFirst}
, {\b foColumnsFirst}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (QCPLegend::SelectableParts parts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (QCPLegend::SelectableParts parts)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLegend} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b borderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b textColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b iconSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b iconTextPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b iconBorderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectableParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectedParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedBorderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedIconBorderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b selectedBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBorderPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconTextPadding} (int padding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIconBorderPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectableParts} (const SelectableParts &{\b selectableParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectedParts} (const SelectableParts &{\b selectedParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBorderPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedIconBorderPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractLegendItem} * {\b item} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPlottableLegendItem} * {\b itemWithPlottable} (const {\b QCPAbstractPlottable} *plottable) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b itemCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasItem} ({\b QCPAbstractLegendItem} *{\b item}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasItemWithPlottable} (const {\b QCPAbstractPlottable} *plottable) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addItem} ({\b QCPAbstractLegendItem} *{\b item})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeItem} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeItem} ({\b QCPAbstractLegendItem} *{\b item})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearItems} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractLegendItem} * > {\b selectedItems} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutGrid}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutGrid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutGrid} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rowCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b columnStretchFactors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b rowStretchFactors} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnSpacing} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rowSpacing} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b wrap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FillOrder} {\b fillOrder} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumnStretchFactor} (int column, double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumnStretchFactors} (const QList< double > &factors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRowStretchFactor} (int row, double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRowStretchFactors} (const QList< double > &factors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumnSpacing} (int pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRowSpacing} (int pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWrap} (int count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFillOrder} ({\b FillOrder} order, bool rearrange=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateLayout} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b elementCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b elementAt} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPLayoutElement} * {\b takeAt} (int index) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b take} ({\b QCPLayoutElement} *{\b element}) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b simplify} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} * {\b element} (int row, int column) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addElement} (int row, int column, {\b QCPLayoutElement} *{\b element})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addElement} ({\b QCPLayoutElement} *{\b element})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasElement} (int row, int column)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b expandTo} (int newRowCount, int newColumnCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertRow} (int newIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertColumn} (int newIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b rowColToIndex} (int row, int column) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b indexToRowCol} (int index, int &row, int &column) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeAt} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b remove} ({\b QCPLayoutElement} *element)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getBorderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b getBrush} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutGrid}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getMinimumRowColSizes} (QVector< int > *minColWidths, QVector< int > *minRowHeights) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getMaximumRowColSizes} (QVector< int > *maxColWidths, QVector< int > *maxRowHeights) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sizeConstraintsChanged} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adoptElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b releaseElement} ({\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< int > {\b getSectionSizes} (QVector< int > maxSizes, QVector< int > minSizes, QVector< double > stretchFactors, int totalSize) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mBorderPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mIconBorderPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mIconSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mIconTextPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectedParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectableParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedBorderPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedIconBorderPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mSelectedBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTextColor}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutGrid}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QList< {\b QCPLayoutElement} * > > {\b mElements}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b mColumnStretchFactors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< double > {\b mRowStretchFactors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mColumnSpacing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mRowSpacing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mWrap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FillOrder} {\b mFillOrder}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractLegendItem}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Protected Member Functions inherited from {\b QCPLayout}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMinimumOuterSize} (const {\b QCPLayoutElement} *el)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static QSize {\b getFinalMaximumOuterSize} (const {\b QCPLayoutElement} *el)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v SelectablePart\:QCPLegend}
{\xe \v QCPLegend\:SelectablePart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLegend::SelectablePart}}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the selectable parts of a legend\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSelectedParts}, {\b setSelectableParts} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v spNone\:QCPLegend}
{\xe \v QCPLegend\:spNone}
{\qr spNone{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x000}  None \par
}\cell }{\row }
{\xe \v spLegendBox\:QCPLegend}
{\xe \v QCPLegend\:spLegendBox}
{\qr spLegendBox{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x001}  The legend box (frame) \par
}\cell }{\row }
{\xe \v spItems\:QCPLegend}
{\xe \v QCPLegend\:spItems}
{\qr spItems{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x002}  Legend items individually (see {\b selectedItems}) \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPLegend}
{\xe \v QCPLegend\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLegend::QCPLegend (){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPLegend\:QCPLegend}
{\xe \v QCPLegend\:~QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPLegend::~QCPLegend (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addItem\:QCPLegend}
{\xe \v QCPLegend\:addItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLegend::addItem ({\b QCPAbstractLegendItem} * item)}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPLegend}
{\xe \v QCPLegend\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLegend::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v borderPen\:QCPLegend}
{\xe \v QCPLegend\:borderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::borderPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brush\:QCPLegend}
{\xe \v QCPLegend\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPLegend::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearItems\:QCPLegend}
{\xe \v QCPLegend\:clearItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::clearItems ()}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPLegend}
{\xe \v QCPLegend\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLegend::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPLegend}
{\xe \v QCPLegend\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLegend::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v font\:QCPLegend}
{\xe \v QCPLegend\:font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLegend::font () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getBorderPen\:QCPLegend}
{\xe \v QCPLegend\:getBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::getBorderPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getBrush\:QCPLegend}
{\xe \v QCPLegend\:getBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPLegend::getBrush () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hasItem\:QCPLegend}
{\xe \v QCPLegend\:hasItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLegend::hasItem ({\b QCPAbstractLegendItem} * item) const}}
\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hasItemWithPlottable\:QCPLegend}
{\xe \v QCPLegend\:hasItemWithPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLegend::hasItemWithPlottable (const {\b QCPAbstractPlottable} * plottable) const}}
\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v iconBorderPen\:QCPLegend}
{\xe \v QCPLegend\:iconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::iconBorderPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v iconSize\:QCPLegend}
{\xe \v QCPLegend\:iconSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPLegend::iconSize () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v iconTextPadding\:QCPLegend}
{\xe \v QCPLegend\:iconTextPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLegend::iconTextPadding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v item\:QCPLegend}
{\xe \v QCPLegend\:item}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractLegendItem} * QCPLegend::item (int index) const}}
\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itemCount\:QCPLegend}
{\xe \v QCPLegend\:itemCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLegend::itemCount () const}}
\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itemWithPlottable\:QCPLegend}
{\xe \v QCPLegend\:itemWithPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPlottableLegendItem} * QCPLegend::itemWithPlottable (const {\b QCPAbstractPlottable} * plottable) const}}
\par
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parentPlotInitialized\:QCPLegend}
{\xe \v QCPLegend\:parentPlotInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLegend::parentPlotInitialized ({\b QCustomPlot} * parentPlot){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADBA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v removeItem\:QCPLegend}
{\xe \v QCPLegend\:removeItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLegend::removeItem (int index)}}
\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeItem\:QCPLegend}
{\xe \v QCPLegend\:removeItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLegend::removeItem ({\b QCPAbstractLegendItem} * item)}}
\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPLegend}
{\xe \v QCPLegend\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::selectableChanged (QCPLegend::SelectableParts parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableParts\:QCPLegend}
{\xe \v QCPLegend\:selectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPLegend::selectableParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBorderPen\:QCPLegend}
{\xe \v QCPLegend\:selectedBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::selectedBorderPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBrush\:QCPLegend}
{\xe \v QCPLegend\:selectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPLegend::selectedBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedFont\:QCPLegend}
{\xe \v QCPLegend\:selectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLegend::selectedFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedIconBorderPen\:QCPLegend}
{\xe \v QCPLegend\:selectedIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::selectedIconBorderPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedItems\:QCPLegend}
{\xe \v QCPLegend\:selectedItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractLegendItem} * > QCPLegend::selectedItems () const}}
\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedParts\:QCPLegend}
{\xe \v QCPLegend\:selectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPLegend::selectedParts () const}}
\par
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTextColor\:QCPLegend}
{\xe \v QCPLegend\:selectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLegend::selectedTextColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPLegend}
{\xe \v QCPLegend\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPLegend::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionCategory\:QCPLegend}
{\xe \v QCPLegend\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPLegend::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPLegend}
{\xe \v QCPLegend\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::selectionChanged (QCPLegend::SelectableParts parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPLegend}
{\xe \v QCPLegend\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPLegend::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setBorderPen\:QCPLegend}
{\xe \v QCPLegend\:setBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setBorderPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrush\:QCPLegend}
{\xe \v QCPLegend\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFont\:QCPLegend}
{\xe \v QCPLegend\:setFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setIconBorderPen\:QCPLegend}
{\xe \v QCPLegend\:setIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setIconBorderPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setIconSize\:QCPLegend}
{\xe \v QCPLegend\:setIconSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setIconSize (const QSize & size)}}
\par
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setIconSize\:QCPLegend}
{\xe \v QCPLegend\:setIconSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setIconSize (int width, int height)}}
\par
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setIconTextPadding\:QCPLegend}
{\xe \v QCPLegend\:setIconTextPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setIconTextPadding (int padding)}}
\par
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectableParts\:QCPLegend}
{\xe \v QCPLegend\:setSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPLegend::setSelectableParts (const SelectableParts & selectableParts)}}
\par
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBorderPen\:QCPLegend}
{\xe \v QCPLegend\:setSelectedBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setSelectedBorderPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBrush\:QCPLegend}
{\xe \v QCPLegend\:setSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setSelectedBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedFont\:QCPLegend}
{\xe \v QCPLegend\:setSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setSelectedFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedIconBorderPen\:QCPLegend}
{\xe \v QCPLegend\:setSelectedIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setSelectedIconBorderPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedParts\:QCPLegend}
{\xe \v QCPLegend\:setSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPLegend::setSelectedParts (const SelectableParts & selectedParts)}}
\par
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTextColor\:QCPLegend}
{\xe \v QCPLegend\:setSelectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setSelectedTextColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTextColor\:QCPLegend}
{\xe \v QCPLegend\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLegend::setTextColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v textColor\:QCPLegend}
{\xe \v QCPLegend\:textColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLegend::textColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAbstractLegendItem\:QCPLegend}
{\xe \v QCPLegend\:QCPAbstractLegendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAbstractLegendItem}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPLegend}
{\xe \v QCPLegend\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBorderPen\:QCPLegend}
{\xe \v QCPLegend\:mBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::mBorderPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPLegend}
{\xe \v QCPLegend\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPLegend::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mFont\:QCPLegend}
{\xe \v QCPLegend\:mFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLegend::mFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mIconBorderPen\:QCPLegend}
{\xe \v QCPLegend\:mIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::mIconBorderPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mIconSize\:QCPLegend}
{\xe \v QCPLegend\:mIconSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPLegend::mIconSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mIconTextPadding\:QCPLegend}
{\xe \v QCPLegend\:mIconTextPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPLegend::mIconTextPadding{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectableParts\:QCPLegend}
{\xe \v QCPLegend\:mSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPLegend::mSelectableParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBorderPen\:QCPLegend}
{\xe \v QCPLegend\:mSelectedBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::mSelectedBorderPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBrush\:QCPLegend}
{\xe \v QCPLegend\:mSelectedBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPLegend::mSelectedBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedFont\:QCPLegend}
{\xe \v QCPLegend\:mSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPLegend::mSelectedFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedIconBorderPen\:QCPLegend}
{\xe \v QCPLegend\:mSelectedIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPLegend::mSelectedIconBorderPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedParts\:QCPLegend}
{\xe \v QCPLegend\:mSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPLegend::mSelectedParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTextColor\:QCPLegend}
{\xe \v QCPLegend\:mSelectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLegend::mSelectedTextColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTextColor\:QCPLegend}
{\xe \v QCPLegend\:mTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPLegend::mTextColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPLineEnding Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPLineEnding}
{\xe \v QCPLineEnding}
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EndingStyle} \{ {\b esNone}
, {\b esFlatArrow}
, {\b esSpikeArrow}
, {\b esLineArrow}
, {\b esDisc}
, {\b esSquare}
, {\b esDiamond}
, {\b esBar}
, {\b esHalfBar}
, {\b esSkewedBar}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLineEnding} ({\b EndingStyle} {\b style}, double {\b width}=8, double {\b length}=10, bool {\b inverted}=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EndingStyle} {\b style} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b length} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b inverted} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStyle} ({\b EndingStyle} {\b style})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidth} (double {\b width})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLength} (double {\b length})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInverted} (bool {\b inverted})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b boundingDistance} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b realLength} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b draw} ({\b QCPPainter} *painter, const {\b QCPVector2D} &pos, const {\b QCPVector2D} &dir) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b draw} ({\b QCPPainter} *painter, const {\b QCPVector2D} &pos, double angle) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EndingStyle} {\b mStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mInverted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v EndingStyle\:QCPLineEnding}
{\xe \v QCPLineEnding\:EndingStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPLineEnding::EndingStyle}}}
\par
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the type of ending decoration for line-like items, e.g. an arrow.\par
The width and length of these decorations can be controlled with the functions {\b setWidth} and {\b setLength}. Some decorations like {\b esDisc}, {\b esSquare}, {\b esDiamond} and {\b esBar} only support a width, the length property is ignored.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPItemLine::setHead}, {\b QCPItemLine::setTail}, {\b QCPItemCurve::setHead}, {\b QCPItemCurve::setTail}, {\b QCPAxis::setLowerEnding}, {\b QCPAxis::setUpperEnding} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v esNone\:QCPLineEnding}
{\xe \v QCPLineEnding\:esNone}
{\qr esNone{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
No ending decoration. \par
}\cell }{\row }
{\xe \v esFlatArrow\:QCPLineEnding}
{\xe \v QCPLineEnding\:esFlatArrow}
{\qr esFlatArrow{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A filled arrow head with a straight/flat back (a triangle) \par
}\cell }{\row }
{\xe \v esSpikeArrow\:QCPLineEnding}
{\xe \v QCPLineEnding\:esSpikeArrow}
{\qr esSpikeArrow{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A filled arrow head with an indented back. \par
}\cell }{\row }
{\xe \v esLineArrow\:QCPLineEnding}
{\xe \v QCPLineEnding\:esLineArrow}
{\qr esLineArrow{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A non-filled arrow head with open back. \par
}\cell }{\row }
{\xe \v esDisc\:QCPLineEnding}
{\xe \v QCPLineEnding\:esDisc}
{\qr esDisc{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A filled circle. \par
}\cell }{\row }
{\xe \v esSquare\:QCPLineEnding}
{\xe \v QCPLineEnding\:esSquare}
{\qr esSquare{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A filled square. \par
}\cell }{\row }
{\xe \v esDiamond\:QCPLineEnding}
{\xe \v QCPLineEnding\:esDiamond}
{\qr esDiamond{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A filled diamond (45 degrees rotated square) \par
}\cell }{\row }
{\xe \v esBar\:QCPLineEnding}
{\xe \v QCPLineEnding\:esBar}
{\qr esBar{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A bar perpendicular to the line. \par
}\cell }{\row }
{\xe \v esHalfBar\:QCPLineEnding}
{\xe \v QCPLineEnding\:esHalfBar}
{\qr esHalfBar{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A bar perpendicular to the line, pointing out to only one side (to which side can be changed with {\b setInverted}) \par
}\cell }{\row }
{\xe \v esSkewedBar\:QCPLineEnding}
{\xe \v QCPLineEnding\:esSkewedBar}
{\qr esSkewedBar{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A bar that is skewed (skew controllable via {\b setLength}) \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPLineEnding\:QCPLineEnding}
{\xe \v QCPLineEnding\:QCPLineEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLineEnding::QCPLineEnding ()}}
\par
{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPLineEnding\:QCPLineEnding}
{\xe \v QCPLineEnding\:QCPLineEnding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPLineEnding::QCPLineEnding ({\b EndingStyle} style, double width = {\f2 8}, double length = {\f2 10}, bool inverted = {\f2 false})}}
\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v boundingDistance\:QCPLineEnding}
{\xe \v QCPLineEnding\:boundingDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLineEnding::boundingDistance () const}}
\par
{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPLineEnding}
{\xe \v QCPLineEnding\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLineEnding::draw ({\b QCPPainter} * painter, const {\b QCPVector2D} & pos, const {\b QCPVector2D} & dir) const}}
\par
{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPLineEnding}
{\xe \v QCPLineEnding\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLineEnding::draw ({\b QCPPainter} * painter, const {\b QCPVector2D} & pos, double angle) const}}
\par
{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inverted\:QCPLineEnding}
{\xe \v QCPLineEnding\:inverted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLineEnding::inverted () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v length\:QCPLineEnding}
{\xe \v QCPLineEnding\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLineEnding::length () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v realLength\:QCPLineEnding}
{\xe \v QCPLineEnding\:realLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLineEnding::realLength () const}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInverted\:QCPLineEnding}
{\xe \v QCPLineEnding\:setInverted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLineEnding::setInverted (bool inverted)}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLength\:QCPLineEnding}
{\xe \v QCPLineEnding\:setLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLineEnding::setLength (double length)}}
\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setStyle\:QCPLineEnding}
{\xe \v QCPLineEnding\:setStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLineEnding::setStyle ({\b EndingStyle} style)}}
\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWidth\:QCPLineEnding}
{\xe \v QCPLineEnding\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPLineEnding::setWidth (double width)}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v style\:QCPLineEnding}
{\xe \v QCPLineEnding\:style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EndingStyle} QCPLineEnding::style () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:QCPLineEnding}
{\xe \v QCPLineEnding\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLineEnding::width () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mInverted\:QCPLineEnding}
{\xe \v QCPLineEnding\:mInverted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPLineEnding::mInverted{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLength\:QCPLineEnding}
{\xe \v QCPLineEnding\:mLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLineEnding::mLength{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mStyle\:QCPLineEnding}
{\xe \v QCPLineEnding\:mStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EndingStyle} QCPLineEnding::mStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWidth\:QCPLineEnding}
{\xe \v QCPLineEnding\:mWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPLineEnding::mWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPMarginGroup Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPMarginGroup}
{\xe \v QCPMarginGroup}
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPMarginGroup:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_margin_group.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} ({\b QCustomPlot} *parentPlot)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPMarginGroup} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLayoutElement} * > {\b elements} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEmpty} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b commonMargin} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addChild} ({\b QCP::MarginSide} side, {\b QCPLayoutElement} *element)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeChild} ({\b QCP::MarginSide} side, {\b QCPLayoutElement} *element)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, QList< {\b QCPLayoutElement} * > > {\b mChildren}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayoutElement}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPMarginGroup\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:QCPMarginGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPMarginGroup::QCPMarginGroup ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPMarginGroup\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:~QCPMarginGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPMarginGroup::~QCPMarginGroup (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addChild\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:addChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPMarginGroup::addChild ({\b QCP::MarginSide} side, {\b QCPLayoutElement} * element){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPMarginGroup::clear ()}}
\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v commonMargin\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:commonMargin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPMarginGroup::commonMargin ({\b QCP::MarginSide} side) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elements\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPLayoutElement} * > QCPMarginGroup::elements ({\b QCP::MarginSide} side) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isEmpty\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:isEmpty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPMarginGroup::isEmpty () const}}
\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeChild\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:removeChild}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPMarginGroup::removeChild ({\b QCP::MarginSide} side, {\b QCPLayoutElement} * element){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLayoutElement\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:QCPLayoutElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLayoutElement}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mChildren\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:mChildren}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QHash<{\b QCP::MarginSide}, QList<{\b QCPLayoutElement}*> > QCPMarginGroup::mChildren{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentPlot\:QCPMarginGroup}
{\xe \v QCPMarginGroup\:mParentPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCustomPlot}* QCPMarginGroup::mParentPlot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPaintBufferPixmap Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap}
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPaintBufferPixmap:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_paint_buffer_pixmap.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPaintBufferPixmap} (const QSize &{\b size}, double {\b devicePixelRatio})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPaintBufferPixmap} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPainter} * {\b startPainting} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} (const QColor &color) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPaintBuffer}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPaintBuffer} (const QSize &{\b size}, double {\b devicePixelRatio})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPaintBuffer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b invalidated} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b devicePixelRatio} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (const QSize &{\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInvalidated} (bool {\b invalidated}=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDevicePixelRatio} (double ratio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b donePainting} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reallocateBuffer} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mBuffer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPaintBuffer}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mDevicePixelRatio}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mInvalidated}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPaintBufferPixmap\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:QCPPaintBufferPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPaintBufferPixmap::QCPPaintBufferPixmap (const QSize & size, double devicePixelRatio){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPPaintBufferPixmap\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:~QCPPaintBufferPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPPaintBufferPixmap::~QCPPaintBufferPixmap (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clear\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPaintBufferPixmap::clear (const QColor & color){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPaintBuffer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPaintBufferPixmap::draw ({\b QCPPainter} * painter) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPaintBuffer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v reallocateBuffer\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:reallocateBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPaintBufferPixmap::reallocateBuffer (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPaintBuffer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v startPainting\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:startPainting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPPainter} * QCPPaintBufferPixmap::startPainting (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPaintBuffer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBuffer\:QCPPaintBufferPixmap}
{\xe \v QCPPaintBufferPixmap\:mBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPPaintBufferPixmap::mBuffer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPainter Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPainter}
{\xe \v QCPPainter}
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPainter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_painter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PainterMode} \{ {\b pmDefault} = 0x00
, {\b pmVectorized} = 0x01
, {\b pmNoCaching} = 0x02
, {\b pmNonCosmetic} = 0x04
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPainter} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPainter} (QPaintDevice *device)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasing} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PainterModes {\b modes} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasing} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMode} ({\b PainterMode} mode, bool enabled=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setModes} (PainterModes {\b modes})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b begin} (QPaintDevice *device)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (Qt::PenStyle penStyle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawLine} (const QLineF &line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawLine} (const QPointF &p1, const QPointF &p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b save} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b restore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b makeNonCosmetic} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PainterModes {\b mModes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mIsAntialiasing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QStack< bool > {\b mAntialiasingStack}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v PainterMode\:QCPPainter}
{\xe \v QCPPainter\:PainterMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPainter::PainterMode}}}
\par
{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines special modes the painter can operate in. They disable or enable certain subsets of features/fixes/workarounds, depending on whether they are wanted on the respective output device. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v pmDefault\:QCPPainter}
{\xe \v QCPPainter\:pmDefault}
{\qr pmDefault{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x00}  Default mode for painting on screen devices \par
}\cell }{\row }
{\xe \v pmVectorized\:QCPPainter}
{\xe \v QCPPainter\:pmVectorized}
{\qr pmVectorized{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x01}  Mode for vectorized painting (e.g. PDF export). For example, this prevents some antialiasing fixes. \par
}\cell }{\row }
{\xe \v pmNoCaching\:QCPPainter}
{\xe \v QCPPainter\:pmNoCaching}
{\qr pmNoCaching{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x02}  Mode for all sorts of exports (e.g. PNG, PDF,...). For example, this prevents using cached pixmap labels \par
}\cell }{\row }
{\xe \v pmNonCosmetic\:QCPPainter}
{\xe \v QCPPainter\:pmNonCosmetic}
{\qr pmNonCosmetic{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x04}  Turns pen widths 0 to 1, i.e. disables cosmetic pens. (A cosmetic pen is always drawn with width 1 pixel in the vector image/pdf viewer, independent of zoom.) \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPainter\:QCPPainter}
{\xe \v QCPPainter\:QCPPainter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPainter::QCPPainter ()}}
\par
{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPPainter\:QCPPainter}
{\xe \v QCPPainter\:QCPPainter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPainter::QCPPainter (QPaintDevice * device){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v antialiasing\:QCPPainter}
{\xe \v QCPPainter\:antialiasing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPainter::antialiasing () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v begin\:QCPPainter}
{\xe \v QCPPainter\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPainter::begin (QPaintDevice * device)}}
\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLine\:QCPPainter}
{\xe \v QCPPainter\:drawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::drawLine (const QLineF & line)}}
\par
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLine\:QCPPainter}
{\xe \v QCPPainter\:drawLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::drawLine (const QPointF & p1, const QPointF & p2){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v makeNonCosmetic\:QCPPainter}
{\xe \v QCPPainter\:makeNonCosmetic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::makeNonCosmetic ()}}
\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v modes\:QCPPainter}
{\xe \v QCPPainter\:modes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PainterModes QCPPainter::modes () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v restore\:QCPPainter}
{\xe \v QCPPainter\:restore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::restore ()}}
\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v save\:QCPPainter}
{\xe \v QCPPainter\:save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::save ()}}
\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasing\:QCPPainter}
{\xe \v QCPPainter\:setAntialiasing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::setAntialiasing (bool enabled)}}
\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMode\:QCPPainter}
{\xe \v QCPPainter\:setMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::setMode ({\b PainterMode} mode, bool enabled = {\f2 true})}}
\par
{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setModes\:QCPPainter}
{\xe \v QCPPainter\:setModes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::setModes (PainterModes modes)}}
\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPPainter}
{\xe \v QCPPainter\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::setPen (const QColor & color)}}
\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPPainter}
{\xe \v QCPPainter\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPPainter}
{\xe \v QCPPainter\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPainter::setPen (Qt::PenStyle penStyle)}}
\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAntialiasingStack\:QCPPainter}
{\xe \v QCPPainter\:mAntialiasingStack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QStack<bool> QCPPainter::mAntialiasingStack{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mIsAntialiasing\:QCPPainter}
{\xe \v QCPPainter\:mIsAntialiasing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPainter::mIsAntialiasing{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mModes\:QCPPainter}
{\xe \v QCPPainter\:mModes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PainterModes QCPPainter::mModes{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPlottableInterface1D Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D}
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines an abstract interface for one-dimensional plottables. }}\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPlottableInterface1D:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_plottable_interface1_d.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines an abstract interface for one-dimensional plottables. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class contains only pure virtual methods which define a common interface to the data of one-dimensional plottables.\par
For example, it is implemented by the template class {\b QCPAbstractPlottable1D} (the preferred base class for one-dimensional plottables). So if you use that template class as base class of your one-dimensional plottable, you won't have to care about implementing the 1d interface yourself.\par
If your plottable doesn't derive from {\b QCPAbstractPlottable1D} but still wants to provide a 1d interface (e.g. like {\b QCPErrorBars} does), you should inherit from both {\b QCPAbstractPlottable} and {\b QCPPlottableInterface1D} and accordingly reimplement the pure virtual methods of the 1d interface, matching your data container. Also, reimplement {\b QCPAbstractPlottable::interface1D} to return the {\f2 this}  pointer.\par
If you have a {\b QCPAbstractPlottable} pointer, you can check whether it implements this interface by calling {\b QCPAbstractPlottable::interface1D} and testing it for a non-zero return value. If it indeed implements this interface, you may use it to access the plottable's data without needing to know the exact type of the plottable or its data point type. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~QCPPlottableInterface1D\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:~QCPPlottableInterface1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPPlottableInterface1D::~QCPPlottableInterface1D (){\f2 [virtual]}, {\f2 [default]}}}
\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v dataCount\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:dataCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPPlottableInterface1D::dataCount () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the number of data points of the plottable. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataMainKey\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:dataMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPPlottableInterface1D::dataMainKey (int index) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the main key of the data point at the given {\i index} .\par
What the main key is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataMainValue\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:dataMainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPPlottableInterface1D::dataMainValue (int index) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the main value of the data point at the given {\i index} .\par
What the main value is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataPixelPosition\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:dataPixelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QPointF QCPPlottableInterface1D::dataPixelPosition (int index) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the pixel position on the widget surface at which the data point at the given {\i index}  appears.\par
Usually this corresponds to the point of dataMainKey/ dataMainValue, in pixel coordinates. However, depending on the plottable, this might be a different apparent position than just a coord-to-pixel transform of those values. For example, {\b QCPBars} apparent data values can be shifted depending on their stacking, bar grouping or configured base value. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataSortKey\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:dataSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPPlottableInterface1D::dataSortKey (int index) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the sort key of the data point at the given {\i index} .\par
What the sort key is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v dataValueRange\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:dataValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPPlottableInterface1D::dataValueRange (int index) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the value range of the data point at the given {\i index} .\par
What the value range is, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v findBegin\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:findBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPPlottableInterface1D::findBegin (double sortKey, bool expandedRange = {\f2 true}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index of the data point with a (sort-)key that is equal to, just below, or just above {\i sortKey} . If {\i expandedRange}  is true, the data point just below {\i sortKey}  will be considered, otherwise the one just above.\par
This can be used in conjunction with {\b findEnd} to iterate over data points within a given key range, including or excluding the bounding data points that are just beyond the specified range.\par
If {\i expandedRange}  is true but there are no data points below {\i sortKey} , 0 is returned.\par
If the container is empty, returns 0 (in that case, {\b findEnd} will also return 0, so a loop using these methods will not iterate over the index 0).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findEnd}, {\b QCPDataContainer::findBegin} \par
}}}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v findEnd\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:findEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPPlottableInterface1D::findEnd (double sortKey, bool expandedRange = {\f2 true}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the index one after the data point with a (sort-)key that is equal to, just above, or just below {\i sortKey} . If {\i expandedRange}  is true, the data point just above {\i sortKey}  will be considered, otherwise the one just below.\par
This can be used in conjunction with {\b findBegin} to iterate over data points within a given key range, including the bounding data points that are just below and above the specified range.\par
If {\i expandedRange}  is true but there are no data points above {\i sortKey} , the index just above the highest data point is returned.\par
If the container is empty, returns 0.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b findBegin}, {\b QCPDataContainer::findEnd} \par
}}}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTestRect\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:selectTestRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPDataSelection} QCPPlottableInterface1D::selectTestRect (const QRectF & rect, bool onlySelectable) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a data selection containing all the data points of this plottable which are contained (or hit by) {\i rect} . This is used mainly in the selection rect interaction for data selection (data selection mechanism).\par
If {\i onlySelectable}  is true, an empty {\b QCPDataSelection} is returned if this plottable is not selectable (i.e. if {\b QCPAbstractPlottable::setSelectable} is {\b QCP::stNone}).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\i rect}  must be a normalized rect (positive or zero width and height). This is especially important when using the rect of {\b QCPSelectionRect::accepted}, which is not necessarily normalized. Use {\f2 QRect::normalized()}  when passing a rect which might not be normalized. \par
}}}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPFinancial} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPStatisticalBox} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v sortKeyIsMainKey\:QCPPlottableInterface1D}
{\xe \v QCPPlottableInterface1D\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool QCPPlottableInterface1D::sortKeyIsMainKey () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns whether the sort key ({\b dataSortKey}) is identical to the main key ({\b dataMainKey}).\par
What the sort and main keys are, is defined by the plottable's data type. See the {\b QCPDataContainer DataType} documentation for details about this naming convention. \par
}{
Implemented in {\b QCPAbstractPlottable1D< DataType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPBarsData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPCurveData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPFinancialData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPGraphData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQN \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b QCPErrorBars} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPlottableLegendItem Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem}
{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPlottableLegendItem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_plottable_legend_item.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPlottableLegendItem} ({\b QCPLegend} *parent, {\b QCPAbstractPlottable} *{\b plottable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b plottable} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractLegendItem} ({\b QCPLegend} *parent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b parentLegend} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b textColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getIconBorderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getFont} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b mPlottable}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b mParentLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPlottableLegendItem\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:QCPPlottableLegendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPlottableLegendItem::QCPPlottableLegendItem ({\b QCPLegend} * parent, {\b QCPAbstractPlottable} * plottable)}}
\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPlottableLegendItem::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFont\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:getFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPlottableLegendItem::getFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getIconBorderPen\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:getIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPlottableLegendItem::getIconBorderPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTextColor\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPlottableLegendItem::getTextColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumOuterSizeHint\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:minimumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPPlottableLegendItem::minimumOuterSizeHint () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v plottable\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:plottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable} * QCPPlottableLegendItem::plottable (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mPlottable\:QCPPlottableLegendItem}
{\xe \v QCPPlottableLegendItem\:mPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable}* QCPPlottableLegendItem::mPlottable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPolarAxisAngular Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular}
{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPolarAxisAngular:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_polar_axis_angular.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectablePart} \{ {\b spNone} = 0
, {\b spAxis} = 0x001
, {\b spTickLabels} = 0x002
, {\b spAxisLabel} = 0x004
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LabelMode} \{ {\b lmUpright}
, {\b lmRotated}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rangeChanged} (const {\b QCPRange} &newRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rangeChanged} (const {\b QCPRange} &newRange, const {\b QCPRange} &oldRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const QCPPolarAxisAngular::SelectableParts &parts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (const QCPPolarAxisAngular::SelectableParts &parts)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisAngular} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPolarAxisAngular} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b background} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b backgroundBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b backgroundScaled} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b backgroundScaledMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeDrag} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeZoom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rangeZoomFactor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b range} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeReversed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPAxisTicker} > {\b ticker} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ticks} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tickLabels} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLabelPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b tickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b tickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickLabelRotation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LabelMode} {\b tickLabelMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b numberFormat} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberPrecision} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b tickVector} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b tickVectorLabels} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthIn} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthOut} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b subTicks} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthIn} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthOut} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b basePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b tickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b subTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b labelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b labelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b label} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b labelPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectedParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectableParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedTickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedBasePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedSubTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarGrid} * {\b grid} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QBrush &brush)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaled} (bool scaled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaledMode} (Qt::AspectRatioMode mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDrag} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoom} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomFactor} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setRange} (const {\b QCPRange} &{\b range})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (double lower, double upper)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (double position, double {\b size}, Qt::AlignmentFlag alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeLower} (double lower)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeUpper} (double upper)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeReversed} (bool reversed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAngle} (double degrees)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicker} (QSharedPointer< {\b QCPAxisTicker} > {\b ticker})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicks} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabels} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelPadding} (int padding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelRotation} (double degrees)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelMode} ({\b LabelMode} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNumberFormat} (const QString &formatCode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNumberPrecision} (int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLength} (int inside, int outside=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLengthIn} (int inside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLengthOut} (int outside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTicks} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLength} (int inside, int outside=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLengthIn} (int inside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLengthOut} (int outside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBasePen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabel} (const QString &str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelPadding} (int padding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelPosition} (Qt::AlignmentFlag position)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBasePen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedSubTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectableParts} (const QCPPolarAxisAngular::SelectableParts &{\b selectableParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectedParts} (const QCPPolarAxisAngular::SelectableParts &{\b selectedParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=0) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeGraph} ({\b QCPPolarGraph} *graph)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b radialAxisCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisRadial} * {\b radialAxis} (int index=0) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPPolarAxisRadial} * > {\b radialAxes} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisRadial} * {\b addRadialAxis} ({\b QCPPolarAxisRadial} *axis=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeRadialAxis} ({\b QCPPolarAxisRadial} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} * {\b insetLayout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRegion {\b exactClipRegion} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveRange} (double diff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleRange} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleRange} (double factor, double {\b center})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescale} (bool onlyVisiblePlottables=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b coordToAngleRad} (double coord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angleRadToCoord} (double angleRad) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelToCoord} (QPointF pixelPos, double &angleCoord, double &radiusCoord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b coordToPixel} (double angleCoord, double radiusCoord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectablePart} {\b getPartAt} (const QPointF &pos) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b left} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b right} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bottom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b topLeft} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b topRight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b bottomLeft} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b bottomRight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b center} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b radius} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b registerPolarGraph} ({\b QCPPolarGraph} *graph)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawBackground} ({\b QCPPainter} *painter, const QPointF &{\b center}, double {\b radius})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupTickVectors} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getBasePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getSubTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getTickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getTickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getLabelColor} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBackgroundBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mScaledBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mBackgroundScaled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b mBackgroundScaledMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutInset} * {\b mInsetLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeDrag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeZoom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRangeZoomFactor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mAngle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mAngleRad}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectableParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectedParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mBasePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedBasePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mLabelPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mLabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTickLabels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mTickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedTickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mNumberPrecision}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLatin1Char {\b mNumberFormatChar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mNumberBeautifulPowers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mNumberMultiplyCross}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSubTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickLengthIn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickLengthOut}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSubTickLengthIn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSubTickLengthOut}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSubTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedSubTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeReversed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b mCenter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRadius}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPPolarAxisRadial} * > {\b mRadialAxes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarGrid} * {\b mGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPPolarGraph} * > {\b mGraphs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPAxisTicker} > {\b mTicker}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b mTickVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b mTickVectorLabels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b mTickVectorCosSin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b mSubTickVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b mSubTickVectorCosSin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mDragging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mDragAngularStart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPRange} > {\b mDragRadialStart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mNotAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLabelPainterPrivate} {\b mLabelPainter}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarGraph}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LabelMode\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:LabelMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarAxisAngular::LabelMode}}}
\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lmUpright\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:lmUpright}
{\qr lmUpright{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
\cell }{\cell }{\row }
{\xe \v lmRotated\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:lmRotated}
{\qr lmRotated{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
\cell }{\cell }{\row }
}
}
{\xe \v SelectablePart\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:SelectablePart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarAxisAngular::SelectablePart}}}
\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the selectable parts of an axis. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSelectableParts}, {\b setSelectedParts} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v spNone\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:spNone}
{\qr spNone{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
None of the selectable parts. \par
}\cell }{\row }
{\xe \v spAxis\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:spAxis}
{\qr spAxis{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis backbone and tick marks. \par
}\cell }{\row }
{\xe \v spTickLabels\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:spTickLabels}
{\qr spTickLabels{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tick labels (numbers) of this axis (as a whole, not individually) \par
}\cell }{\row }
{\xe \v spAxisLabel\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:spAxisLabel}
{\qr spAxisLabel{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis label. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPolarAxisAngular\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:QCPPolarAxisAngular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPolarAxisAngular::QCPPolarAxisAngular ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPPolarAxisAngular\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:~QCPPolarAxisAngular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPPolarAxisAngular::~QCPPolarAxisAngular (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addRadialAxis\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:addRadialAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisRadial} * QCPPolarAxisAngular::addRadialAxis ({\b QCPPolarAxisRadial} * axis = {\f2 0})}}
\par
{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angle\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::angle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angleRadToCoord\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:angleRadToCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::angleRadToCoord (double angleRad) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v background\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPPolarAxisAngular::background () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundBrush\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:backgroundBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPPolarAxisAngular::backgroundBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundScaled\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:backgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::backgroundScaled () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundScaledMode\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:backgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCPPolarAxisAngular::backgroundScaledMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v basePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:basePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::basePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottom\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::bottom () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomLeft\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:bottomLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPPolarAxisAngular::bottomLeft () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bottomRight\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:bottomRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPPolarAxisAngular::bottomRight () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v center\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPPolarAxisAngular::center () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordToAngleRad\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:coordToAngleRad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::coordToAngleRad (double coord) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordToPixel\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:coordToPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPPolarAxisAngular::coordToPixel (double angleCoord, double radiusCoord) const}}
\par
{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawBackground\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:drawBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::drawBackground ({\b QCPPainter} * painter, const QPointF & center, double radius){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elements\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QList< {\b QCPLayoutElement} * > QCPPolarAxisAngular::elements (bool recursive) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABBO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v exactClipRegion\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:exactClipRegion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRegion QCPPolarAxisAngular::exactClipRegion () const}}
\par
{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getBasePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::getBasePen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::getLabelColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::getLabelFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getPartAt\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getPartAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectablePart} QCPPolarAxisAngular::getPartAt (const QPointF & pos) const}}
\par
{\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::getSubTickPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::getTickLabelColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::getTickLabelFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:getTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::getTickPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v grid\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarGrid} * QCPPolarAxisAngular::grid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::height () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insetLayout\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:insetLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutInset} * QCPPolarAxisAngular::insetLayout () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarAxisAngular::label () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:labelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::labelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:labelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::labelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelPadding\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:labelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::labelPadding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v left\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::left () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMoveEvent\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v moveRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:moveRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::moveRange (double diff)}}
\par
{\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberFormat\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:numberFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarAxisAngular::numberFormat () const}}
\par
{\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberPrecision\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:numberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::numberPrecision () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelToCoord\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:pixelToCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::pixelToCoord (QPointF pixelPos, double & angleCoord, double & radiusCoord) const}}
\par
{\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialAxes\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:radialAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPPolarAxisRadial} * > QCPPolarAxisAngular::radialAxes () const}}
\par
{\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialAxis\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:radialAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisRadial} * QCPPolarAxisAngular::radialAxis (int index = {\f2 0}) const}}
\par
{\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialAxisCount\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:radialAxisCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::radialAxisCount () const}}
\par
{\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radius\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:radius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::radius () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v range\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} QCPPolarAxisAngular::range () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeChanged\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::rangeChanged (const {\b QCPRange} & newRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeChanged\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::rangeChanged (const {\b QCPRange} & newRange, const {\b QCPRange} & oldRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeDrag\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::rangeDrag () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeReversed\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::rangeReversed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoom\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::rangeZoom () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoomFactor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::rangeZoomFactor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerPolarGraph\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:registerPolarGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::registerPolarGraph ({\b QCPPolarGraph} * graph){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeGraph\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:removeGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::removeGraph ({\b QCPPolarGraph} * graph)}}
\par
{\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeRadialAxis\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:removeRadialAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::removeRadialAxis ({\b QCPPolarAxisRadial} * axis)}}
\par
{\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescale\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:rescale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::rescale (bool onlyVisiblePlottables = {\f2 false})}}
\par
{\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v right\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::right () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:scaleRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::scaleRange (double factor)}}
\par
{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:scaleRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::scaleRange (double factor, double center)}}
\par
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::selectableChanged (const QCPPolarAxisAngular::SelectableParts & parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableParts\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisAngular::selectableParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBasePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::selectedBasePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::selectedLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::selectedLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedParts\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisAngular::selectedParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedSubTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::selectedSubTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::selectedTickLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::selectedTickLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::selectedTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionCategory\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPPolarAxisAngular::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::selectionChanged (const QCPPolarAxisAngular::SelectableParts & parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPPolarAxisAngular::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 0}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAngle\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setAngle (double degrees)}}
\par
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setBackground (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setBackground (const QPixmap & pm)}}
\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setBackground (const QPixmap & pm, bool scaled, Qt::AspectRatioMode mode = {\f2 Qt::KeepAspectRatioByExpanding})}}
\par
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackgroundScaled\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setBackgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setBackgroundScaled (bool scaled)}}
\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackgroundScaledMode\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setBackgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setBackgroundScaledMode (Qt::AspectRatioMode mode)}}
\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBasePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setBasePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabel\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setLabel (const QString & str)}}
\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelPadding\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setLabelPadding (int padding)}}
\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelPosition\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setLabelPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setLabelPosition (Qt::AlignmentFlag position)}}
\par
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNumberFormat\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setNumberFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setNumberFormat (const QString & formatCode)}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNumberPrecision\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setNumberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setNumberPrecision (int precision)}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisAngular::setRange (const {\b QCPRange} & range)}}
\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRange (double lower, double upper)}}
\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRange (double position, double size, Qt::AlignmentFlag alignment)}}
\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDrag\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRangeDrag (bool enabled)}}
\par
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeLower\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRangeLower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRangeLower (double lower)}}
\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeReversed\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRangeReversed (bool reversed)}}
\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeUpper\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRangeUpper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRangeUpper (double upper)}}
\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoom\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRangeZoom (bool enabled)}}
\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomFactor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setRangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setRangeZoomFactor (double factor)}}
\par
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectableParts\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisAngular::setSelectableParts (const QCPPolarAxisAngular::SelectableParts & selectableParts)}}
\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBasePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedBasePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedParts\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisAngular::setSelectedParts (const QCPPolarAxisAngular::SelectableParts & selectedParts)}}
\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedSubTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedSubTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedTickLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedTickLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSelectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSelectedTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLength\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSubTickLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSubTickLength (int inside, int outside = {\f2 0})}}
\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLengthIn\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSubTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSubTickLengthIn (int inside)}}
\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLengthOut\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSubTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSubTickLengthOut (int outside)}}
\par
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSubTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTicks\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setSubTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setSubTicks (bool show)}}
\par
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicker\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTicker (QSharedPointer< {\b QCPAxisTicker} > ticker)}}
\par
{\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelMode\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLabelMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLabelMode ({\b LabelMode} mode)}}
\par
{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelPadding\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLabelPadding (int padding)}}
\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelRotation\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLabelRotation (double degrees)}}
\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabels\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLabels (bool show)}}
\par
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLength\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLength (int inside, int outside = {\f2 0})}}
\par
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLengthIn\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLengthIn (int inside)}}
\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLengthOut\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickLengthOut (int outside)}}
\par
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicks\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setTicks (bool show)}}
\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupTickVectors\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:setupTickVectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisAngular::setupTickVectors (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSize QCPPolarAxisAngular::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthIn\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:subTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::subTickLengthIn () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthOut\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:subTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::subTickLengthOut () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:subTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::subTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTicks\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:subTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::subTicks () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticker\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:ticker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPAxisTicker} > QCPPolarAxisAngular::ticker () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::tickLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::tickLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelMode\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLabelMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LabelMode} QCPPolarAxisAngular::tickLabelMode () const}}
\par
{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelPadding\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::tickLabelPadding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelRotation\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::tickLabelRotation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabels\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::tickLabels () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthIn\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::tickLengthIn () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthOut\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::tickLengthOut () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::tickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticks\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::ticks () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickVector\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< double > QCPPolarAxisAngular::tickVector () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickVectorLabels\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:tickVectorLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QString > QCPPolarAxisAngular::tickVectorLabels () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v top\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::top () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topLeft\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:topLeft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPPolarAxisAngular::topLeft () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topRight\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:topRight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPPolarAxisAngular::topRight () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v update\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::update ({\b UpdatePhase} phase){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABDH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v wheelEvent\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisAngular::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v width\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::width () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPPolarGraph\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:QCPPolarGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPPolarGraph}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPPolarGrid\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:QCPPolarGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPPolarGrid}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAADragBackup\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPPolarAxisAngular::mAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAngle\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::mAngle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAngleRad\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mAngleRad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::mAngleRad{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundBrush\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mBackgroundBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPPolarAxisAngular::mBackgroundBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundPixmap\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mBackgroundPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPPolarAxisAngular::mBackgroundPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundScaled\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mBackgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mBackgroundScaled{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundScaledMode\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mBackgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCPPolarAxisAngular::mBackgroundScaledMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBasePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::mBasePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mCenter\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPPolarAxisAngular::mCenter{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragAngularStart\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mDragAngularStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPPolarAxisAngular::mDragAngularStart{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragging\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mDragging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mDragging{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragRadialStart\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mDragRadialStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPRange}> QCPPolarAxisAngular::mDragRadialStart{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGraphs\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mGraphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPPolarGraph}*> QCPPolarAxisAngular::mGraphs{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGrid\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarGrid}* QCPPolarAxisAngular::mGrid{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInsetLayout\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mInsetLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutInset}* QCPPolarAxisAngular::mInsetLayout{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabel\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarAxisAngular::mLabel{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::mLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::mLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelPadding\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::mLabelPadding{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelPainter\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mLabelPainter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLabelPainterPrivate} QCPPolarAxisAngular::mLabelPainter{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNotAADragBackup\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mNotAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPPolarAxisAngular::mNotAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberBeautifulPowers\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mNumberBeautifulPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mNumberBeautifulPowers{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberFormatChar\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mNumberFormatChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLatin1Char QCPPolarAxisAngular::mNumberFormatChar{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberMultiplyCross\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mNumberMultiplyCross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mNumberMultiplyCross{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberPrecision\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mNumberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::mNumberPrecision{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadialAxes\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRadialAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPPolarAxisRadial}*> QCPPolarAxisAngular::mRadialAxes{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadius\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::mRadius{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRange\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPPolarAxisAngular::mRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeDrag\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mRangeDrag{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeReversed\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mRangeReversed{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoom\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mRangeZoom{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoomFactor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mRangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisAngular::mRangeZoomFactor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaledBackgroundPixmap\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mScaledBackgroundPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPPolarAxisAngular::mScaledBackgroundPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectableParts\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisAngular::mSelectableParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBasePen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::mSelectedBasePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::mSelectedLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::mSelectedLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedParts\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisAngular::mSelectedParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedSubTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::mSelectedSubTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::mSelectedTickLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::mSelectedTickLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSelectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::mSelectedTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickLengthIn\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSubTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::mSubTickLengthIn{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickLengthOut\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSubTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::mSubTickLengthOut{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::mSubTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTicks\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSubTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mSubTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickVector\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSubTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPPolarAxisAngular::mSubTickVector{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickVectorCosSin\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mSubTickVectorCosSin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QPointF> QCPPolarAxisAngular::mSubTickVectorCosSin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicker\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer<{\b QCPAxisTicker}> QCPPolarAxisAngular::mTicker{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelColor\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisAngular::mTickLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelFont\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisAngular::mTickLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabels\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mTickLabels{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLengthIn\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::mTickLengthIn{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLengthOut\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisAngular::mTickLengthOut{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickPen\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisAngular::mTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicks\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisAngular::mTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVector\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPPolarAxisAngular::mTickVector{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVectorCosSin\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickVectorCosSin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QPointF> QCPPolarAxisAngular::mTickVectorCosSin{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVectorLabels\:QCPPolarAxisAngular}
{\xe \v QCPPolarAxisAngular\:mTickVectorLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QString> QCPPolarAxisAngular::mTickVectorLabels{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPolarAxisRadial Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial}
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPolarAxisRadial:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_polar_axis_radial.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b AngleReference} \{ {\b arAbsolute}
, {\b arAngularAxis}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ScaleType} \{ {\b stLinear}
, {\b stLogarithmic}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SelectablePart} \{ {\b spNone} = 0
, {\b spAxis} = 0x001
, {\b spTickLabels} = 0x002
, {\b spAxisLabel} = 0x004
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LabelMode} \{ {\b lmUpright}
, {\b lmRotated}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rangeChanged} (const {\b QCPRange} &newRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rangeChanged} (const {\b QCPRange} &newRange, const {\b QCPRange} &oldRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleTypeChanged} ({\b QCPPolarAxisRadial::ScaleType} {\b scaleType})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const QCPPolarAxisRadial::SelectableParts &parts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (const QCPPolarAxisRadial::SelectableParts &parts)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisRadial} ({\b QCPPolarAxisAngular} *parent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPolarAxisRadial} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeDrag} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeZoom} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rangeZoomFactor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisAngular} * {\b angularAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScaleType} {\b scaleType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b range} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rangeReversed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AngleReference} {\b angleReference} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPAxisTicker} > {\b ticker} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ticks} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tickLabels} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLabelPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b tickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b tickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tickLabelRotation} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LabelMode} {\b tickLabelMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b numberFormat} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberPrecision} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b tickVector} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b subTickVector} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b tickVectorLabels} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthIn} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tickLengthOut} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b subTicks} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthIn} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b subTickLengthOut} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b basePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b tickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b subTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b labelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b labelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b label} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b labelPadding} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectedParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b selectableParts} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedTickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedBasePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b selectedSubTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeDrag} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoom} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeZoomFactor} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setScaleType} ({\b QCPPolarAxisRadial::ScaleType} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setRange} (const {\b QCPRange} &{\b range})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (double lower, double upper)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} (double position, double size, Qt::AlignmentFlag alignment)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeLower} (double lower)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeUpper} (double upper)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRangeReversed} (bool reversed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAngle} (double degrees)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAngleReference} ({\b AngleReference} reference)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicker} (QSharedPointer< {\b QCPAxisTicker} > {\b ticker})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTicks} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabels} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelPadding} (int padding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelRotation} (double degrees)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLabelMode} ({\b LabelMode} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNumberFormat} (const QString &formatCode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNumberPrecision} (int precision)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLength} (int inside, int outside=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLengthIn} (int inside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickLengthOut} (int outside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTicks} (bool show)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLength} (int inside, int outside=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLengthIn} (int inside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickLengthOut} (int outside)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBasePen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabel} (const QString &str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLabelPadding} (int padding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedLabelFont} (const QFont &font)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedLabelColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedBasePen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedSubTickPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectableParts} (const QCPPolarAxisRadial::SelectableParts &{\b selectableParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectedParts} (const QCPPolarAxisRadial::SelectableParts &{\b selectedParts})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=0) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b moveRange} (double diff)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleRange} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b scaleRange} (double factor, double center)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescale} (bool onlyVisiblePlottables=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelToCoord} (QPointF pixelPos, double &angleCoord, double &radiusCoord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b coordToPixel} (double angleCoord, double radiusCoord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b coordToRadius} (double coord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b radiusToCoord} (double radius) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SelectablePart} {\b getPartAt} (const QPointF &pos) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateGeometry} (const QPointF &center, double radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupTickVectors} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getBasePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getSubTickPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getTickLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getLabelFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getTickLabelColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getLabelColor} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeDrag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeZoom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRangeZoomFactor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisAngular} * {\b mAngularAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mAngle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AngleReference} {\b mAngleReference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectableParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SelectableParts {\b mSelectedParts}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mBasePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedBasePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mLabelPadding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mLabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTickLabels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mTickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedTickLabelFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTickLabelColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mNumberPrecision}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QLatin1Char {\b mNumberFormatChar}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mNumberBeautifulPowers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mNumberMultiplyCross}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSubTicks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickLengthIn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTickLengthOut}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSubTickLengthIn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSubTickLengthOut}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSubTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mSelectedSubTickPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mRangeReversed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScaleType} {\b mScaleType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b mCenter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mRadius}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPAxisTicker} > {\b mTicker}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b mTickVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QString > {\b mTickVectorLabels}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b mSubTickVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mDragging}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b mDragStartRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mNotAADragBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLabelPainterPrivate} {\b mLabelPainter}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarAxisAngular}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v AngleReference\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:AngleReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarAxisRadial::AngleReference}}}
\par
{\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the reference of the angle at which a radial axis is tilted ({\b setAngle}). \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v arAbsolute\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:arAbsolute}
{\qr arAbsolute{\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis tilt is given in absolute degrees. The zero is to the right and positive angles are measured counter-clockwise. \par
}\cell }{\row }
{\xe \v arAngularAxis\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:arAngularAxis}
{\qr arAngularAxis{\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis tilt is measured in the angular coordinate system given by the parent angular axis. \par
}\cell }{\row }
}
}
{\xe \v LabelMode\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:LabelMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarAxisRadial::LabelMode}}}
\par
{\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lmUpright\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:lmUpright}
{\qr lmUpright{\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
\cell }{\cell }{\row }
{\xe \v lmRotated\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:lmRotated}
{\qr lmRotated{\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
\cell }{\cell }{\row }
}
}
{\xe \v ScaleType\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:ScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarAxisRadial::ScaleType}}}
\par
{\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the scale of an axis. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setScaleType} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v stLinear\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:stLinear}
{\qr stLinear{\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Linear scaling. \par
}\cell }{\row }
{\xe \v stLogarithmic\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:stLogarithmic}
{\qr stLogarithmic{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Logarithmic scaling with correspondingly transformed axis coordinates (possibly also {\b setTicker} to a {\b QCPAxisTickerLog} instance). \par
}\cell }{\row }
}
}
{\xe \v SelectablePart\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:SelectablePart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarAxisRadial::SelectablePart}}}
\par
{\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the selectable parts of an axis. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setSelectableParts}, {\b setSelectedParts} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v spNone\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:spNone}
{\qr spNone{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
None of the selectable parts. \par
}\cell }{\row }
{\xe \v spAxis\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:spAxis}
{\qr spAxis{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis backbone and tick marks. \par
}\cell }{\row }
{\xe \v spTickLabels\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:spTickLabels}
{\qr spTickLabels{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tick labels (numbers) of this axis (as a whole, not individually) \par
}\cell }{\row }
{\xe \v spAxisLabel\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:spAxisLabel}
{\qr spAxisLabel{\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The axis label. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPolarAxisRadial\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:QCPPolarAxisRadial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPolarAxisRadial::QCPPolarAxisRadial ({\b QCPPolarAxisAngular} * parent){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPPolarAxisRadial\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:~QCPPolarAxisRadial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPPolarAxisRadial::~QCPPolarAxisRadial (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v angle\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::angle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angleReference\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:angleReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AngleReference} QCPPolarAxisRadial::angleReference () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angularAxis\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:angularAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisAngular} * QCPPolarAxisRadial::angularAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v basePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:basePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::basePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordToPixel\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:coordToPixel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPPolarAxisRadial::coordToPixel (double angleCoord, double radiusCoord) const}}
\par
{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordToRadius\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:coordToRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::coordToRadius (double coord) const}}
\par
{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getBasePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::getBasePen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::getLabelColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::getLabelFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getPartAt\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getPartAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SelectablePart} QCPPolarAxisRadial::getPartAt (const QPointF & pos) const}}
\par
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getSubTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::getSubTickPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::getTickLabelColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::getTickLabelFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:getTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::getTickPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarAxisRadial::label () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:labelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::labelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:labelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::labelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelPadding\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:labelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::labelPadding () const}}
\par
{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMoveEvent\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::mouseMoveEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v moveRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:moveRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::moveRange (double diff)}}
\par
{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberFormat\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:numberFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarAxisRadial::numberFormat () const}}
\par
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberPrecision\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:numberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::numberPrecision () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelToCoord\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:pixelToCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::pixelToCoord (QPointF pixelPos, double & angleCoord, double & radiusCoord) const}}
\par
{\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radiusToCoord\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:radiusToCoord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::radiusToCoord (double radius) const}}
\par
{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v range\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} QCPPolarAxisRadial::range () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeChanged\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::rangeChanged (const {\b QCPRange} & newRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeChanged\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rangeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::rangeChanged (const {\b QCPRange} & newRange, const {\b QCPRange} & oldRange){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeDrag\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::rangeDrag () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeReversed\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::rangeReversed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoom\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::rangeZoom () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rangeZoomFactor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::rangeZoomFactor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescale\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:rescale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::rescale (bool onlyVisiblePlottables = {\f2 false})}}
\par
{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:scaleRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::scaleRange (double factor)}}
\par
{\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:scaleRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::scaleRange (double factor, double center)}}
\par
{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleType\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:scaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScaleType} QCPPolarAxisRadial::scaleType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaleTypeChanged\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:scaleTypeChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::scaleTypeChanged ({\b QCPPolarAxisRadial::ScaleType} scaleType){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::selectableChanged (const QCPPolarAxisRadial::SelectableParts & parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableParts\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisRadial::selectableParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedBasePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::selectedBasePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::selectedLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::selectedLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedParts\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisRadial::selectedParts () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedSubTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::selectedSubTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::selectedTickLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::selectedTickLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::selectedTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionCategory\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPPolarAxisRadial::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::selectionChanged (const QCPPolarAxisRadial::SelectableParts & parts){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPPolarAxisRadial::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 0}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAngle\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setAngle (double degrees)}}
\par
{\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAngleReference\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setAngleReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setAngleReference ({\b AngleReference} reference)}}
\par
{\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBasePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setBasePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabel\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setLabel (const QString & str)}}
\par
{\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLabelPadding\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setLabelPadding (int padding)}}
\par
{\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNumberFormat\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setNumberFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setNumberFormat (const QString & formatCode)}}
\par
{\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNumberPrecision\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setNumberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setNumberPrecision (int precision)}}
\par
{\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisRadial::setRange (const {\b QCPRange} & range)}}
\par
{\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRange (double lower, double upper)}}
\par
{\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRange (double position, double size, Qt::AlignmentFlag alignment)}}
\par
{\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeDrag\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRangeDrag (bool enabled)}}
\par
{\bkmkstart AAAAAAADYL}
{\bkmkend AAAAAAADYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeLower\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRangeLower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRangeLower (double lower)}}
\par
{\bkmkstart AAAAAAADYM}
{\bkmkend AAAAAAADYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeReversed\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRangeReversed (bool reversed)}}
\par
{\bkmkstart AAAAAAADYN}
{\bkmkend AAAAAAADYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeUpper\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRangeUpper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRangeUpper (double upper)}}
\par
{\bkmkstart AAAAAAADYO}
{\bkmkend AAAAAAADYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoom\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRangeZoom (bool enabled)}}
\par
{\bkmkstart AAAAAAADYP}
{\bkmkend AAAAAAADYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRangeZoomFactor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setRangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setRangeZoomFactor (double factor)}}
\par
{\bkmkstart AAAAAAADYQ}
{\bkmkend AAAAAAADYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScaleType\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisRadial::setScaleType ({\b QCPPolarAxisRadial::ScaleType} type)}}
\par
{\bkmkstart AAAAAAADYR}
{\bkmkend AAAAAAADYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectableParts\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisRadial::setSelectableParts (const QCPPolarAxisRadial::SelectableParts & selectableParts)}}
\par
{\bkmkstart AAAAAAADYS}
{\bkmkend AAAAAAADYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedBasePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedBasePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADYT}
{\bkmkend AAAAAAADYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADYU}
{\bkmkend AAAAAAADYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADYV}
{\bkmkend AAAAAAADYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedParts\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarAxisRadial::setSelectedParts (const QCPPolarAxisRadial::SelectableParts & selectedParts)}}
\par
{\bkmkstart AAAAAAADYW}
{\bkmkend AAAAAAADYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedSubTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedSubTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADYX}
{\bkmkend AAAAAAADYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedTickLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADYY}
{\bkmkend AAAAAAADYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedTickLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADYZ}
{\bkmkend AAAAAAADYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSelectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSelectedTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADZA}
{\bkmkend AAAAAAADZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLength\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSubTickLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSubTickLength (int inside, int outside = {\f2 0})}}
\par
{\bkmkstart AAAAAAADZB}
{\bkmkend AAAAAAADZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLengthIn\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSubTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSubTickLengthIn (int inside)}}
\par
{\bkmkstart AAAAAAADZC}
{\bkmkend AAAAAAADZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickLengthOut\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSubTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSubTickLengthOut (int outside)}}
\par
{\bkmkstart AAAAAAADZD}
{\bkmkend AAAAAAADZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSubTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADZE}
{\bkmkend AAAAAAADZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubTicks\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setSubTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setSubTicks (bool show)}}
\par
{\bkmkstart AAAAAAADZF}
{\bkmkend AAAAAAADZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicker\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTicker (QSharedPointer< {\b QCPAxisTicker} > ticker)}}
\par
{\bkmkstart AAAAAAADZG}
{\bkmkend AAAAAAADZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLabelColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAADZH}
{\bkmkend AAAAAAADZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLabelFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAADZI}
{\bkmkend AAAAAAADZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelMode\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLabelMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLabelMode ({\b LabelMode} mode)}}
\par
{\bkmkstart AAAAAAADZJ}
{\bkmkend AAAAAAADZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelPadding\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLabelPadding (int padding)}}
\par
{\bkmkstart AAAAAAADZK}
{\bkmkend AAAAAAADZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabelRotation\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLabelRotation (double degrees)}}
\par
{\bkmkstart AAAAAAADZL}
{\bkmkend AAAAAAADZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLabels\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLabels (bool show)}}
\par
{\bkmkstart AAAAAAADZM}
{\bkmkend AAAAAAADZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLength\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLength (int inside, int outside = {\f2 0})}}
\par
{\bkmkstart AAAAAAADZN}
{\bkmkend AAAAAAADZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLengthIn\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLengthIn (int inside)}}
\par
{\bkmkstart AAAAAAADZO}
{\bkmkend AAAAAAADZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickLengthOut\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickLengthOut (int outside)}}
\par
{\bkmkstart AAAAAAADZP}
{\bkmkend AAAAAAADZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTickPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAADZQ}
{\bkmkend AAAAAAADZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTicks\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setTicks (bool show)}}
\par
{\bkmkstart AAAAAAADZR}
{\bkmkend AAAAAAADZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupTickVectors\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:setupTickVectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::setupTickVectors (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADZS}
{\bkmkend AAAAAAADZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthIn\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:subTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::subTickLengthIn () const}}
\par
{\bkmkstart AAAAAAADZT}
{\bkmkend AAAAAAADZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickLengthOut\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:subTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::subTickLengthOut () const}}
\par
{\bkmkstart AAAAAAADZU}
{\bkmkend AAAAAAADZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:subTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::subTickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADZV}
{\bkmkend AAAAAAADZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTicks\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:subTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::subTicks () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADZW}
{\bkmkend AAAAAAADZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subTickVector\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:subTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< double > QCPPolarAxisRadial::subTickVector () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADZX}
{\bkmkend AAAAAAADZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticker\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:ticker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPAxisTicker} > QCPPolarAxisRadial::ticker () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADZY}
{\bkmkend AAAAAAADZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::tickLabelColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADZZ}
{\bkmkend AAAAAAADZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::tickLabelFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAA}
{\bkmkend AAAAAAAEAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelMode\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLabelMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LabelMode} QCPPolarAxisRadial::tickLabelMode () const}}
\par
{\bkmkstart AAAAAAAEAB}
{\bkmkend AAAAAAAEAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelPadding\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::tickLabelPadding () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAC}
{\bkmkend AAAAAAAEAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabelRotation\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLabelRotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::tickLabelRotation () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAD}
{\bkmkend AAAAAAAEAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLabels\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::tickLabels () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAE}
{\bkmkend AAAAAAAEAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthIn\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::tickLengthIn () const}}
\par
{\bkmkstart AAAAAAAEAF}
{\bkmkend AAAAAAAEAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickLengthOut\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::tickLengthOut () const}}
\par
{\bkmkstart AAAAAAAEAG}
{\bkmkend AAAAAAAEAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::tickPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAH}
{\bkmkend AAAAAAAEAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ticks\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:ticks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::ticks () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAI}
{\bkmkend AAAAAAAEAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickVector\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< double > QCPPolarAxisRadial::tickVector () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAJ}
{\bkmkend AAAAAAAEAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tickVectorLabels\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:tickVectorLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QString > QCPPolarAxisRadial::tickVectorLabels () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEAK}
{\bkmkend AAAAAAAEAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateGeometry\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:updateGeometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarAxisRadial::updateGeometry (const QPointF & center, double radius){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAL}
{\bkmkend AAAAAAAEAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wheelEvent\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarAxisRadial::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPPolarAxisAngular\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:QCPPolarAxisAngular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPPolarAxisAngular}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEAM}
{\bkmkend AAAAAAAEAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEAN}
{\bkmkend AAAAAAAEAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAADragBackup\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPPolarAxisRadial::mAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAO}
{\bkmkend AAAAAAAEAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAngle\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::mAngle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAP}
{\bkmkend AAAAAAAEAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAngleReference\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mAngleReference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AngleReference} QCPPolarAxisRadial::mAngleReference{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAQ}
{\bkmkend AAAAAAAEAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAngularAxis\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mAngularAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisAngular}* QCPPolarAxisRadial::mAngularAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAR}
{\bkmkend AAAAAAAEAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBasePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::mBasePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAS}
{\bkmkend AAAAAAAEAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mCenter\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPPolarAxisRadial::mCenter{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAT}
{\bkmkend AAAAAAAEAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragging\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mDragging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mDragging{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAU}
{\bkmkend AAAAAAAEAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDragStartRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mDragStartRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPPolarAxisRadial::mDragStartRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAV}
{\bkmkend AAAAAAAEAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabel\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarAxisRadial::mLabel{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAW}
{\bkmkend AAAAAAAEAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::mLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAX}
{\bkmkend AAAAAAAEAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::mLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAY}
{\bkmkend AAAAAAAEAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelPadding\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mLabelPadding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::mLabelPadding{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEAZ}
{\bkmkend AAAAAAAEAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLabelPainter\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mLabelPainter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLabelPainterPrivate} QCPPolarAxisRadial::mLabelPainter{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBA}
{\bkmkend AAAAAAAEBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNotAADragBackup\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mNotAADragBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCPPolarAxisRadial::mNotAADragBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBB}
{\bkmkend AAAAAAAEBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberBeautifulPowers\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mNumberBeautifulPowers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mNumberBeautifulPowers{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBC}
{\bkmkend AAAAAAAEBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberFormatChar\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mNumberFormatChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QLatin1Char QCPPolarAxisRadial::mNumberFormatChar{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBD}
{\bkmkend AAAAAAAEBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberMultiplyCross\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mNumberMultiplyCross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mNumberMultiplyCross{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBE}
{\bkmkend AAAAAAAEBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNumberPrecision\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mNumberPrecision}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::mNumberPrecision{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBF}
{\bkmkend AAAAAAAEBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadius\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::mRadius{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBG}
{\bkmkend AAAAAAAEBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRange\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPPolarAxisRadial::mRange{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeDrag\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mRangeDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mRangeDrag{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeReversed\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mRangeReversed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mRangeReversed{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoom\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mRangeZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mRangeZoom{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRangeZoomFactor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mRangeZoomFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarAxisRadial::mRangeZoomFactor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaleType\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mScaleType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScaleType} QCPPolarAxisRadial::mScaleType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBM}
{\bkmkend AAAAAAAEBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectableParts\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectableParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisRadial::mSelectableParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBN}
{\bkmkend AAAAAAAEBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedBasePen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedBasePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::mSelectedBasePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBO}
{\bkmkend AAAAAAAEBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::mSelectedLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBP}
{\bkmkend AAAAAAAEBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::mSelectedLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBQ}
{\bkmkend AAAAAAAEBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedParts\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedParts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SelectableParts QCPPolarAxisRadial::mSelectedParts{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBR}
{\bkmkend AAAAAAAEBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedSubTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::mSelectedSubTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBS}
{\bkmkend AAAAAAAEBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::mSelectedTickLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBT}
{\bkmkend AAAAAAAEBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::mSelectedTickLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBU}
{\bkmkend AAAAAAAEBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSelectedTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::mSelectedTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBV}
{\bkmkend AAAAAAAEBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickLengthIn\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSubTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::mSubTickLengthIn{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBW}
{\bkmkend AAAAAAAEBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickLengthOut\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSubTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::mSubTickLengthOut{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBX}
{\bkmkend AAAAAAAEBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSubTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::mSubTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBY}
{\bkmkend AAAAAAAEBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTicks\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSubTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mSubTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEBZ}
{\bkmkend AAAAAAAEBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubTickVector\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mSubTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPPolarAxisRadial::mSubTickVector{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECA}
{\bkmkend AAAAAAAECA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicker\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTicker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer<{\b QCPAxisTicker}> QCPPolarAxisRadial::mTicker{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECB}
{\bkmkend AAAAAAAECB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelColor\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickLabelColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarAxisRadial::mTickLabelColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECC}
{\bkmkend AAAAAAAECC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabelFont\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickLabelFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarAxisRadial::mTickLabelFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECD}
{\bkmkend AAAAAAAECD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLabels\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mTickLabels{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECE}
{\bkmkend AAAAAAAECE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLengthIn\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickLengthIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::mTickLengthIn{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECF}
{\bkmkend AAAAAAAECF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickLengthOut\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickLengthOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPPolarAxisRadial::mTickLengthOut{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECG}
{\bkmkend AAAAAAAECG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickPen\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarAxisRadial::mTickPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECH}
{\bkmkend AAAAAAAECH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTicks\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarAxisRadial::mTicks{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECI}
{\bkmkend AAAAAAAECI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVector\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPPolarAxisRadial::mTickVector{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECJ}
{\bkmkend AAAAAAAECJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTickVectorLabels\:QCPPolarAxisRadial}
{\xe \v QCPPolarAxisRadial\:mTickVectorLabels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<QString> QCPPolarAxisRadial::mTickVectorLabels{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECK}
{\bkmkend AAAAAAAECK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPolarGraph Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPolarGraph}
{\xe \v QCPPolarGraph}
{\bkmkstart AAAAAAAECL}
{\bkmkend AAAAAAAECL}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPolarGraph:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_polar_graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LineStyle} \{ {\b lsNone}
, {\b lsLine}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarGraph} ({\b QCPPolarAxisAngular} *{\b keyAxis}, {\b QCPPolarAxisRadial} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPolarGraph} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b periodic} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisAngular} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisRadial} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPGraphDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineStyle} {\b lineStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b scatterStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPeriodic} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPPolarAxisAngular} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPPolarAxisRadial} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPGraphDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLineStyle} ({\b LineStyle} ls)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterStyle} (const {\b QCPScatterStyle} &style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &keys, const QVector< double > &values, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double key, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=0) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLinePlot} ({\b QCPPainter} *painter, const QVector< QPointF > &lines) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawFill} ({\b QCPPainter} *painter, QVector< QPointF > *lines) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawScatterPlot} ({\b QCPPainter} *painter, const QVector< QPointF > &scatters, const {\b QCPScatterStyle} &style) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointDistance} (const QPointF &pixelPoint, {\b QCPGraphDataContainer::const_iterator} &closestData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVisibleDataBounds} ({\b QCPGraphDataContainer::const_iterator} &begin, {\b QCPGraphDataContainer::const_iterator} &end, const {\b QCPDataRange} &rangeRestriction) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLines} (QVector< QPointF > *lines, const {\b QCPDataRange} &dataRange) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getScatters} (QVector< QPointF > *scatters, const {\b QCPDataRange} &dataRange) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getOptimizedLineData} (QVector< {\b QCPGraphData} > *lineData, const {\b QCPGraphDataContainer::const_iterator} &begin, const {\b QCPGraphDataContainer::const_iterator} &end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getOptimizedScatterData} (QVector< {\b QCPGraphData} > *scatterData, {\b QCPGraphDataContainer::const_iterator} begin, {\b QCPGraphDataContainer::const_iterator} end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QPointF > {\b dataToLines} (const QVector< {\b QCPGraphData} > &{\b data}) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPGraphDataContainer} > {\b mDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineStyle} {\b mLineStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b mScatterStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mPeriodic}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPPolarAxisAngular} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPPolarAxisRadial} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarLegendItem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LineStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:LineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarGraph::LineStyle}}}
\par
{\bkmkstart AAAAAAAECM}
{\bkmkend AAAAAAAECM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how the graph's line is represented visually in the plot. The line is drawn with the current pen of the graph ({\b setPen}). \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b setLineStyle} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v lsNone\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:lsNone}
{\qr lsNone{\bkmkstart AAAAAAAECN}
{\bkmkend AAAAAAAECN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data points are not connected with any lines (e.g. data only represented with symbols according to the scatter style, see {\b setScatterStyle}) \par
}\cell }{\row }
{\xe \v lsLine\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:lsLine}
{\qr lsLine{\bkmkstart AAAAAAAECO}
{\bkmkend AAAAAAAECO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data points are connected by a straight line \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPolarGraph\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:QCPPolarGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPolarGraph::QCPPolarGraph ({\b QCPPolarAxisAngular} * keyAxis, {\b QCPPolarAxisRadial} * valueAxis)}}
\par
{\bkmkstart AAAAAAAECP}
{\bkmkend AAAAAAAECP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPPolarGraph\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:~QCPPolarGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPPolarGraph::~QCPPolarGraph (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAECQ}
{\bkmkend AAAAAAAECQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addData\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::addData (const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAAECR}
{\bkmkend AAAAAAAECR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::addData (double key, double value)}}
\par
{\bkmkstart AAAAAAAECS}
{\bkmkend AAAAAAAECS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addToLegend\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:addToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::addToLegend ()}}
\par
{\bkmkstart AAAAAAAECT}
{\bkmkend AAAAAAAECT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addToLegend\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:addToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::addToLegend ({\b QCPLegend} * legend)}}
\par
{\bkmkstart AAAAAAAECU}
{\bkmkend AAAAAAAECU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedFill\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:antialiasedFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::antialiasedFill () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAECV}
{\bkmkend AAAAAAAECV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedScatters\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:antialiasedScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::antialiasedScatters () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAECW}
{\bkmkend AAAAAAAECW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v applyFillAntialiasingHint\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:applyFillAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::applyFillAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECX}
{\bkmkend AAAAAAAECX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyScattersAntialiasingHint\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:applyScattersAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::applyScattersAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAECY}
{\bkmkend AAAAAAAECY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brush\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPPolarGraph::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAECZ}
{\bkmkend AAAAAAAECZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clipRect\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:clipRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QRect QCPPolarGraph::clipRect () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v coordsToPixels\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:coordsToPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QPointF QCPPolarGraph::coordsToPixels (double key, double value) const}}
\par
{\bkmkstart AAAAAAAEDA}
{\bkmkend AAAAAAAEDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v coordsToPixels\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:coordsToPixels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::coordsToPixels (double key, double value, double & x, double & y) const}}
\par
{\bkmkstart AAAAAAAEDB}
{\bkmkend AAAAAAAEDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPGraphDataContainer} > QCPPolarGraph::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEDC}
{\bkmkend AAAAAAAEDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataCount\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:dataCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int QCPPolarGraph::dataCount () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDD}
{\bkmkend AAAAAAAEDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dataToLines\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:dataToLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QPointF > QCPPolarGraph::dataToLines (const QVector< {\b QCPGraphData} > & data) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDE}
{\bkmkend AAAAAAAEDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawFill\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:drawFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::drawFill ({\b QCPPainter} * painter, QVector< QPointF > * lines) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDF}
{\bkmkend AAAAAAAEDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLegendIcon\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDG}
{\bkmkend AAAAAAAEDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawLinePlot\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:drawLinePlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::drawLinePlot ({\b QCPPainter} * painter, const QVector< QPointF > & lines) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDH}
{\bkmkend AAAAAAAEDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawPolyline\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:drawPolyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::drawPolyline ({\b QCPPainter} * painter, const QVector< QPointF > & lineData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDI}
{\bkmkend AAAAAAAEDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawScatterPlot\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:drawScatterPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::drawScatterPlot ({\b QCPPainter} * painter, const QVector< QPointF > & scatters, const {\b QCPScatterStyle} & style) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDJ}
{\bkmkend AAAAAAAEDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getDataSegments\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getDataSegments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::getDataSegments (QList< {\b QCPDataRange} > & selectedSegments, QList< {\b QCPDataRange} > & unselectedSegments) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDK}
{\bkmkend AAAAAAAEDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPPolarGraph::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDL}
{\bkmkend AAAAAAAEDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLines\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::getLines (QVector< QPointF > * lines, const {\b QCPDataRange} & dataRange) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDM}
{\bkmkend AAAAAAAEDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getOptimizedLineData\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getOptimizedLineData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::getOptimizedLineData (QVector< {\b QCPGraphData} > * lineData, const {\b QCPGraphDataContainer::const_iterator} & begin, const {\b QCPGraphDataContainer::const_iterator} & end) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDN}
{\bkmkend AAAAAAAEDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getOptimizedScatterData\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getOptimizedScatterData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::getOptimizedScatterData (QVector< {\b QCPGraphData} > * scatterData, {\b QCPGraphDataContainer::const_iterator} begin, {\b QCPGraphDataContainer::const_iterator} end) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDO}
{\bkmkend AAAAAAAEDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getScatters\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::getScatters (QVector< QPointF > * scatters, const {\b QCPDataRange} & dataRange) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDP}
{\bkmkend AAAAAAAEDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getValueRange\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPPolarGraph::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDQ}
{\bkmkend AAAAAAAEDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getVisibleDataBounds\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:getVisibleDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::getVisibleDataBounds ({\b QCPGraphDataContainer::const_iterator} & begin, {\b QCPGraphDataContainer::const_iterator} & end, const {\b QCPDataRange} & rangeRestriction) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEDR}
{\bkmkend AAAAAAAEDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v interface1D\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:interface1D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPPlottableInterface1D} * QCPPolarGraph::interface1D (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEDS}
{\bkmkend AAAAAAAEDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keyAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:keyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisAngular} * QCPPolarGraph::keyAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEDT}
{\bkmkend AAAAAAAEDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:lineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineStyle} QCPPolarGraph::lineStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEDU}
{\bkmkend AAAAAAAEDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarGraph::name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEDV}
{\bkmkend AAAAAAAEDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGraph::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEDW}
{\bkmkend AAAAAAAEDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v periodic\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:periodic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::periodic () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEDX}
{\bkmkend AAAAAAAEDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelsToCoords\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:pixelsToCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::pixelsToCoords (const QPointF & pixelPos, double & key, double & value) const}}
\par
{\bkmkstart AAAAAAAEDY}
{\bkmkend AAAAAAAEDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixelsToCoords\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:pixelsToCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::pixelsToCoords (double x, double y, double & key, double & value) const}}
\par
{\bkmkstart AAAAAAAEDZ}
{\bkmkend AAAAAAAEDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pointDistance\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:pointDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPPolarGraph::pointDistance (const QPointF & pixelPoint, {\b QCPGraphDataContainer::const_iterator} & closestData) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEEA}
{\bkmkend AAAAAAAEEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeFromLegend\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:removeFromLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::removeFromLegend () const}}
\par
{\bkmkstart AAAAAAAEEB}
{\bkmkend AAAAAAAEEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeFromLegend\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:removeFromLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::removeFromLegend ({\b QCPLegend} * legend) const}}
\par
{\bkmkstart AAAAAAAEEC}
{\bkmkend AAAAAAAEEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleAxes\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:rescaleAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::rescaleAxes (bool onlyEnlarge = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAEED}
{\bkmkend AAAAAAAEED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleKeyAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:rescaleKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::rescaleKeyAxis (bool onlyEnlarge = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAEEE}
{\bkmkend AAAAAAAEEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleValueAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:rescaleValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::rescaleValueAxis (bool onlyEnlarge = {\f2 false}, bool inKeyRange = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAEEF}
{\bkmkend AAAAAAAEEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scatterStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:scatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPPolarGraph::scatterStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEEG}
{\bkmkend AAAAAAAEEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectable\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCP::SelectionType} QCPPolarGraph::selectable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEEH}
{\bkmkend AAAAAAAEEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::selectableChanged ({\b QCP::SelectionType} selectable){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEEI}
{\bkmkend AAAAAAAEEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selected\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::selected () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEEJ}
{\bkmkend AAAAAAAEEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGraph::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selection\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPPolarGraph::selection () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEEK}
{\bkmkend AAAAAAAEEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionCategory\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectionCategory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCP::Interaction} QCPPolarGraph::selectionCategory () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::selectionChanged (bool selected){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEEL}
{\bkmkend AAAAAAAEEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionChanged\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::selectionChanged (const {\b QCPDataSelection} & selection){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEEM}
{\bkmkend AAAAAAAEEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPPolarGraph::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 0}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setAntialiasedFill\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setAntialiasedFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setAntialiasedFill (bool enabled)}}
\par
{\bkmkstart AAAAAAAEEN}
{\bkmkend AAAAAAAEEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedScatters\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setAntialiasedScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setAntialiasedScatters (bool enabled)}}
\par
{\bkmkstart AAAAAAAEEO}
{\bkmkend AAAAAAAEEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrush\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAEEP}
{\bkmkend AAAAAAAEEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setData (const QVector< double > & keys, const QVector< double > & values, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAAEEQ}
{\bkmkend AAAAAAAEEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setData (QSharedPointer< {\b QCPGraphDataContainer} > data)}}
\par
{\bkmkstart AAAAAAAEER}
{\bkmkend AAAAAAAEER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setKeyAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setKeyAxis ({\b QCPPolarAxisAngular} * axis)}}
\par
{\bkmkstart AAAAAAAEES}
{\bkmkend AAAAAAAEES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setLineStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setLineStyle ({\b LineStyle} ls)}}
\par
{\bkmkstart AAAAAAAEET}
{\bkmkend AAAAAAAEET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setName\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setName (const QString & name)}}
\par
{\bkmkstart AAAAAAAEEU}
{\bkmkend AAAAAAAEEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEEV}
{\bkmkend AAAAAAAEEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPeriodic\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setPeriodic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setPeriodic (bool enabled)}}
\par
{\bkmkstart AAAAAAAEEW}
{\bkmkend AAAAAAAEEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScatterStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setScatterStyle (const {\b QCPScatterStyle} & style)}}
\par
{\bkmkstart AAAAAAAEEX}
{\bkmkend AAAAAAAEEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectable\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarGraph::setSelectable ({\b QCP::SelectionType} selectable)}}
\par
{\bkmkstart AAAAAAAEEY}
{\bkmkend AAAAAAAEEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelection\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPPolarGraph::setSelection ({\b QCPDataSelection} selection)}}
\par
{\bkmkstart AAAAAAAEEZ}
{\bkmkend AAAAAAAEEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setValueAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:setValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGraph::setValueAxis ({\b QCPPolarAxisRadial} * axis)}}
\par
{\bkmkstart AAAAAAAEFA}
{\bkmkend AAAAAAAEFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:valueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisRadial} * QCPPolarGraph::valueAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEFB}
{\bkmkend AAAAAAAEFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPPolarLegendItem\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:QCPPolarLegendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPPolarLegendItem}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEFC}
{\bkmkend AAAAAAAEFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAntialiasedFill\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mAntialiasedFill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::mAntialiasedFill{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFD}
{\bkmkend AAAAAAAEFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAntialiasedScatters\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mAntialiasedScatters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::mAntialiasedScatters{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFE}
{\bkmkend AAAAAAAEFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPPolarGraph::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFF}
{\bkmkend AAAAAAAEFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mDataContainer\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer<{\b QCPGraphDataContainer}> QCPPolarGraph::mDataContainer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFG}
{\bkmkend AAAAAAAEFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mKeyAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mKeyAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPPolarAxisAngular}> QCPPolarGraph::mKeyAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFH}
{\bkmkend AAAAAAAEFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLineStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mLineStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineStyle} QCPPolarGraph::mLineStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFI}
{\bkmkend AAAAAAAEFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mName\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPPolarGraph::mName{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFJ}
{\bkmkend AAAAAAAEFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGraph::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFK}
{\bkmkend AAAAAAAEFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPeriodic\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mPeriodic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGraph::mPeriodic{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFL}
{\bkmkend AAAAAAAEFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScatterStyle\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPPolarGraph::mScatterStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFM}
{\bkmkend AAAAAAAEFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectable\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCP::SelectionType} QCPPolarGraph::mSelectable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFN}
{\bkmkend AAAAAAAEFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelection\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPDataSelection} QCPPolarGraph::mSelection{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFO}
{\bkmkend AAAAAAAEFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mValueAxis\:QCPPolarGraph}
{\xe \v QCPPolarGraph\:mValueAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPPolarAxisRadial}> QCPPolarGraph::mValueAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEFP}
{\bkmkend AAAAAAAEFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPolarGrid Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPolarGrid}
{\xe \v QCPPolarGrid}
{\bkmkstart AAAAAAAEFQ}
{\bkmkend AAAAAAAEFQ}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPolarGrid:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_polar_grid.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GridType} \{ {\b gtAngular} = 0x01
, {\b gtRadial} = 0x02
, {\b gtAll} = 0xFF
, {\b gtNone} = 0x00
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarGrid} ({\b QCPPolarAxisAngular} *parentAxis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisRadial} * {\b radialAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GridTypes {\b type} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GridTypes {\b subGridType} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedSubGrid} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedZeroLine} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b angularPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b angularSubGridPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b radialPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b radialSubGridPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b radialZeroLinePen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRadialAxis} ({\b QCPPolarAxisRadial} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setType} (GridTypes {\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSubGridType} (GridTypes {\b type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedSubGrid} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedZeroLine} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAngularPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAngularSubGridPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRadialPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRadialSubGridPen} (const QPen &pen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRadialZeroLinePen} (const QPen &pen)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawRadialGrid} ({\b QCPPainter} *painter, const QPointF &center, const QVector< double > &coords, const QPen &pen, const QPen &zeroPen=Qt::NoPen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawAngularGrid} ({\b QCPPainter} *painter, const QPointF &center, double radius, const QVector< QPointF > &ticksCosSin, const QPen &pen)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GridTypes {\b mType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GridTypes {\b mSubGridType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedSubGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedZeroLine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mAngularPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mAngularSubGridPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mRadialPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mRadialSubGridPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mRadialZeroLinePen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarAxisAngular} * {\b mParentAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPPolarAxisRadial} > {\b mRadialAxis}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v GridType\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:GridType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPPolarGrid::GridType}}}
\par
{\bkmkstart AAAAAAAEFR}
{\bkmkend AAAAAAAEFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v gtAngular\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:gtAngular}
{\qr gtAngular{\bkmkstart AAAAAAAEFS}
{\bkmkend AAAAAAAEFS}
\cell }{\cell }{\row }
{\xe \v gtRadial\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:gtRadial}
{\qr gtRadial{\bkmkstart AAAAAAAEFT}
{\bkmkend AAAAAAAEFT}
\cell }{\cell }{\row }
{\xe \v gtAll\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:gtAll}
{\qr gtAll{\bkmkstart AAAAAAAEFU}
{\bkmkend AAAAAAAEFU}
\cell }{\cell }{\row }
{\xe \v gtNone\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:gtNone}
{\qr gtNone{\bkmkstart AAAAAAAEFV}
{\bkmkend AAAAAAAEFV}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPolarGrid\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:QCPPolarGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPolarGrid::QCPPolarGrid ({\b QCPPolarAxisAngular} * parentAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEFW}
{\bkmkend AAAAAAAEFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v angularPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:angularPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::angularPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEFX}
{\bkmkend AAAAAAAEFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angularSubGridPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:angularSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::angularSubGridPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEFY}
{\bkmkend AAAAAAAEFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedSubGrid\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:antialiasedSubGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGrid::antialiasedSubGrid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEFZ}
{\bkmkend AAAAAAAEFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedZeroLine\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:antialiasedZeroLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGrid::antialiasedZeroLine () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGA}
{\bkmkend AAAAAAAEGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGrid::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v draw\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarGrid::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawAngularGrid\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:drawAngularGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::drawAngularGrid ({\b QCPPainter} * painter, const QPointF & center, double radius, const QVector< QPointF > & ticksCosSin, const QPen & pen){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGB}
{\bkmkend AAAAAAAEGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawRadialGrid\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:drawRadialGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::drawRadialGrid ({\b QCPPainter} * painter, const QPointF & center, const QVector< double > & coords, const QPen & pen, const QPen & zeroPen = {\f2 Qt::NoPen}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGC}
{\bkmkend AAAAAAAEGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialAxis\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:radialAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisRadial} * QCPPolarGrid::radialAxis () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGD}
{\bkmkend AAAAAAAEGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:radialPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::radialPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGE}
{\bkmkend AAAAAAAEGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialSubGridPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:radialSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::radialSubGridPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGF}
{\bkmkend AAAAAAAEGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v radialZeroLinePen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:radialZeroLinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::radialZeroLinePen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGG}
{\bkmkend AAAAAAAEGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAngularPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setAngularPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setAngularPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEGH}
{\bkmkend AAAAAAAEGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAngularSubGridPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setAngularSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setAngularSubGridPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEGI}
{\bkmkend AAAAAAAEGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedSubGrid\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setAntialiasedSubGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setAntialiasedSubGrid (bool enabled)}}
\par
{\bkmkstart AAAAAAAEGJ}
{\bkmkend AAAAAAAEGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedZeroLine\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setAntialiasedZeroLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setAntialiasedZeroLine (bool enabled)}}
\par
{\bkmkstart AAAAAAAEGK}
{\bkmkend AAAAAAAEGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRadialAxis\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setRadialAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setRadialAxis ({\b QCPPolarAxisRadial} * axis)}}
\par
{\bkmkstart AAAAAAAEGL}
{\bkmkend AAAAAAAEGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRadialPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setRadialPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setRadialPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEGM}
{\bkmkend AAAAAAAEGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRadialSubGridPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setRadialSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setRadialSubGridPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEGN}
{\bkmkend AAAAAAAEGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRadialZeroLinePen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setRadialZeroLinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setRadialZeroLinePen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEGO}
{\bkmkend AAAAAAAEGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSubGridType\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setSubGridType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setSubGridType (GridTypes type)}}
\par
{\bkmkstart AAAAAAAEGP}
{\bkmkend AAAAAAAEGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setType\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:setType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPPolarGrid::setType (GridTypes type)}}
\par
{\bkmkstart AAAAAAAEGQ}
{\bkmkend AAAAAAAEGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subGridType\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:subGridType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GridTypes QCPPolarGrid::subGridType () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGR}
{\bkmkend AAAAAAAEGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GridTypes QCPPolarGrid::type () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEGS}
{\bkmkend AAAAAAAEGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mAngularPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mAngularPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::mAngularPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGT}
{\bkmkend AAAAAAAEGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAngularSubGridPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mAngularSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::mAngularSubGridPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGU}
{\bkmkend AAAAAAAEGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAntialiasedSubGrid\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mAntialiasedSubGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGrid::mAntialiasedSubGrid{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGV}
{\bkmkend AAAAAAAEGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAntialiasedZeroLine\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mAntialiasedZeroLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPPolarGrid::mAntialiasedZeroLine{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGW}
{\bkmkend AAAAAAAEGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mParentAxis\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mParentAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarAxisAngular}* QCPPolarGrid::mParentAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGX}
{\bkmkend AAAAAAAEGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadialAxis\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mRadialAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPPolarAxisRadial}> QCPPolarGrid::mRadialAxis{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGY}
{\bkmkend AAAAAAAEGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadialPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mRadialPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::mRadialPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEGZ}
{\bkmkend AAAAAAAEGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadialSubGridPen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mRadialSubGridPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::mRadialSubGridPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHA}
{\bkmkend AAAAAAAEHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRadialZeroLinePen\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mRadialZeroLinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarGrid::mRadialZeroLinePen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHB}
{\bkmkend AAAAAAAEHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSubGridType\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mSubGridType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GridTypes QCPPolarGrid::mSubGridType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHC}
{\bkmkend AAAAAAAEHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mType\:QCPPolarGrid}
{\xe \v QCPPolarGrid\:mType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GridTypes QCPPolarGrid::mType{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHD}
{\bkmkend AAAAAAAEHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPPolarLegendItem Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem}
{\bkmkstart AAAAAAAEHE}
{\bkmkend AAAAAAAEHE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPPolarLegendItem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_polar_legend_item.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarLegendItem} ({\b QCPLegend} *parent, {\b QCPPolarGraph} *graph)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarGraph} * {\b polarGraph} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractLegendItem} ({\b QCPLegend} *parent)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b parentLegend} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b textColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b getIconBorderPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b getTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b getFont} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPPolarGraph} * {\b mPolarGraph}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b mParentLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractLegendItem}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPPolarLegendItem\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:QCPPolarLegendItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPPolarLegendItem::QCPPolarLegendItem ({\b QCPLegend} * parent, {\b QCPPolarGraph} * graph)}}
\par
{\bkmkstart AAAAAAAEHF}
{\bkmkend AAAAAAAEHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v draw\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPPolarLegendItem::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractLegendItem} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFont\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:getFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPPolarLegendItem::getFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHG}
{\bkmkend AAAAAAAEHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getIconBorderPen\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:getIconBorderPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPPolarLegendItem::getIconBorderPen () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHH}
{\bkmkend AAAAAAAEHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTextColor\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:getTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPPolarLegendItem::getTextColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHI}
{\bkmkend AAAAAAAEHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumOuterSizeHint\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:minimumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPPolarLegendItem::minimumOuterSizeHint () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v polarGraph\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:polarGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarGraph} * QCPPolarLegendItem::polarGraph (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHJ}
{\bkmkend AAAAAAAEHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mPolarGraph\:QCPPolarLegendItem}
{\xe \v QCPPolarLegendItem\:mPolarGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPPolarGraph}* QCPPolarLegendItem::mPolarGraph{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEHK}
{\bkmkend AAAAAAAEHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPRange Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPRange}
{\xe \v QCPRange}
{\bkmkstart AAAAAAAEHL}
{\bkmkend AAAAAAAEHL}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} (double {\b lower}, double {\b upper})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b QCPRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator!=} (const {\b QCPRange} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} & {\b operator+=} (const double &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} & {\b operator-=} (const double &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} & {\b operator*=} (const double &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} & {\b operator/=} (const double &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b center} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b normalize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b expand} (const {\b QCPRange} &otherRange)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b expand} (double includeCoord)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b expanded} (const {\b QCPRange} &otherRange) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b expanded} (double includeCoord) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b bounded} (double lowerBound, double upperBound) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b sanitizedForLogScale} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b sanitizedForLinScale} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b contains} (double value) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b validRange} (double {\b lower}, double {\b upper})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b validRange} (const {\b QCPRange} &range)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lower}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b upper}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b minRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const double {\b maxRange}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator+} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator+} (double value, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator-} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator*} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator*} (double value, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator/} (const {\b QCPRange} &range, double value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Related Symbols\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(Note that these are not member symbols.) \par
}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDebug {\b operator<<} (QDebug d, const {\b QCPRange} &range)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPRange\:QCPRange}
{\xe \v QCPRange\:QCPRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPRange::QCPRange ()}}
\par
{\bkmkstart AAAAAAAEHM}
{\bkmkend AAAAAAAEHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPRange\:QCPRange}
{\xe \v QCPRange\:QCPRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPRange::QCPRange (double lower, double upper)}}
\par
{\bkmkstart AAAAAAAEHN}
{\bkmkend AAAAAAAEHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v bounded\:QCPRange}
{\xe \v QCPRange\:bounded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPRange::bounded (double lowerBound, double upperBound) const}}
\par
{\bkmkstart AAAAAAAEHO}
{\bkmkend AAAAAAAEHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v center\:QCPRange}
{\xe \v QCPRange\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPRange::center () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHP}
{\bkmkend AAAAAAAEHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v contains\:QCPRange}
{\xe \v QCPRange\:contains}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPRange::contains (double value) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHQ}
{\bkmkend AAAAAAAEHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expand\:QCPRange}
{\xe \v QCPRange\:expand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPRange::expand (const {\b QCPRange} & otherRange)}}
\par
{\bkmkstart AAAAAAAEHR}
{\bkmkend AAAAAAAEHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expand\:QCPRange}
{\xe \v QCPRange\:expand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPRange::expand (double includeCoord)}}
\par
{\bkmkstart AAAAAAAEHS}
{\bkmkend AAAAAAAEHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expanded\:QCPRange}
{\xe \v QCPRange\:expanded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPRange::expanded (const {\b QCPRange} & otherRange) const}}
\par
{\bkmkstart AAAAAAAEHT}
{\bkmkend AAAAAAAEHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expanded\:QCPRange}
{\xe \v QCPRange\:expanded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPRange::expanded (double includeCoord) const}}
\par
{\bkmkstart AAAAAAAEHU}
{\bkmkend AAAAAAAEHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v normalize\:QCPRange}
{\xe \v QCPRange\:normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPRange::normalize (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHV}
{\bkmkend AAAAAAAEHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator!=\:QCPRange}
{\xe \v QCPRange\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPRange::operator!= (const {\b QCPRange} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHW}
{\bkmkend AAAAAAAEHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*=\:QCPRange}
{\xe \v QCPRange\:operator*=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} & QCPRange::operator*= (const double & value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHX}
{\bkmkend AAAAAAAEHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+=\:QCPRange}
{\xe \v QCPRange\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} & QCPRange::operator+= (const double & value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHY}
{\bkmkend AAAAAAAEHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-=\:QCPRange}
{\xe \v QCPRange\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} & QCPRange::operator-= (const double & value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEHZ}
{\bkmkend AAAAAAAEHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator/=\:QCPRange}
{\xe \v QCPRange\:operator/=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} & QCPRange::operator/= (const double & value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEIA}
{\bkmkend AAAAAAAEIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator==\:QCPRange}
{\xe \v QCPRange\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPRange::operator== (const {\b QCPRange} & other) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEIB}
{\bkmkend AAAAAAAEIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sanitizedForLinScale\:QCPRange}
{\xe \v QCPRange\:sanitizedForLinScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPRange::sanitizedForLinScale () const}}
\par
{\bkmkstart AAAAAAAEIC}
{\bkmkend AAAAAAAEIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sanitizedForLogScale\:QCPRange}
{\xe \v QCPRange\:sanitizedForLogScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPRange::sanitizedForLogScale () const}}
\par
{\bkmkstart AAAAAAAEID}
{\bkmkend AAAAAAAEID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPRange}
{\xe \v QCPRange\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPRange::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEIE}
{\bkmkend AAAAAAAEIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v validRange\:QCPRange}
{\xe \v QCPRange\:validRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPRange::validRange (const {\b QCPRange} & range){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIF}
{\bkmkend AAAAAAAEIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v validRange\:QCPRange}
{\xe \v QCPRange\:validRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPRange::validRange (double lower, double upper){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIG}
{\bkmkend AAAAAAAEIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator*\:QCPRange}
{\xe \v QCPRange\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator* (const {\b QCPRange} & range, double value){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEIH}
{\bkmkend AAAAAAAEIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplies both boundaries of the range by {\i value} . \par
}}
{\xe \v operator*\:QCPRange}
{\xe \v QCPRange\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator* (double value, const {\b QCPRange} & range){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEII}
{\bkmkend AAAAAAAEII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplies both boundaries of the range by {\i value} . \par
}}
{\xe \v operator+\:QCPRange}
{\xe \v QCPRange\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator+ (const {\b QCPRange} & range, double value){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEIJ}
{\bkmkend AAAAAAAEIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds {\i value}  to both boundaries of the range. \par
}}
{\xe \v operator+\:QCPRange}
{\xe \v QCPRange\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator+ (double value, const {\b QCPRange} & range){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEIK}
{\bkmkend AAAAAAAEIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds {\i value}  to both boundaries of the range. \par
}}
{\xe \v operator-\:QCPRange}
{\xe \v QCPRange\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator- (const {\b QCPRange} & range, double value){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEIL}
{\bkmkend AAAAAAAEIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtracts {\i value}  from both boundaries of the range. \par
}}
{\xe \v operator/\:QCPRange}
{\xe \v QCPRange\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator/ (const {\b QCPRange} & range, double value){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEIM}
{\bkmkend AAAAAAAEIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Divides both boundaries of the range by {\i value} . \par
}}
{\xe \v operator<<\:QCPRange}
{\xe \v QCPRange\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDebug operator<< (QDebug d, const {\b QCPRange} & range){\f2 [related]}}}
\par
{\bkmkstart AAAAAAAEIN}
{\bkmkend AAAAAAAEIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints {\i range}  in a human readable format to the qDebug output. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v lower\:QCPRange}
{\xe \v QCPRange\:lower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPRange::lower}}
\par
{\bkmkstart AAAAAAAEIO}
{\bkmkend AAAAAAAEIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxRange\:QCPRange}
{\xe \v QCPRange\:maxRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double QCPRange::maxRange{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIP}
{\bkmkend AAAAAAAEIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minRange\:QCPRange}
{\xe \v QCPRange\:minRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double QCPRange::minRange{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEIQ}
{\bkmkend AAAAAAAEIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v upper\:QCPRange}
{\xe \v QCPRange\:upper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPRange::upper}}
\par
{\bkmkstart AAAAAAAEIR}
{\bkmkend AAAAAAAEIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPScatterStyle Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPScatterStyle}
{\xe \v QCPScatterStyle}
{\bkmkstart AAAAAAAEIS}
{\bkmkend AAAAAAAEIS}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ScatterProperty} \{ {\b spNone} = 0x00
, {\b spPen} = 0x01
, {\b spBrush} = 0x02
, {\b spSize} = 0x04
, {\b spShape} = 0x08
, {\b spAll} = 0xFF
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ScatterShape} \{ {\b ssNone}
, {\b ssDot}
, {\b ssCross}
, {\b ssPlus}
, {\b ssCircle}
, {\b ssDisc}
, {\b ssSquare}
, {\b ssDiamond}
, {\b ssStar}
, {\b ssTriangle}
, {\b ssTriangleInverted}
, {\b ssCrossSquare}
, {\b ssPlusSquare}
, {\b ssCrossCircle}
, {\b ssPlusCircle}
, {\b ssPeace}
, {\b ssPixmap}
, {\b ssCustom}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} ({\b ScatterShape} {\b shape}, double {\b size}=6)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} ({\b ScatterShape} {\b shape}, const QColor &color, double {\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} ({\b ScatterShape} {\b shape}, const QColor &color, const QColor &fill, double {\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} ({\b ScatterShape} {\b shape}, const QPen &{\b pen}, const QBrush &{\b brush}, double {\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} (const QPixmap &{\b pixmap})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} (const QPainterPath &{\b customPath}, const QPen &{\b pen}, const QBrush &{\b brush}=Qt::NoBrush, double {\b size}=6)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b size} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScatterShape} {\b shape} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b pixmap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPainterPath {\b customPath} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFromOther} (const {\b QCPScatterStyle} &other, ScatterProperties properties)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (double {\b size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setShape} ({\b ScatterShape} {\b shape})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPixmap} (const QPixmap &{\b pixmap})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCustomPath} (const QPainterPath &{\b customPath})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isNone} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isPenDefined} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b undefinePen} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyTo} ({\b QCPPainter} *painter, const QPen &defaultPen) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawShape} ({\b QCPPainter} *painter, const QPointF &pos) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawShape} ({\b QCPPainter} *painter, double x, double y) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScatterShape} {\b mShape}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPainterPath {\b mCustomPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mPenDefined}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ScatterProperty\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ScatterProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPScatterStyle::ScatterProperty}}}
\par
{\bkmkstart AAAAAAAEIT}
{\bkmkend AAAAAAAEIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Represents the various properties of a scatter style instance. For example, this enum is used to specify which properties of {\b QCPSelectionDecorator::setScatterStyle} will be used when highlighting selected data points.\par
Specific scatter properties can be transferred between {\b QCPScatterStyle} instances via {\b setFromOther}. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v spNone\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:spNone}
{\qr spNone{\bkmkstart AAAAAAAEIU}
{\bkmkend AAAAAAAEIU}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x00}  None \par
}\cell }{\row }
{\xe \v spPen\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:spPen}
{\qr spPen{\bkmkstart AAAAAAAEIV}
{\bkmkend AAAAAAAEIV}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x01}  The pen property, see {\b setPen} \par
}\cell }{\row }
{\xe \v spBrush\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:spBrush}
{\qr spBrush{\bkmkstart AAAAAAAEIW}
{\bkmkend AAAAAAAEIW}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x02}  The brush property, see {\b setBrush} \par
}\cell }{\row }
{\xe \v spSize\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:spSize}
{\qr spSize{\bkmkstart AAAAAAAEIX}
{\bkmkend AAAAAAAEIX}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x04}  The size property, see {\b setSize} \par
}\cell }{\row }
{\xe \v spShape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:spShape}
{\qr spShape{\bkmkstart AAAAAAAEIY}
{\bkmkend AAAAAAAEIY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0x08}  The shape property, see {\b setShape} \par
}\cell }{\row }
{\xe \v spAll\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:spAll}
{\qr spAll{\bkmkstart AAAAAAAEIZ}
{\bkmkend AAAAAAAEIZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 0xFF}  All properties \par
}\cell }{\row }
}
}
{\xe \v ScatterShape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ScatterShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPScatterStyle::ScatterShape}}}
\par
{\bkmkstart AAAAAAAEJA}
{\bkmkend AAAAAAAEJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines the shape used for scatter points.\par
On plottables/items that draw scatters, the sizes of these visualizations (with exception of {\b ssDot} and {\b ssPixmap}) can be controlled with the {\b setSize} function. Scatters are drawn with the pen and brush specified with {\b setPen} and {\b setBrush}. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ssNone\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssNone}
{\qr ssNone{\bkmkstart AAAAAAAEJB}
{\bkmkend AAAAAAAEJB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
no scatter symbols are drawn (e.g. in {\b QCPGraph}, data only represented with lines) \par
}\cell }{\row }
{\xe \v ssDot\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssDot}
{\qr ssDot{\bkmkstart AAAAAAAEJC}
{\bkmkend AAAAAAAEJC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssDot.png\} a single pixel (use {\b ssDisc} or {\b ssCircle} if you want a round shape with a certain radius) \par
}\cell }{\row }
{\xe \v ssCross\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssCross}
{\qr ssCross{\bkmkstart AAAAAAAEJD}
{\bkmkend AAAAAAAEJD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssCross.png\} a cross \par
}\cell }{\row }
{\xe \v ssPlus\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssPlus}
{\qr ssPlus{\bkmkstart AAAAAAAEJE}
{\bkmkend AAAAAAAEJE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssPlus.png\} a plus \par
}\cell }{\row }
{\xe \v ssCircle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssCircle}
{\qr ssCircle{\bkmkstart AAAAAAAEJF}
{\bkmkend AAAAAAAEJF}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssCircle.png\} a circle \par
}\cell }{\row }
{\xe \v ssDisc\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssDisc}
{\qr ssDisc{\bkmkstart AAAAAAAEJG}
{\bkmkend AAAAAAAEJG}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssDisc.png\} a circle which is filled with the pen's color (not the brush as with ssCircle) \par
}\cell }{\row }
{\xe \v ssSquare\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssSquare}
{\qr ssSquare{\bkmkstart AAAAAAAEJH}
{\bkmkend AAAAAAAEJH}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssSquare.png\} a square \par
}\cell }{\row }
{\xe \v ssDiamond\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssDiamond}
{\qr ssDiamond{\bkmkstart AAAAAAAEJI}
{\bkmkend AAAAAAAEJI}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssDiamond.png\} a diamond \par
}\cell }{\row }
{\xe \v ssStar\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssStar}
{\qr ssStar{\bkmkstart AAAAAAAEJJ}
{\bkmkend AAAAAAAEJJ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssStar.png\} a star with eight arms, i.e. a combination of cross and plus \par
}\cell }{\row }
{\xe \v ssTriangle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssTriangle}
{\qr ssTriangle{\bkmkstart AAAAAAAEJK}
{\bkmkend AAAAAAAEJK}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssTriangle.png\} an equilateral triangle, standing on baseline \par
}\cell }{\row }
{\xe \v ssTriangleInverted\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssTriangleInverted}
{\qr ssTriangleInverted{\bkmkstart AAAAAAAEJL}
{\bkmkend AAAAAAAEJL}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssTriangleInverted.png\} an equilateral triangle, standing on corner \par
}\cell }{\row }
{\xe \v ssCrossSquare\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssCrossSquare}
{\qr ssCrossSquare{\bkmkstart AAAAAAAEJM}
{\bkmkend AAAAAAAEJM}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssCrossSquare.png\} a square with a cross inside \par
}\cell }{\row }
{\xe \v ssPlusSquare\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssPlusSquare}
{\qr ssPlusSquare{\bkmkstart AAAAAAAEJN}
{\bkmkend AAAAAAAEJN}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssPlusSquare.png\} a square with a plus inside \par
}\cell }{\row }
{\xe \v ssCrossCircle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssCrossCircle}
{\qr ssCrossCircle{\bkmkstart AAAAAAAEJO}
{\bkmkend AAAAAAAEJO}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssCrossCircle.png\} a circle with a cross inside \par
}\cell }{\row }
{\xe \v ssPlusCircle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssPlusCircle}
{\qr ssPlusCircle{\bkmkstart AAAAAAAEJP}
{\bkmkend AAAAAAAEJP}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssPlusCircle.png\} a circle with a plus inside \par
}\cell }{\row }
{\xe \v ssPeace\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssPeace}
{\qr ssPeace{\bkmkstart AAAAAAAEJQ}
{\bkmkend AAAAAAAEJQ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\\enumimage\{ssPeace.png\} a circle, with one vertical and two downward diagonal lines \par
}\cell }{\row }
{\xe \v ssPixmap\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssPixmap}
{\qr ssPixmap{\bkmkstart AAAAAAAEJR}
{\bkmkend AAAAAAAEJR}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a custom pixmap specified by {\b setPixmap}, centered on the data point coordinates \par
}\cell }{\row }
{\xe \v ssCustom\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:ssCustom}
{\qr ssCustom{\bkmkstart AAAAAAAEJS}
{\bkmkend AAAAAAAEJS}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
custom painter operations are performed per scatter (As QPainterPath, see {\b setCustomPath}) \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle ()}}
\par
{\bkmkstart AAAAAAAEJT}
{\bkmkend AAAAAAAEJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle ({\b ScatterShape} shape, double size = {\f2 6})}}
\par
{\bkmkstart AAAAAAAEJU}
{\bkmkend AAAAAAAEJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle ({\b ScatterShape} shape, const QColor & color, double size)}}
\par
{\bkmkstart AAAAAAAEJV}
{\bkmkend AAAAAAAEJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle ({\b ScatterShape} shape, const QColor & color, const QColor & fill, double size)}}
\par
{\bkmkstart AAAAAAAEJW}
{\bkmkend AAAAAAAEJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle ({\b ScatterShape} shape, const QPen & pen, const QBrush & brush, double size)}}
\par
{\bkmkstart AAAAAAAEJX}
{\bkmkend AAAAAAAEJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle (const QPixmap & pixmap)}}
\par
{\bkmkstart AAAAAAAEJY}
{\bkmkend AAAAAAAEJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:QCPScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::QCPScatterStyle (const QPainterPath & customPath, const QPen & pen, const QBrush & brush = {\f2 Qt::NoBrush}, double size = {\f2 6})}}
\par
{\bkmkstart AAAAAAAEJZ}
{\bkmkend AAAAAAAEJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyTo\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:applyTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::applyTo ({\b QCPPainter} * painter, const QPen & defaultPen) const}}
\par
{\bkmkstart AAAAAAAEKA}
{\bkmkend AAAAAAAEKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brush\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPScatterStyle::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKB}
{\bkmkend AAAAAAAEKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v customPath\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:customPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPainterPath QCPScatterStyle::customPath () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKC}
{\bkmkend AAAAAAAEKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawShape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:drawShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::drawShape ({\b QCPPainter} * painter, const QPointF & pos) const}}
\par
{\bkmkstart AAAAAAAEKD}
{\bkmkend AAAAAAAEKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawShape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:drawShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::drawShape ({\b QCPPainter} * painter, double x, double y) const}}
\par
{\bkmkstart AAAAAAAEKE}
{\bkmkend AAAAAAAEKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isNone\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:isNone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPScatterStyle::isNone () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKF}
{\bkmkend AAAAAAAEKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isPenDefined\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:isPenDefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPScatterStyle::isPenDefined () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKG}
{\bkmkend AAAAAAAEKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPScatterStyle::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKH}
{\bkmkend AAAAAAAEKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pixmap\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:pixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPScatterStyle::pixmap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKI}
{\bkmkend AAAAAAAEKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrush\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAEKJ}
{\bkmkend AAAAAAAEKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCustomPath\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setCustomPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setCustomPath (const QPainterPath & customPath)}}
\par
{\bkmkstart AAAAAAAEKK}
{\bkmkend AAAAAAAEKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setFromOther\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setFromOther}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setFromOther (const {\b QCPScatterStyle} & other, ScatterProperties properties)}}
\par
{\bkmkstart AAAAAAAEKL}
{\bkmkend AAAAAAAEKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEKM}
{\bkmkend AAAAAAAEKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPixmap\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setPixmap (const QPixmap & pixmap)}}
\par
{\bkmkstart AAAAAAAEKN}
{\bkmkend AAAAAAAEKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setShape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setShape ({\b ScatterShape} shape)}}
\par
{\bkmkstart AAAAAAAEKO}
{\bkmkend AAAAAAAEKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSize\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::setSize (double size)}}
\par
{\bkmkstart AAAAAAAEKP}
{\bkmkend AAAAAAAEKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:shape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScatterShape} QCPScatterStyle::shape () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKQ}
{\bkmkend AAAAAAAEKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPScatterStyle::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEKR}
{\bkmkend AAAAAAAEKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v undefinePen\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:undefinePen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPScatterStyle::undefinePen ()}}
\par
{\bkmkstart AAAAAAAEKS}
{\bkmkend AAAAAAAEKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBrush\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPScatterStyle::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKT}
{\bkmkend AAAAAAAEKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mCustomPath\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mCustomPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPainterPath QCPScatterStyle::mCustomPath{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKU}
{\bkmkend AAAAAAAEKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPScatterStyle::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKV}
{\bkmkend AAAAAAAEKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPenDefined\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mPenDefined}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPScatterStyle::mPenDefined{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKW}
{\bkmkend AAAAAAAEKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPixmap\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCPScatterStyle::mPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKX}
{\bkmkend AAAAAAAEKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mShape\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mShape}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ScatterShape} QCPScatterStyle::mShape{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKY}
{\bkmkend AAAAAAAEKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSize\:QCPScatterStyle}
{\xe \v QCPScatterStyle\:mSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPScatterStyle::mSize{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEKZ}
{\bkmkend AAAAAAAEKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPSelectionDecorator Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator}
{\bkmkstart AAAAAAAELA}
{\bkmkend AAAAAAAELA}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPSelectionDecorator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_selection_decorator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPSelectionDecorator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b scatterStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCPScatterStyle::ScatterProperties {\b usedScatterProperties} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterStyle} (const {\b QCPScatterStyle} &{\b scatterStyle}, QCPScatterStyle::ScatterProperties usedProperties={\b QCPScatterStyle::spPen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsedScatterProperties} (const QCPScatterStyle::ScatterProperties &properties)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyPen} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyBrush} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b getFinalScatterStyle} (const {\b QCPScatterStyle} &unselectedStyle) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b copyFrom} (const {\b QCPSelectionDecorator} *other)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawDecoration} ({\b QCPPainter} *painter, {\b QCPDataSelection} selection)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b registerWithPlottable} ({\b QCPAbstractPlottable} *plottable)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b mScatterStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCPScatterStyle::ScatterProperties {\b mUsedScatterProperties}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b mPlottable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractPlottable}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPSelectionDecorator\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:QCPSelectionDecorator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPSelectionDecorator::QCPSelectionDecorator ()}}
\par
{\bkmkstart AAAAAAAELB}
{\bkmkend AAAAAAAELB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPSelectionDecorator\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:~QCPSelectionDecorator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPSelectionDecorator::~QCPSelectionDecorator (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELC}
{\bkmkend AAAAAAAELC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyBrush\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:applyBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecorator::applyBrush ({\b QCPPainter} * painter) const}}
\par
{\bkmkstart AAAAAAAELD}
{\bkmkend AAAAAAAELD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyPen\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:applyPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecorator::applyPen ({\b QCPPainter} * painter) const}}
\par
{\bkmkstart AAAAAAAELE}
{\bkmkend AAAAAAAELE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v brush\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPSelectionDecorator::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAELF}
{\bkmkend AAAAAAAELF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v copyFrom\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:copyFrom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionDecorator::copyFrom (const {\b QCPSelectionDecorator} * other){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELG}
{\bkmkend AAAAAAAELG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawDecoration\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:drawDecoration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionDecorator::drawDecoration ({\b QCPPainter} * painter, {\b QCPDataSelection} selection){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELH}
{\bkmkend AAAAAAAELH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b QCPSelectionDecoratorBracket} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFinalScatterStyle\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:getFinalScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPSelectionDecorator::getFinalScatterStyle (const {\b QCPScatterStyle} & unselectedStyle) const}}
\par
{\bkmkstart AAAAAAAELJ}
{\bkmkend AAAAAAAELJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPSelectionDecorator::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAELK}
{\bkmkend AAAAAAAELK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerWithPlottable\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:registerWithPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool QCPSelectionDecorator::registerWithPlottable ({\b QCPAbstractPlottable} * plottable){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELL}
{\bkmkend AAAAAAAELL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scatterStyle\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:scatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPSelectionDecorator::scatterStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAELM}
{\bkmkend AAAAAAAELM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrush\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecorator::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAELN}
{\bkmkend AAAAAAAELN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecorator::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAELO}
{\bkmkend AAAAAAAELO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setScatterStyle\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:setScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecorator::setScatterStyle (const {\b QCPScatterStyle} & scatterStyle, QCPScatterStyle::ScatterProperties usedProperties = {\f2 {\b QCPScatterStyle::spPen}})}}
\par
{\bkmkstart AAAAAAAELP}
{\bkmkend AAAAAAAELP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setUsedScatterProperties\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:setUsedScatterProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecorator::setUsedScatterProperties (const QCPScatterStyle::ScatterProperties & properties)}}
\par
{\bkmkstart AAAAAAAELQ}
{\bkmkend AAAAAAAELQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v usedScatterProperties\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:usedScatterProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::ScatterProperties QCPSelectionDecorator::usedScatterProperties () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAELR}
{\bkmkend AAAAAAAELR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAbstractPlottable\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:QCPAbstractPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAbstractPlottable}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAELS}
{\bkmkend AAAAAAAELS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBrush\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPSelectionDecorator::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAELT}
{\bkmkend AAAAAAAELT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPSelectionDecorator::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAELU}
{\bkmkend AAAAAAAELU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPlottable\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:mPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable}* QCPSelectionDecorator::mPlottable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAELV}
{\bkmkend AAAAAAAELV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScatterStyle\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:mScatterStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPSelectionDecorator::mScatterStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAELW}
{\bkmkend AAAAAAAELW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mUsedScatterProperties\:QCPSelectionDecorator}
{\xe \v QCPSelectionDecorator\:mUsedScatterProperties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPScatterStyle::ScatterProperties QCPSelectionDecorator::mUsedScatterProperties{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAELX}
{\bkmkend AAAAAAAELX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPSelectionDecoratorBracket Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket}
{\bkmkstart AAAAAAAELY}
{\bkmkend AAAAAAAELY}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPSelectionDecoratorBracket:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_selection_decorator_bracket.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b BracketStyle} \{ {\b bsSquareBracket}
, {\b bsHalfEllipse}
, {\b bsEllipse}
, {\b bsPlus}
, {\b bsUserStyle}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecoratorBracket} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPSelectionDecoratorBracket} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b bracketPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b bracketBrush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bracketWidth} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bracketHeight} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BracketStyle} {\b bracketStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tangentToData} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tangentAverage} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBracketPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBracketBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBracketWidth} (int width)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBracketHeight} (int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBracketStyle} ({\b BracketStyle} style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTangentToData} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTangentAverage} (int pointCount)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawBracket} ({\b QCPPainter} *painter, int direction) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawDecoration} ({\b QCPPainter} *painter, {\b QCPDataSelection} selection) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPSelectionDecorator}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPSelectionDecorator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b scatterStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCPScatterStyle::ScatterProperties {\b usedScatterProperties} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScatterStyle} (const {\b QCPScatterStyle} &{\b scatterStyle}, QCPScatterStyle::ScatterProperties usedProperties={\b QCPScatterStyle::spPen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUsedScatterProperties} (const QCPScatterStyle::ScatterProperties &properties)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyPen} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyBrush} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b getFinalScatterStyle} (const {\b QCPScatterStyle} &unselectedStyle) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b copyFrom} (const {\b QCPSelectionDecorator} *other)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTangentAngle} (const {\b QCPPlottableInterface1D} *interface1d, int dataIndex, int direction) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b getPixelCoordinates} (const {\b QCPPlottableInterface1D} *interface1d, int dataIndex) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPSelectionDecorator}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b registerWithPlottable} ({\b QCPAbstractPlottable} *plottable)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mBracketPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBracketBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mBracketWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mBracketHeight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BracketStyle} {\b mBracketStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mTangentToData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTangentAverage}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPSelectionDecorator}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b mScatterStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCPScatterStyle::ScatterProperties {\b mUsedScatterProperties}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b mPlottable}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v BracketStyle\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:BracketStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCPSelectionDecoratorBracket::BracketStyle}}}
\par
{\bkmkstart AAAAAAAELZ}
{\bkmkend AAAAAAAELZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines which shape is drawn at the boundaries of selected data ranges.\par
Some of the bracket styles further allow specifying a height and/or width, see {\b setBracketHeight} and {\b setBracketWidth}. \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v bsSquareBracket\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bsSquareBracket}
{\qr bsSquareBracket{\bkmkstart AAAAAAAEMA}
{\bkmkend AAAAAAAEMA}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A square bracket is drawn. \par
}\cell }{\row }
{\xe \v bsHalfEllipse\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bsHalfEllipse}
{\qr bsHalfEllipse{\bkmkstart AAAAAAAEMB}
{\bkmkend AAAAAAAEMB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A half ellipse is drawn. The size of the ellipse is given by the bracket width/height properties. \par
}\cell }{\row }
{\xe \v bsEllipse\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bsEllipse}
{\qr bsEllipse{\bkmkstart AAAAAAAEMC}
{\bkmkend AAAAAAAEMC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An ellipse is drawn. The size of the ellipse is given by the bracket width/height properties. \par
}\cell }{\row }
{\xe \v bsPlus\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bsPlus}
{\qr bsPlus{\bkmkstart AAAAAAAEMD}
{\bkmkend AAAAAAAEMD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A plus is drawn. \par
}\cell }{\row }
{\xe \v bsUserStyle\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bsUserStyle}
{\qr bsUserStyle{\bkmkstart AAAAAAAEME}
{\bkmkend AAAAAAAEME}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start custom bracket styles at this index when subclassing and reimplementing {\b drawBracket}. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPSelectionDecoratorBracket\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:QCPSelectionDecoratorBracket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPSelectionDecoratorBracket::QCPSelectionDecoratorBracket ()}}
\par
{\bkmkstart AAAAAAAEMF}
{\bkmkend AAAAAAAEMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPSelectionDecoratorBracket\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:~QCPSelectionDecoratorBracket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPSelectionDecoratorBracket::~QCPSelectionDecoratorBracket (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMG}
{\bkmkend AAAAAAAEMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v bracketBrush\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bracketBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPSelectionDecoratorBracket::bracketBrush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEMH}
{\bkmkend AAAAAAAEMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bracketHeight\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bracketHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPSelectionDecoratorBracket::bracketHeight () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEMI}
{\bkmkend AAAAAAAEMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bracketPen\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bracketPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPSelectionDecoratorBracket::bracketPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEMJ}
{\bkmkend AAAAAAAEMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bracketStyle\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bracketStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BracketStyle} QCPSelectionDecoratorBracket::bracketStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEMK}
{\bkmkend AAAAAAAEMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bracketWidth\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:bracketWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPSelectionDecoratorBracket::bracketWidth () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEML}
{\bkmkend AAAAAAAEML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawBracket\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:drawBracket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionDecoratorBracket::drawBracket ({\b QCPPainter} * painter, int direction) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEMM}
{\bkmkend AAAAAAAEMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawDecoration\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:drawDecoration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionDecoratorBracket::drawDecoration ({\b QCPPainter} * painter, {\b QCPDataSelection} selection){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAELI}
{\bkmkend AAAAAAAELI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPSelectionDecorator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAELH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getPixelCoordinates\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:getPixelCoordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPSelectionDecoratorBracket::getPixelCoordinates (const {\b QCPPlottableInterface1D} * interface1d, int dataIndex) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEMN}
{\bkmkend AAAAAAAEMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getTangentAngle\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:getTangentAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPSelectionDecoratorBracket::getTangentAngle (const {\b QCPPlottableInterface1D} * interface1d, int dataIndex, int direction) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEMO}
{\bkmkend AAAAAAAEMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBracketBrush\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setBracketBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setBracketBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAEMP}
{\bkmkend AAAAAAAEMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBracketHeight\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setBracketHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setBracketHeight (int height)}}
\par
{\bkmkstart AAAAAAAEMQ}
{\bkmkend AAAAAAAEMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBracketPen\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setBracketPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setBracketPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEMR}
{\bkmkend AAAAAAAEMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBracketStyle\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setBracketStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setBracketStyle ({\b BracketStyle} style)}}
\par
{\bkmkstart AAAAAAAEMS}
{\bkmkend AAAAAAAEMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBracketWidth\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setBracketWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setBracketWidth (int width)}}
\par
{\bkmkstart AAAAAAAEMT}
{\bkmkend AAAAAAAEMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTangentAverage\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setTangentAverage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setTangentAverage (int pointCount)}}
\par
{\bkmkstart AAAAAAAEMU}
{\bkmkend AAAAAAAEMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTangentToData\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:setTangentToData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionDecoratorBracket::setTangentToData (bool enabled)}}
\par
{\bkmkstart AAAAAAAEMV}
{\bkmkend AAAAAAAEMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tangentAverage\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:tangentAverage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPSelectionDecoratorBracket::tangentAverage () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEMW}
{\bkmkend AAAAAAAEMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tangentToData\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:tangentToData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPSelectionDecoratorBracket::tangentToData () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEMX}
{\bkmkend AAAAAAAEMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mBracketBrush\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mBracketBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPSelectionDecoratorBracket::mBracketBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEMY}
{\bkmkend AAAAAAAEMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBracketHeight\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mBracketHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPSelectionDecoratorBracket::mBracketHeight{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEMZ}
{\bkmkend AAAAAAAEMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBracketPen\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mBracketPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPSelectionDecoratorBracket::mBracketPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAENA}
{\bkmkend AAAAAAAENA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBracketStyle\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mBracketStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BracketStyle} QCPSelectionDecoratorBracket::mBracketStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAENB}
{\bkmkend AAAAAAAENB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBracketWidth\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mBracketWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPSelectionDecoratorBracket::mBracketWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAENC}
{\bkmkend AAAAAAAENC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTangentAverage\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mTangentAverage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPSelectionDecoratorBracket::mTangentAverage{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEND}
{\bkmkend AAAAAAAEND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTangentToData\:QCPSelectionDecoratorBracket}
{\xe \v QCPSelectionDecoratorBracket\:mTangentToData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPSelectionDecoratorBracket::mTangentToData{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAENE}
{\bkmkend AAAAAAAENE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPSelectionRect Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPSelectionRect}
{\xe \v QCPSelectionRect}
{\bkmkstart AAAAAAAENF}
{\bkmkend AAAAAAAENF}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPSelectionRect:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_selection_rect.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b started} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b changed} (const QRect &{\b rect}, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b canceled} (const QRect &{\b rect}, QInputEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b accepted} (const QRect &{\b rect}, QMouseEvent *event)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionRect} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPSelectionRect} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b range} (const {\b QCPAxis} *axis) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isActive} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b cancel} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b startSelection} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b moveSelection} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b endSelection} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b keyPressEvent} (QKeyEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mActive}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPSelectionRect\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:QCPSelectionRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPSelectionRect::QCPSelectionRect ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAENG}
{\bkmkend AAAAAAAENG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCPSelectionRect\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:~QCPSelectionRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCPSelectionRect::~QCPSelectionRect (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAENH}
{\bkmkend AAAAAAAENH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v accepted\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:accepted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionRect::accepted (const QRect & rect, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAENI}
{\bkmkend AAAAAAAENI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v applyDefaultAntialiasingHint\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionRect::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v brush\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:brush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPSelectionRect::brush () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAENJ}
{\bkmkend AAAAAAAENJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cancel\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:cancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPSelectionRect::cancel ()}}
\par
{\bkmkstart AAAAAAAENK}
{\bkmkend AAAAAAAENK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v canceled\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:canceled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionRect::canceled (const QRect & rect, QInputEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAENL}
{\bkmkend AAAAAAAENL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v changed\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:changed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionRect::changed (const QRect & rect, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAENM}
{\bkmkend AAAAAAAENM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionRect::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v endSelection\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:endSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionRect::endSelection (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAENN}
{\bkmkend AAAAAAAENN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isActive\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:isActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPSelectionRect::isActive () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAENO}
{\bkmkend AAAAAAAENO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v keyPressEvent\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:keyPressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionRect::keyPressEvent (QKeyEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAENP}
{\bkmkend AAAAAAAENP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v moveSelection\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:moveSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionRect::moveSelection (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAENQ}
{\bkmkend AAAAAAAENQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pen\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:pen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPSelectionRect::pen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAENR}
{\bkmkend AAAAAAAENR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v range\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPSelectionRect::range (const {\b QCPAxis} * axis) const}}
\par
{\bkmkstart AAAAAAAENS}
{\bkmkend AAAAAAAENS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rect\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPSelectionRect::rect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAENT}
{\bkmkend AAAAAAAENT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBrush\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:setBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionRect::setBrush (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAENU}
{\bkmkend AAAAAAAENU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPen\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:setPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionRect::setPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAENV}
{\bkmkend AAAAAAAENV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v started\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:started}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPSelectionRect::started (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAENW}
{\bkmkend AAAAAAAENW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v startSelection\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:startSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPSelectionRect::startSelection (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAENX}
{\bkmkend AAAAAAAENX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCustomPlot\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAENY}
{\bkmkend AAAAAAAENY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mActive\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:mActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPSelectionRect::mActive{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAENZ}
{\bkmkend AAAAAAAENZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBrush\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:mBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCPSelectionRect::mBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOA}
{\bkmkend AAAAAAAEOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPen\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:mPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPSelectionRect::mPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOB}
{\bkmkend AAAAAAAEOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mRect\:QCPSelectionRect}
{\xe \v QCPSelectionRect\:mRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPSelectionRect::mRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOC}
{\bkmkend AAAAAAAEOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPStatisticalBox Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPStatisticalBox}
{\xe \v QCPStatisticalBox}
{\bkmkstart AAAAAAAEOD}
{\bkmkend AAAAAAAEOD}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPStatisticalBox:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_statistical_box.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPStatisticalBox} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPStatisticalBoxDataContainer} > {\b data} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b whiskerWidth} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b whiskerPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b whiskerBarPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b whiskerAntialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b medianPen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b outlierStyle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (QSharedPointer< {\b QCPStatisticalBoxDataContainer} > {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setData} (const QVector< double > &keys, const QVector< double > &minimum, const QVector< double > &lowerQuartile, const QVector< double > &median, const QVector< double > &upperQuartile, const QVector< double > &maximum, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWidth} (double {\b width})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWhiskerWidth} (double {\b width})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWhiskerPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWhiskerBarPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWhiskerAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMedianPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOutlierStyle} (const {\b QCPScatterStyle} &style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (const QVector< double > &keys, const QVector< double > &minimum, const QVector< double > &lowerQuartile, const QVector< double > &median, const QVector< double > &upperQuartile, const QVector< double > &maximum, bool alreadySorted=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addData} (double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum, const QVector< double > &outliers=QVector< double >())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPDataSelection} {\b selectTestRect} (const QRectF &rect, bool onlySelectable) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getKeyRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b getValueRange} (bool &foundRange, {\b QCP::SignDomain} inSignDomain={\b QCP::sdBoth}, const {\b QCPRange} &inKeyRange={\b QCPRange}()) const {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable1D} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable1D} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b dataCount} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataSortKey} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b dataMainValue} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPRange} {\b dataValueRange} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QPointF {\b dataPixelPosition} (int index) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b sortKeyIsMainKey} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findBegin} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b findEnd} (double sortKey, bool expandedRange=true) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCPPlottableInterface1D} * {\b interface1D} () {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} ({\b QCPAxis} *{\b keyAxis}, {\b QCPAxis} *{\b valueAxis})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPAbstractPlottable} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedFill} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiasedScatters} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b pen} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b brush} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b keyAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b valueAxis} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b selection} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b selectionDecorator} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setName} (const QString &{\b name})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedFill} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedScatters} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPen} (const QPen &{\b pen})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBrush} (const QBrush &{\b brush})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setKeyAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setValueAxis} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} ({\b QCP::SelectionType} {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelection} ({\b QCPDataSelection} {\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionDecorator} ({\b QCPSelectionDecorator} *decorator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b coordsToPixels} (double key, double value, double &x, double &y) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QPointF {\b coordsToPixels} (double key, double value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (double x, double y, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pixelsToCoords} (const QPointF &pixelPos, double &key, double &value) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleAxes} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleKeyAxis} (bool onlyEnlarge=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b rescaleValueAxis} (bool onlyEnlarge=false, bool inKeyRange=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ({\b QCPLegend} *legend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addToLegend} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} ({\b QCPLegend} *legend) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeFromLegend} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPPlottableInterface1D}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPPlottableInterface1D} ()=default\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawLegendIcon} ({\b QCPPainter} *painter, const QRectF &rect) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b drawStatisticalBox} ({\b QCPPainter} *painter, {\b QCPStatisticalBoxDataContainer::const_iterator} it, const {\b QCPScatterStyle} &{\b outlierStyle}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getVisibleDataBounds} ({\b QCPStatisticalBoxDataContainer::const_iterator} &begin, {\b QCPStatisticalBoxDataContainer::const_iterator} &end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRectF {\b getQuartileBox} ({\b QCPStatisticalBoxDataContainer::const_iterator} it) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QLineF > {\b getWhiskerBackboneLines} ({\b QCPStatisticalBoxDataContainer::const_iterator} it) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< QLineF > {\b getWhiskerBarLines} ({\b QCPStatisticalBoxDataContainer::const_iterator} it) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getDataSegments} (QList< {\b QCPDataRange} > &selectedSegments, QList< {\b QCPDataRange} > &unselectedSegments) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPolyline} ({\b QCPPainter} *painter, const QVector< QPointF > &lineData) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyFillAntialiasingHint} ({\b QCPPainter} *painter) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyScattersAntialiasingHint} ({\b QCPPainter} *painter) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mWhiskerWidth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mWhiskerPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mWhiskerBarPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mWhiskerAntialiased}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mMedianPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPScatterStyle} {\b mOutlierStyle}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSharedPointer< {\b QCPDataContainer}< {\b QCPStatisticalBoxData} > > {\b mDataContainer}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedFill}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiasedScatters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPen {\b mPen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mKeyAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPAxis} > {\b mValueAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionType} {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPDataSelection} {\b mSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionDecorator} * {\b mSelectionDecorator}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPAbstractPlottable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (const {\b QCPDataSelection} &{\b selection})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} ({\b QCP::SelectionType} {\b selectable})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPStatisticalBox\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:QCPStatisticalBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPStatisticalBox::QCPStatisticalBox ({\b QCPAxis} * keyAxis, {\b QCPAxis} * valueAxis){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEOE}
{\bkmkend AAAAAAAEOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addData\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::addData (const QVector< double > & keys, const QVector< double > & minimum, const QVector< double > & lowerQuartile, const QVector< double > & median, const QVector< double > & upperQuartile, const QVector< double > & maximum, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAAEOF}
{\bkmkend AAAAAAAEOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addData\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:addData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::addData (double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum, const QVector< double > & outliers = {\f2 QVector<\~ double\~ >()})}}
\par
{\bkmkstart AAAAAAAEOG}
{\bkmkend AAAAAAAEOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QSharedPointer< {\b QCPStatisticalBoxDataContainer} > QCPStatisticalBox::data () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEOH}
{\bkmkend AAAAAAAEOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPStatisticalBox::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawLegendIcon\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:drawLegendIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPStatisticalBox::drawLegendIcon ({\b QCPPainter} * painter, const QRectF & rect) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAML \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v drawStatisticalBox\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:drawStatisticalBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPStatisticalBox::drawStatisticalBox ({\b QCPPainter} * painter, {\b QCPStatisticalBoxDataContainer::const_iterator} it, const {\b QCPScatterStyle} & outlierStyle) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEOI}
{\bkmkend AAAAAAAEOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getKeyRange\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:getKeyRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPStatisticalBox::getKeyRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getQuartileBox\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:getQuartileBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRectF QCPStatisticalBox::getQuartileBox ({\b QCPStatisticalBoxDataContainer::const_iterator} it) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOJ}
{\bkmkend AAAAAAAEOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getValueRange\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:getValueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPRange} QCPStatisticalBox::getValueRange (bool & foundRange, {\b QCP::SignDomain} inSignDomain = {\f2 {\b QCP::sdBoth}}, const {\b QCPRange} & inKeyRange = {\f2 {\b QCPRange}()}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b QCPAbstractPlottable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAANB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getVisibleDataBounds\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:getVisibleDataBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::getVisibleDataBounds ({\b QCPStatisticalBoxDataContainer::const_iterator} & begin, {\b QCPStatisticalBoxDataContainer::const_iterator} & end) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOK}
{\bkmkend AAAAAAAEOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getWhiskerBackboneLines\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:getWhiskerBackboneLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QLineF > QCPStatisticalBox::getWhiskerBackboneLines ({\b QCPStatisticalBoxDataContainer::const_iterator} it) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOL}
{\bkmkend AAAAAAAEOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getWhiskerBarLines\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:getWhiskerBarLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector< QLineF > QCPStatisticalBox::getWhiskerBarLines ({\b QCPStatisticalBoxDataContainer::const_iterator} it) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEOM}
{\bkmkend AAAAAAAEOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v medianPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:medianPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPStatisticalBox::medianPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEON}
{\bkmkend AAAAAAAEON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v outlierStyle\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:outlierStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPStatisticalBox::outlierStyle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEOO}
{\bkmkend AAAAAAAEOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPStatisticalBox::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a point-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
If {\i details}  is not 0, it will be set to a {\b QCPDataSelection}, describing the closest data point to {\i pos} .\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectTestRect\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:selectTestRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b QCPDataSelection} QCPStatisticalBox::selectTestRect (const QRectF & rect, bool onlySelectable) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implements a rect-selection algorithm assuming the data (accessed via the 1D data interface) is point-like. Most subclasses will want to reimplement this method again, to provide a more accurate hit test based on the true data visualization geometry.\par
\\seebaseclassmethod \par
}{
Reimplemented from {\b QCPAbstractPlottable1D< QCPStatisticalBoxData >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setData\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setData (const QVector< double > & keys, const QVector< double > & minimum, const QVector< double > & lowerQuartile, const QVector< double > & median, const QVector< double > & upperQuartile, const QVector< double > & maximum, bool alreadySorted = {\f2 false})}}
\par
{\bkmkstart AAAAAAAEOP}
{\bkmkend AAAAAAAEOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setData\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setData (QSharedPointer< {\b QCPStatisticalBoxDataContainer} > data)}}
\par
{\bkmkstart AAAAAAAEOQ}
{\bkmkend AAAAAAAEOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMedianPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setMedianPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setMedianPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEOR}
{\bkmkend AAAAAAAEOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOutlierStyle\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setOutlierStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setOutlierStyle (const {\b QCPScatterStyle} & style)}}
\par
{\bkmkstart AAAAAAAEOS}
{\bkmkend AAAAAAAEOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWhiskerAntialiased\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setWhiskerAntialiased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setWhiskerAntialiased (bool enabled)}}
\par
{\bkmkstart AAAAAAAEOT}
{\bkmkend AAAAAAAEOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWhiskerBarPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setWhiskerBarPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setWhiskerBarPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEOU}
{\bkmkend AAAAAAAEOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWhiskerPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setWhiskerPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setWhiskerPen (const QPen & pen)}}
\par
{\bkmkstart AAAAAAAEOV}
{\bkmkend AAAAAAAEOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWhiskerWidth\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setWhiskerWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setWhiskerWidth (double width)}}
\par
{\bkmkstart AAAAAAAEOW}
{\bkmkend AAAAAAAEOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setWidth\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:setWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPStatisticalBox::setWidth (double width)}}
\par
{\bkmkstart AAAAAAAEOX}
{\bkmkend AAAAAAAEOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v whiskerAntialiased\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:whiskerAntialiased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPStatisticalBox::whiskerAntialiased () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEOY}
{\bkmkend AAAAAAAEOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v whiskerBarPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:whiskerBarPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPStatisticalBox::whiskerBarPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEOZ}
{\bkmkend AAAAAAAEOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v whiskerPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:whiskerPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPStatisticalBox::whiskerPen () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPA}
{\bkmkend AAAAAAAEPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v whiskerWidth\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:whiskerWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBox::whiskerWidth () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPB}
{\bkmkend AAAAAAAEPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBox::width () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPC}
{\bkmkend AAAAAAAEPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPLegend\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEPD}
{\bkmkend AAAAAAAEPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCustomPlot\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCustomPlot}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEPE}
{\bkmkend AAAAAAAEPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mMedianPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mMedianPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPStatisticalBox::mMedianPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPF}
{\bkmkend AAAAAAAEPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOutlierStyle\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mOutlierStyle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPScatterStyle} QCPStatisticalBox::mOutlierStyle{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPG}
{\bkmkend AAAAAAAEPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWhiskerAntialiased\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mWhiskerAntialiased}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPStatisticalBox::mWhiskerAntialiased{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPH}
{\bkmkend AAAAAAAEPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWhiskerBarPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mWhiskerBarPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPStatisticalBox::mWhiskerBarPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPI}
{\bkmkend AAAAAAAEPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWhiskerPen\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mWhiskerPen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPen QCPStatisticalBox::mWhiskerPen{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPJ}
{\bkmkend AAAAAAAEPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWhiskerWidth\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mWhiskerWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBox::mWhiskerWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPK}
{\bkmkend AAAAAAAEPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mWidth\:QCPStatisticalBox}
{\xe \v QCPStatisticalBox\:mWidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBox::mWidth{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEPL}
{\bkmkend AAAAAAAEPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPStatisticalBoxData Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData}
{\bkmkstart AAAAAAAEPM}
{\bkmkend AAAAAAAEPM}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPStatisticalBoxData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPStatisticalBoxData} (double {\b key}, double {\b minimum}, double {\b lowerQuartile}, double {\b median}, double {\b upperQuartile}, double {\b maximum}, const QVector< double > &{\b outliers}=QVector< double >())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sortKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainKey} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mainValue} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPRange} {\b valueRange} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b QCPStatisticalBoxData} {\b fromSortKey} (double {\b sortKey})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b sortKeyIsMainKey} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b key}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minimum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lowerQuartile}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b median}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b upperQuartile}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maximum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVector< double > {\b outliers}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPStatisticalBoxData\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:QCPStatisticalBoxData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPStatisticalBoxData::QCPStatisticalBoxData ()}}
\par
{\bkmkstart AAAAAAAEPN}
{\bkmkend AAAAAAAEPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPStatisticalBoxData\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:QCPStatisticalBoxData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPStatisticalBoxData::QCPStatisticalBoxData (double key, double minimum, double lowerQuartile, double median, double upperQuartile, double maximum, const QVector< double > & outliers = {\f2 QVector<\~ double\~ >()})}}
\par
{\bkmkstart AAAAAAAEPO}
{\bkmkend AAAAAAAEPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v fromSortKey\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:fromSortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b QCPStatisticalBoxData} QCPStatisticalBoxData::fromSortKey (double sortKey){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPP}
{\bkmkend AAAAAAAEPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainKey\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:mainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::mainKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPQ}
{\bkmkend AAAAAAAEPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainValue\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:mainValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::mainValue () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPR}
{\bkmkend AAAAAAAEPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKey\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:sortKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::sortKey () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPS}
{\bkmkend AAAAAAAEPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sortKeyIsMainKey\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:sortKeyIsMainKey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool QCPStatisticalBoxData::sortKeyIsMainKey (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAEPT}
{\bkmkend AAAAAAAEPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueRange\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:valueRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPRange} QCPStatisticalBoxData::valueRange () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEPU}
{\bkmkend AAAAAAAEPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v key\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::key}}
\par
{\bkmkstart AAAAAAAEPV}
{\bkmkend AAAAAAAEPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lowerQuartile\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:lowerQuartile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::lowerQuartile}}
\par
{\bkmkstart AAAAAAAEPW}
{\bkmkend AAAAAAAEPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maximum\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:maximum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::maximum}}
\par
{\bkmkstart AAAAAAAEPX}
{\bkmkend AAAAAAAEPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v median\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:median}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::median}}
\par
{\bkmkstart AAAAAAAEPY}
{\bkmkend AAAAAAAEPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimum\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:minimum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::minimum}}
\par
{\bkmkstart AAAAAAAEPZ}
{\bkmkend AAAAAAAEPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v outliers\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:outliers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVector<double> QCPStatisticalBoxData::outliers}}
\par
{\bkmkstart AAAAAAAEQA}
{\bkmkend AAAAAAAEQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v upperQuartile\:QCPStatisticalBoxData}
{\xe \v QCPStatisticalBoxData\:upperQuartile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPStatisticalBoxData::upperQuartile}}
\par
{\bkmkstart AAAAAAAEQB}
{\bkmkend AAAAAAAEQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPTextElement Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPTextElement}
{\xe \v QCPTextElement}
{\bkmkstart AAAAAAAEQC}
{\bkmkend AAAAAAAEQC}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCPTextElement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_c_p_text_element.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChanged} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectableChanged} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clicked} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b doubleClicked} (QMouseEvent *event)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Signals inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b layerChanged} ({\b QCPLayer} *newLayer)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPTextElement} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPTextElement} ({\b QCustomPlot} *{\b parentPlot}, const QString &{\b text})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPTextElement} ({\b QCustomPlot} *{\b parentPlot}, const QString &{\b text}, double pointSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPTextElement} ({\b QCustomPlot} *{\b parentPlot}, const QString &{\b text}, const QString &fontFamily, double pointSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPTextElement} ({\b QCustomPlot} *{\b parentPlot}, const QString &{\b text}, const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b text} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b textFlags} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b font} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b textColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b selectedFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b selectedTextColor} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selectable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selected} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setText} (const QString &{\b text})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextFlags} (int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedFont} (const QFont &{\b font})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectedTextColor} (const QColor &color)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelectable} (bool {\b selectable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b setSelected} (bool {\b selected})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b selectTest} (const QPointF &pos, bool onlySelectable, QVariant *details=nullptr) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event, const QPointF &startPos) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event, const QVariant &details) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} ({\b QCustomPlot} *{\b parentPlot}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayoutElement} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b layout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b outerRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b margins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b minimumMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b autoMargins} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b minimumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b maximumSize} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b sizeConstraintRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPMarginGroup} * {\b marginGroup} ({\b QCP::MarginSide} side) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b marginGroups} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOuterRect} (const QRect &{\b rect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumMargins} (const QMargins &{\b margins})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoMargins} (QCP::MarginSides sides)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (const QSize &size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMaximumSize} (int width, int height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSizeConstraintRect} ({\b SizeConstraintRect} constraintRect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMarginGroup} (QCP::MarginSides sides, {\b QCPMarginGroup} *group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b update} ({\b UpdatePhase} phase)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QList< {\b QCPLayoutElement} * > {\b elements} (bool recursive) const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} ({\b QCustomPlot} *plot, QString targetLayer=QString(), {\b QCPLayerable} *{\b parentLayerable}=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCPLayerable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visible} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b parentPlot} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b parentLayerable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b antialiased} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setVisible} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT bool {\b setLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setLayer} (const QString &layerName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiased} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b realVisibility} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b applyDefaultAntialiasingHint} ({\b QCPPainter} *painter) const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b maximumOuterSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b selectEvent} (QMouseEvent *event, bool additive, const QVariant &details, bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deselectEvent} (bool *selectionStateChanged) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mainFont} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mainTextColor} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b calculateAutoMargin} ({\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b layoutChanged} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b parentPlotInitialized} ({\b QCustomPlot} *{\b parentPlot}) {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b QCP::Interaction} {\b selectionCategory} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QRect {\b clipRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event, const QPointF &startPos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeParentPlot} ({\b QCustomPlot} *{\b parentPlot})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParentLayerable} ({\b QCPLayerable} *{\b parentLayerable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveToLayer} ({\b QCPLayer} *{\b layer}, bool prepend)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyAntialiasingHint} ({\b QCPPainter} *painter, bool localAntialiased, {\b QCP::AntialiasedElement} overrideElement) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b mText}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mTextFlags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b mSelectedFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QColor {\b mSelectedTextColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mTextBoundingRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelectable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mSelected}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayout} * {\b mParentLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMinimumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QSize {\b mMaximumSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SizeConstraintRect} {\b mSizeConstraintRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mOuterRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QMargins {\b mMinimumMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::MarginSides {\b mAutoMargins}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QHash< {\b QCP::MarginSide}, {\b QCPMarginGroup} * > {\b mMarginGroups}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b QCPLayerable}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mVisible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} * {\b mParentPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mParentLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAntialiased}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b QCPLayoutElement}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b UpdatePhase} \{ {\b upPreparation}
, {\b upMargins}
, {\b upLayout}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SizeConstraintRect} \{ {\b scrInnerRect}
, {\b scrOuterRect}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPTextElement\:QCPTextElement}
{\xe \v QCPTextElement\:QCPTextElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPTextElement::QCPTextElement ({\b QCustomPlot} * parentPlot){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAEQD}
{\bkmkend AAAAAAAEQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPTextElement\:QCPTextElement}
{\xe \v QCPTextElement\:QCPTextElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPTextElement::QCPTextElement ({\b QCustomPlot} * parentPlot, const QString & text)}}
\par
{\bkmkstart AAAAAAAEQE}
{\bkmkend AAAAAAAEQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPTextElement\:QCPTextElement}
{\xe \v QCPTextElement\:QCPTextElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPTextElement::QCPTextElement ({\b QCustomPlot} * parentPlot, const QString & text, double pointSize)}}
\par
{\bkmkstart AAAAAAAEQF}
{\bkmkend AAAAAAAEQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPTextElement\:QCPTextElement}
{\xe \v QCPTextElement\:QCPTextElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPTextElement::QCPTextElement ({\b QCustomPlot} * parentPlot, const QString & text, const QString & fontFamily, double pointSize)}}
\par
{\bkmkstart AAAAAAAEQG}
{\bkmkend AAAAAAAEQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPTextElement\:QCPTextElement}
{\xe \v QCPTextElement\:QCPTextElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPTextElement::QCPTextElement ({\b QCustomPlot} * parentPlot, const QString & text, const QFont & font)}}
\par
{\bkmkstart AAAAAAAEQH}
{\bkmkend AAAAAAAEQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v applyDefaultAntialiasingHint\:QCPTextElement}
{\xe \v QCPTextElement\:applyDefaultAntialiasingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::applyDefaultAntialiasingHint ({\b QCPPainter} * painter) const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v clicked\:QCPTextElement}
{\xe \v QCPTextElement\:clicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::clicked (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEQI}
{\bkmkend AAAAAAAEQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectEvent\:QCPTextElement}
{\xe \v QCPTextElement\:deselectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::deselectEvent (bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v doubleClicked\:QCPTextElement}
{\xe \v QCPTextElement\:doubleClicked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::doubleClicked (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEQJ}
{\bkmkend AAAAAAAEQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCPTextElement}
{\xe \v QCPTextElement\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v font\:QCPTextElement}
{\xe \v QCPTextElement\:font}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPTextElement::font () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEQK}
{\bkmkend AAAAAAAEQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainFont\:QCPTextElement}
{\xe \v QCPTextElement\:mainFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPTextElement::mainFont () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEQL}
{\bkmkend AAAAAAAEQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mainTextColor\:QCPTextElement}
{\xe \v QCPTextElement\:mainTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPTextElement::mainTextColor () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEQM}
{\bkmkend AAAAAAAEQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maximumOuterSizeHint\:QCPTextElement}
{\xe \v QCPTextElement\:maximumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPTextElement::maximumOuterSizeHint () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v minimumOuterSizeHint\:QCPTextElement}
{\xe \v QCPTextElement\:minimumOuterSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCPTextElement::minimumOuterSizeHint () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseDoubleClickEvent\:QCPTextElement}
{\xe \v QCPTextElement\:mouseDoubleClickEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::mouseDoubleClickEvent (QMouseEvent * event, const QVariant & details){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADAM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mousePressEvent\:QCPTextElement}
{\xe \v QCPTextElement\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::mousePressEvent (QMouseEvent * event, const QVariant & details){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v mouseReleaseEvent\:QCPTextElement}
{\xe \v QCPTextElement\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::mouseReleaseEvent (QMouseEvent * event, const QPointF & startPos){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectable\:QCPTextElement}
{\xe \v QCPTextElement\:selectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPTextElement::selectable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEQN}
{\bkmkend AAAAAAAEQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectableChanged\:QCPTextElement}
{\xe \v QCPTextElement\:selectableChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::selectableChanged (bool selectable){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEQO}
{\bkmkend AAAAAAAEQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selected\:QCPTextElement}
{\xe \v QCPTextElement\:selected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPTextElement::selected () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEQP}
{\bkmkend AAAAAAAEQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedFont\:QCPTextElement}
{\xe \v QCPTextElement\:selectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPTextElement::selectedFont () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEQQ}
{\bkmkend AAAAAAAEQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedTextColor\:QCPTextElement}
{\xe \v QCPTextElement\:selectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPTextElement::selectedTextColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEQR}
{\bkmkend AAAAAAAEQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectEvent\:QCPTextElement}
{\xe \v QCPTextElement\:selectEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCPTextElement::selectEvent (QMouseEvent * event, bool additive, const QVariant & details, bool * selectionStateChanged){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayerable} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v selectionChanged\:QCPTextElement}
{\xe \v QCPTextElement\:selectionChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::selectionChanged (bool selected){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEQS}
{\bkmkend AAAAAAAEQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectTest\:QCPTextElement}
{\xe \v QCPTextElement\:selectTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double QCPTextElement::selectTest (const QPointF & pos, bool onlySelectable, QVariant * details = {\f2 nullptr}) const{\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b QCPLayoutElement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setFont\:QCPTextElement}
{\xe \v QCPTextElement\:setFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::setFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAEQT}
{\bkmkend AAAAAAAEQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectable\:QCPTextElement}
{\xe \v QCPTextElement\:setSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPTextElement::setSelectable (bool selectable)}}
\par
{\bkmkstart AAAAAAAEQU}
{\bkmkend AAAAAAAEQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelected\:QCPTextElement}
{\xe \v QCPTextElement\:setSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCPTextElement::setSelected (bool selected)}}
\par
{\bkmkstart AAAAAAAEQV}
{\bkmkend AAAAAAAEQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedFont\:QCPTextElement}
{\xe \v QCPTextElement\:setSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::setSelectedFont (const QFont & font)}}
\par
{\bkmkstart AAAAAAAEQW}
{\bkmkend AAAAAAAEQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedTextColor\:QCPTextElement}
{\xe \v QCPTextElement\:setSelectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::setSelectedTextColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAEQX}
{\bkmkend AAAAAAAEQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setText\:QCPTextElement}
{\xe \v QCPTextElement\:setText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::setText (const QString & text)}}
\par
{\bkmkstart AAAAAAAEQY}
{\bkmkend AAAAAAAEQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTextColor\:QCPTextElement}
{\xe \v QCPTextElement\:setTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::setTextColor (const QColor & color)}}
\par
{\bkmkstart AAAAAAAEQZ}
{\bkmkend AAAAAAAEQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTextFlags\:QCPTextElement}
{\xe \v QCPTextElement\:setTextFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPTextElement::setTextFlags (int flags)}}
\par
{\bkmkstart AAAAAAAERA}
{\bkmkend AAAAAAAERA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v text\:QCPTextElement}
{\xe \v QCPTextElement\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPTextElement::text () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERB}
{\bkmkend AAAAAAAERB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v textColor\:QCPTextElement}
{\xe \v QCPTextElement\:textColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPTextElement::textColor () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERC}
{\bkmkend AAAAAAAERC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v textFlags\:QCPTextElement}
{\xe \v QCPTextElement\:textFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPTextElement::textFlags () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERD}
{\bkmkend AAAAAAAERD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mFont\:QCPTextElement}
{\xe \v QCPTextElement\:mFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPTextElement::mFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERE}
{\bkmkend AAAAAAAERE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectable\:QCPTextElement}
{\xe \v QCPTextElement\:mSelectable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPTextElement::mSelectable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERF}
{\bkmkend AAAAAAAERF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelected\:QCPTextElement}
{\xe \v QCPTextElement\:mSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPTextElement::mSelected{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERG}
{\bkmkend AAAAAAAERG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedFont\:QCPTextElement}
{\xe \v QCPTextElement\:mSelectedFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPTextElement::mSelectedFont{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERH}
{\bkmkend AAAAAAAERH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectedTextColor\:QCPTextElement}
{\xe \v QCPTextElement\:mSelectedTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPTextElement::mSelectedTextColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERI}
{\bkmkend AAAAAAAERI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mText\:QCPTextElement}
{\xe \v QCPTextElement\:mText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPTextElement::mText{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERJ}
{\bkmkend AAAAAAAERJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTextBoundingRect\:QCPTextElement}
{\xe \v QCPTextElement\:mTextBoundingRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPTextElement::mTextBoundingRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERK}
{\bkmkend AAAAAAAERK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTextColor\:QCPTextElement}
{\xe \v QCPTextElement\:mTextColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QColor QCPTextElement::mTextColor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERL}
{\bkmkend AAAAAAAERL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mTextFlags\:QCPTextElement}
{\xe \v QCPTextElement\:mTextFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCPTextElement::mTextFlags{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAERM}
{\bkmkend AAAAAAAERM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPVector2D Class Reference\par \pard\plain 
{\tc\tcl2 \v QCPVector2D}
{\xe \v QCPVector2D}
{\bkmkstart AAAAAAAERN}
{\bkmkend AAAAAAAERN}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} (double {\b x}, double {\b y})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} (const QPoint &point)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} (const QPointF &point)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double & {\b rx} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double & {\b ry} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (double {\b x})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (double {\b y})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b length} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lengthSquared} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angle} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b toPoint} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointF {\b toPointF} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isNull} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b normalize} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} {\b normalized} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} {\b perpendicular} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dot} (const {\b QCPVector2D} &vec) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceSquaredToLine} (const {\b QCPVector2D} &start, const {\b QCPVector2D} &end) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceSquaredToLine} (const QLineF &line) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceToStraightLine} (const {\b QCPVector2D} &base, const {\b QCPVector2D} &direction) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} & {\b operator*=} (double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} & {\b operator/=} (double divisor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} & {\b operator+=} (const {\b QCPVector2D} &vector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPVector2D} & {\b operator-=} (const {\b QCPVector2D} &vector)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator*} (double factor, const {\b QCPVector2D} &vec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator*} (const {\b QCPVector2D} &vec, double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator/} (const {\b QCPVector2D} &vec, double divisor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator+} (const {\b QCPVector2D} &vec1, const {\b QCPVector2D} &vec2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator-} (const {\b QCPVector2D} &vec1, const {\b QCPVector2D} &vec2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator-} (const {\b QCPVector2D} &vec)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Related Symbols\par
\pard\plain 
{
\pard\plain \s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(Note that these are not member symbols.) \par
}}

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QDebug {\b operator<<} (QDebug d, const {\b QCPVector2D} &vec)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCPVector2D\:QCPVector2D}
{\xe \v QCPVector2D\:QCPVector2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPVector2D::QCPVector2D ()}}
\par
{\bkmkstart AAAAAAAERO}
{\bkmkend AAAAAAAERO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPVector2D\:QCPVector2D}
{\xe \v QCPVector2D\:QCPVector2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPVector2D::QCPVector2D (double x, double y)}}
\par
{\bkmkstart AAAAAAAERP}
{\bkmkend AAAAAAAERP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPVector2D\:QCPVector2D}
{\xe \v QCPVector2D\:QCPVector2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPVector2D::QCPVector2D (const QPoint & point)}}
\par
{\bkmkstart AAAAAAAERQ}
{\bkmkend AAAAAAAERQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPVector2D\:QCPVector2D}
{\xe \v QCPVector2D\:QCPVector2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCPVector2D::QCPVector2D (const QPointF & point)}}
\par
{\bkmkstart AAAAAAAERR}
{\bkmkend AAAAAAAERR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v angle\:QCPVector2D}
{\xe \v QCPVector2D\:angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::angle () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERS}
{\bkmkend AAAAAAAERS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distanceSquaredToLine\:QCPVector2D}
{\xe \v QCPVector2D\:distanceSquaredToLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::distanceSquaredToLine (const {\b QCPVector2D} & start, const {\b QCPVector2D} & end) const}}
\par
{\bkmkstart AAAAAAAERT}
{\bkmkend AAAAAAAERT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distanceSquaredToLine\:QCPVector2D}
{\xe \v QCPVector2D\:distanceSquaredToLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::distanceSquaredToLine (const QLineF & line) const}}
\par
{\bkmkstart AAAAAAAERU}
{\bkmkend AAAAAAAERU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distanceToStraightLine\:QCPVector2D}
{\xe \v QCPVector2D\:distanceToStraightLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::distanceToStraightLine (const {\b QCPVector2D} & base, const {\b QCPVector2D} & direction) const}}
\par
{\bkmkstart AAAAAAAERV}
{\bkmkend AAAAAAAERV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dot\:QCPVector2D}
{\xe \v QCPVector2D\:dot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::dot (const {\b QCPVector2D} & vec) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERW}
{\bkmkend AAAAAAAERW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isNull\:QCPVector2D}
{\xe \v QCPVector2D\:isNull}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCPVector2D::isNull () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERX}
{\bkmkend AAAAAAAERX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v length\:QCPVector2D}
{\xe \v QCPVector2D\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::length () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERY}
{\bkmkend AAAAAAAERY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lengthSquared\:QCPVector2D}
{\xe \v QCPVector2D\:lengthSquared}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::lengthSquared () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAERZ}
{\bkmkend AAAAAAAERZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v normalize\:QCPVector2D}
{\xe \v QCPVector2D\:normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPVector2D::normalize ()}}
\par
{\bkmkstart AAAAAAAESA}
{\bkmkend AAAAAAAESA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v normalized\:QCPVector2D}
{\xe \v QCPVector2D\:normalized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPVector2D} QCPVector2D::normalized () const}}
\par
{\bkmkstart AAAAAAAESB}
{\bkmkend AAAAAAAESB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*=\:QCPVector2D}
{\xe \v QCPVector2D\:operator*=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPVector2D} & QCPVector2D::operator*= (double factor)}}
\par
{\bkmkstart AAAAAAAESC}
{\bkmkend AAAAAAAESC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+=\:QCPVector2D}
{\xe \v QCPVector2D\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPVector2D} & QCPVector2D::operator+= (const {\b QCPVector2D} & vector)}}
\par
{\bkmkstart AAAAAAAESD}
{\bkmkend AAAAAAAESD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-=\:QCPVector2D}
{\xe \v QCPVector2D\:operator-=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPVector2D} & QCPVector2D::operator-= (const {\b QCPVector2D} & vector)}}
\par
{\bkmkstart AAAAAAAESE}
{\bkmkend AAAAAAAESE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator/=\:QCPVector2D}
{\xe \v QCPVector2D\:operator/=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPVector2D} & QCPVector2D::operator/= (double divisor)}}
\par
{\bkmkstart AAAAAAAESF}
{\bkmkend AAAAAAAESF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v perpendicular\:QCPVector2D}
{\xe \v QCPVector2D\:perpendicular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPVector2D} QCPVector2D::perpendicular () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESG}
{\bkmkend AAAAAAAESG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rx\:QCPVector2D}
{\xe \v QCPVector2D\:rx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double & QCPVector2D::rx (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESH}
{\bkmkend AAAAAAAESH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ry\:QCPVector2D}
{\xe \v QCPVector2D\:ry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double & QCPVector2D::ry (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESI}
{\bkmkend AAAAAAAESI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setX\:QCPVector2D}
{\xe \v QCPVector2D\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPVector2D::setX (double x){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESJ}
{\bkmkend AAAAAAAESJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setY\:QCPVector2D}
{\xe \v QCPVector2D\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCPVector2D::setY (double y){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESK}
{\bkmkend AAAAAAAESK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toPoint\:QCPVector2D}
{\xe \v QCPVector2D\:toPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCPVector2D::toPoint () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESL}
{\bkmkend AAAAAAAESL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toPointF\:QCPVector2D}
{\xe \v QCPVector2D\:toPointF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointF QCPVector2D::toPointF () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESM}
{\bkmkend AAAAAAAESM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:QCPVector2D}
{\xe \v QCPVector2D\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::x () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESN}
{\bkmkend AAAAAAAESN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:QCPVector2D}
{\xe \v QCPVector2D\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCPVector2D::y () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAESO}
{\bkmkend AAAAAAAESO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator*\:QCPVector2D}
{\xe \v QCPVector2D\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator* (const {\b QCPVector2D} & vec, double factor){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAESP}
{\bkmkend AAAAAAAESP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*\:QCPVector2D}
{\xe \v QCPVector2D\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator* (double factor, const {\b QCPVector2D} & vec){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAESQ}
{\bkmkend AAAAAAAESQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+\:QCPVector2D}
{\xe \v QCPVector2D\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator+ (const {\b QCPVector2D} & vec1, const {\b QCPVector2D} & vec2){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAESR}
{\bkmkend AAAAAAAESR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-\:QCPVector2D}
{\xe \v QCPVector2D\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator- (const {\b QCPVector2D} & vec){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAESS}
{\bkmkend AAAAAAAESS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-\:QCPVector2D}
{\xe \v QCPVector2D\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator- (const {\b QCPVector2D} & vec1, const {\b QCPVector2D} & vec2){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEST}
{\bkmkend AAAAAAAEST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator/\:QCPVector2D}
{\xe \v QCPVector2D\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator/ (const {\b QCPVector2D} & vec, double divisor){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAESU}
{\bkmkend AAAAAAAESU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<<\:QCPVector2D}
{\xe \v QCPVector2D\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QDebug operator<< (QDebug d, const {\b QCPVector2D} & vec){\f2 [related]}}}
\par
{\bkmkstart AAAAAAAESV}
{\bkmkend AAAAAAAESV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prints {\i vec}  in a human readable format to the qDebug output. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCustomPlot Class Reference\par \pard\plain 
{\tc\tcl2 \v QCustomPlot}
{\xe \v QCustomPlot}
{\bkmkstart AAAAAAAESW}
{\bkmkend AAAAAAAESW}
\par
{
{\f2 #include <qcustomplot.h>}}\par
Inheritance diagram for QCustomPlot:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_q_custom_plot.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b LayerInsertMode} \{ {\b limBelow}
, {\b limAbove}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RefreshPriority} \{ {\b rpImmediateRefresh}
, {\b rpQueuedRefresh}
, {\b rpRefreshHint}
, {\b rpQueuedReplot}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Signals\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseDoubleClick} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mousePress} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseMove} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseRelease} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mouseWheel} (QWheelEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b plottableClick} ({\b QCPAbstractPlottable} *{\b plottable}, int dataIndex, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b plottableDoubleClick} ({\b QCPAbstractPlottable} *{\b plottable}, int dataIndex, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b itemClick} ({\b QCPAbstractItem} *{\b item}, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b itemDoubleClick} ({\b QCPAbstractItem} *{\b item}, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b axisClick} ({\b QCPAxis} *axis, {\b QCPAxis::SelectablePart} part, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b axisDoubleClick} ({\b QCPAxis} *axis, {\b QCPAxis::SelectablePart} part, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b legendClick} ({\b QCPLegend} *{\b legend}, {\b QCPAbstractLegendItem} *{\b item}, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b legendDoubleClick} ({\b QCPLegend} *{\b legend}, {\b QCPAbstractLegendItem} *{\b item}, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selectionChangedByUser} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b beforeReplot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b afterLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b afterReplot} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCustomPlot} (QWidget *parent=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~QCustomPlot} () {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b viewport} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bufferDevicePixelRatio} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b background} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b backgroundScaled} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b backgroundScaledMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutGrid} * {\b plotLayout} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b antialiasedElements} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b notAntialiasedElements} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b autoAddPlottableToLegend} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QCP::Interactions {\b interactions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b selectionTolerance} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b noAntialiasingOnDrag} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::PlottingHints {\b plottingHints} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::KeyboardModifier {\b multiSelectModifier} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionRectMode} {\b selectionRectMode} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionRect} * {\b selectionRect} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b openGl} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setViewport} (const QRect &rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBufferDevicePixelRatio} (double ratio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QPixmap &pm, bool scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackground} (const QBrush &brush)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaled} (bool scaled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBackgroundScaledMode} (Qt::AspectRatioMode mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedElements} (const QCP::AntialiasedElements &{\b antialiasedElements})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAntialiasedElement} ({\b QCP::AntialiasedElement} antialiasedElement, bool enabled=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNotAntialiasedElements} (const QCP::AntialiasedElements &{\b notAntialiasedElements})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNotAntialiasedElement} ({\b QCP::AntialiasedElement} notAntialiasedElement, bool enabled=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAutoAddPlottableToLegend} (bool on)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInteractions} (const QCP::Interactions &{\b interactions})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInteraction} (const {\b QCP::Interaction} &interaction, bool enabled=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionTolerance} (int pixels)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNoAntialiasingOnDrag} (bool enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPlottingHints} (const QCP::PlottingHints &hints)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPlottingHint} ({\b QCP::PlottingHint} hint, bool enabled=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMultiSelectModifier} (Qt::KeyboardModifier modifier)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionRectMode} ({\b QCP::SelectionRectMode} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSelectionRect} ({\b QCPSelectionRect} *{\b selectionRect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOpenGl} (bool enabled, int multisampling=16)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b plottable} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b plottable} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removePlottable} ({\b QCPAbstractPlottable} *{\b plottable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removePlottable} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b clearPlottables} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b plottableCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractPlottable} * > {\b selectedPlottables} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class PlottableType > PlottableType * {\b plottableAt} (const QPointF &pos, bool onlySelectable=false, int *dataIndex=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPlottable} * {\b plottableAt} (const QPointF &pos, bool onlySelectable=false, int *dataIndex=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasPlottable} ({\b QCPAbstractPlottable} *{\b plottable}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} * {\b graph} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} * {\b graph} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPGraph} * {\b addGraph} ({\b QCPAxis} *keyAxis=nullptr, {\b QCPAxis} *valueAxis=nullptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeGraph} ({\b QCPGraph} *{\b graph})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeGraph} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b clearGraphs} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b graphCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPGraph} * > {\b selectedGraphs} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} * {\b item} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} * {\b item} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeItem} ({\b QCPAbstractItem} *{\b item})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeItem} (int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b clearItems} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b itemCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractItem} * > {\b selectedItems} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ItemType > ItemType * {\b itemAt} (const QPointF &pos, bool onlySelectable=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractItem} * {\b itemAt} (const QPointF &pos, bool onlySelectable=false) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasItem} ({\b QCPAbstractItem} *{\b item}) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} (const QString &name) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b layer} (int index) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b currentLayer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setCurrentLayer} (const QString &name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setCurrentLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b layerCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addLayer} (const QString &name, {\b QCPLayer} *otherLayer=nullptr, {\b LayerInsertMode} insertMode={\b limAbove})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b removeLayer} ({\b QCPLayer} *{\b layer})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b moveLayer} ({\b QCPLayer} *{\b layer}, {\b QCPLayer} *otherLayer, {\b LayerInsertMode} insertMode={\b limAbove})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b axisRectCount} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b axisRect} (int index=0) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxisRect} * > {\b axisRects} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutElement} * {\b layoutElementAt} (const QPointF &pos) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxisRect} * {\b axisRectAt} (const QPointF &pos) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b rescaleAxes} (bool onlyVisiblePlottables=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAxis} * > {\b selectedAxes} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLegend} * > {\b selectedLegends} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b deselectAll} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b savePdf} (const QString &fileName, int width=0, int height=0, {\b QCP::ExportPen} exportPen={\b QCP::epAllowCosmetic}, const QString &pdfCreator=QString(), const QString &pdfTitle=QString())\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b savePng} (const QString &fileName, int width=0, int height=0, double scale=1.0, int quality=-1, int resolution=96, {\b QCP::ResolutionUnit} resolutionUnit={\b QCP::ruDotsPerInch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveJpg} (const QString &fileName, int width=0, int height=0, double scale=1.0, int quality=-1, int resolution=96, {\b QCP::ResolutionUnit} resolutionUnit={\b QCP::ruDotsPerInch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveBmp} (const QString &fileName, int width=0, int height=0, double scale=1.0, int resolution=96, {\b QCP::ResolutionUnit} resolutionUnit={\b QCP::ruDotsPerInch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveRastered} (const QString &fileName, int width, int height, double scale, const char *format, int quality=-1, int resolution=96, {\b QCP::ResolutionUnit} resolutionUnit={\b QCP::ruDotsPerInch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b toPixmap} (int width=0, int height=0, double scale=1.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b toPainter} ({\b QCPPainter} *painter, int width=0, int height=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Q_SLOT void {\b replot} ({\b QCustomPlot::RefreshPriority} refreshPriority={\b QCustomPlot::rpRefreshHint})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b replotTime} (bool average=false) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b xAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b yAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b xAxis2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAxis} * {\b yAxis2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLegend} * {\b legend}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b minimumSizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual QSize {\b sizeHint} () const {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b paintEvent} (QPaintEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b resizeEvent} (QResizeEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseDoubleClickEvent} (QMouseEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mousePressEvent} (QMouseEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseMoveEvent} (QMouseEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b mouseReleaseEvent} (QMouseEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b wheelEvent} (QWheelEvent *event) {\b Q_DECL_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b draw} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateLayout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b axisRemoved} ({\b QCPAxis} *axis)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b legendRemoved} ({\b QCPLegend} *{\b legend})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual Q_SLOT void {\b processRectSelection} (QRect rect, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual Q_SLOT void {\b processRectZoom} (QRect rect, QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual Q_SLOT void {\b processPointSelection} (QMouseEvent *event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b registerPlottable} ({\b QCPAbstractPlottable} *{\b plottable})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b registerGraph} ({\b QCPGraph} *{\b graph})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b registerItem} ({\b QCPAbstractItem} *{\b item})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateLayerIndices} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayerable} * {\b layerableAt} (const QPointF &pos, bool onlySelectable, QVariant *selectionDetails=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLayerable} * > {\b layerableListAt} (const QPointF &pos, bool onlySelectable, QList< QVariant > *selectionDetails=nullptr) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawBackground} ({\b QCPPainter} *painter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupPaintBuffers} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPAbstractPaintBuffer} * {\b createPaintBuffer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasInvalidatedPaintBuffers} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setupOpenGl} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b freeOpenGl} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b mViewport}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mBufferDevicePixelRatio}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayoutGrid} * {\b mPlotLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mAutoAddPlottableToLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractPlottable} * > {\b mPlottables}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPGraph} * > {\b mGraphs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPAbstractItem} * > {\b mItems}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< {\b QCPLayer} * > {\b mLayers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mAntialiasedElements}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mNotAntialiasedElements}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::Interactions {\b mInteractions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mSelectionTolerance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mNoAntialiasingOnDrag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QBrush {\b mBackgroundBrush}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPixmap {\b mScaledBackgroundPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mBackgroundScaled}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::AspectRatioMode {\b mBackgroundScaledMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPLayer} * {\b mCurrentLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::PlottingHints {\b mPlottingHints}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Qt::KeyboardModifier {\b mMultiSelectModifier}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCP::SelectionRectMode} {\b mSelectionRectMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QCPSelectionRect} * {\b mSelectionRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mOpenGl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QList< QSharedPointer< {\b QCPAbstractPaintBuffer} > > {\b mPaintBuffers}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPoint {\b mMousePressPos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mMouseHasMoved}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mMouseEventLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QPointer< {\b QCPLayerable} > {\b mMouseSignalLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVariant {\b mMouseEventLayerableDetails}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QVariant {\b mMouseSignalLayerableDetails}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mReplotting}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mReplotQueued}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mReplotTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mReplotTimeAverage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mOpenGlMultisamples}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QCP::AntialiasedElements {\b mOpenGlAntialiasedElementsBackup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mOpenGlCacheLabelsBackup}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractPlottable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPGraph}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractItem}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v LayerInsertMode\:QCustomPlot}
{\xe \v QCustomPlot\:LayerInsertMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCustomPlot::LayerInsertMode}}}
\par
{\bkmkstart AAAAAAAESX}
{\bkmkend AAAAAAAESX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines how a layer should be inserted relative to an other layer.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b addLayer}, {\b moveLayer} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v limBelow\:QCustomPlot}
{\xe \v QCustomPlot\:limBelow}
{\qr limBelow{\bkmkstart AAAAAAAESY}
{\bkmkend AAAAAAAESY}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layer is inserted below other layer. \par
}\cell }{\row }
{\xe \v limAbove\:QCustomPlot}
{\xe \v QCustomPlot\:limAbove}
{\qr limAbove{\bkmkstart AAAAAAAESZ}
{\bkmkend AAAAAAAESZ}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layer is inserted above other layer. \par
}\cell }{\row }
}
}
{\xe \v RefreshPriority\:QCustomPlot}
{\xe \v QCustomPlot\:RefreshPriority}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b QCustomPlot::RefreshPriority}}}
\par
{\bkmkstart AAAAAAAETA}
{\bkmkend AAAAAAAETA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines with what timing the {\b QCustomPlot} surface is refreshed after a replot.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b replot} \par
}}}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v rpImmediateRefresh\:QCustomPlot}
{\xe \v QCustomPlot\:rpImmediateRefresh}
{\qr rpImmediateRefresh{\bkmkstart AAAAAAAETB}
{\bkmkend AAAAAAAETB}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replots immediately and repaints the widget immediately by calling QWidget::repaint() after the replot. \par
}\cell }{\row }
{\xe \v rpQueuedRefresh\:QCustomPlot}
{\xe \v QCustomPlot\:rpQueuedRefresh}
{\qr rpQueuedRefresh{\bkmkstart AAAAAAAETC}
{\bkmkend AAAAAAAETC}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Replots immediately, but queues the widget repaint, by calling QWidget::update() after the replot. This way multiple redundant widget repaints can be avoided. \par
}\cell }{\row }
{\xe \v rpRefreshHint\:QCustomPlot}
{\xe \v QCustomPlot\:rpRefreshHint}
{\qr rpRefreshHint{\bkmkstart AAAAAAAETD}
{\bkmkend AAAAAAAETD}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether to use immediate or queued refresh depends on whether the plotting hint {\b QCP::phImmediateRefresh} is set, see {\b setPlottingHints}. \par
}\cell }{\row }
{\xe \v rpQueuedReplot\:QCustomPlot}
{\xe \v QCustomPlot\:rpQueuedReplot}
{\qr rpQueuedReplot{\bkmkstart AAAAAAAETE}
{\bkmkend AAAAAAAETE}
\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Queues the entire replot for the next event loop iteration. This way multiple redundant replots can be avoided. The actual replot is then done with {\b rpRefreshHint} priority. \par
}\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v QCustomPlot\:QCustomPlot}
{\xe \v QCustomPlot\:QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCustomPlot::QCustomPlot (QWidget * parent = {\f2 nullptr}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAETF}
{\bkmkend AAAAAAAETF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~QCustomPlot\:QCustomPlot}
{\xe \v QCustomPlot\:~QCustomPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QCustomPlot::~QCustomPlot (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAETG}
{\bkmkend AAAAAAAETG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addGraph\:QCustomPlot}
{\xe \v QCustomPlot\:addGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGraph} * QCustomPlot::addGraph ({\b QCPAxis} * keyAxis = {\f2 nullptr}, {\b QCPAxis} * valueAxis = {\f2 nullptr})}}
\par
{\bkmkstart AAAAAAAETH}
{\bkmkend AAAAAAAETH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v addLayer\:QCustomPlot}
{\xe \v QCustomPlot\:addLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::addLayer (const QString & name, {\b QCPLayer} * otherLayer = {\f2 nullptr}, {\b LayerInsertMode} insertMode = {\f2 {\b limAbove}})}}
\par
{\bkmkstart AAAAAAAETI}
{\bkmkend AAAAAAAETI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v afterLayout\:QCustomPlot}
{\xe \v QCustomPlot\:afterLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::afterLayout (){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAETJ}
{\bkmkend AAAAAAAETJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v afterReplot\:QCustomPlot}
{\xe \v QCustomPlot\:afterReplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::afterReplot (){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAETK}
{\bkmkend AAAAAAAETK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v antialiasedElements\:QCustomPlot}
{\xe \v QCustomPlot\:antialiasedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCustomPlot::antialiasedElements () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAETL}
{\bkmkend AAAAAAAETL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v autoAddPlottableToLegend\:QCustomPlot}
{\xe \v QCustomPlot\:autoAddPlottableToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::autoAddPlottableToLegend () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAETM}
{\bkmkend AAAAAAAETM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisClick\:QCustomPlot}
{\xe \v QCustomPlot\:axisClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::axisClick ({\b QCPAxis} * axis, {\b QCPAxis::SelectablePart} part, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAETN}
{\bkmkend AAAAAAAETN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisDoubleClick\:QCustomPlot}
{\xe \v QCustomPlot\:axisDoubleClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::axisDoubleClick ({\b QCPAxis} * axis, {\b QCPAxis::SelectablePart} part, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAETO}
{\bkmkend AAAAAAAETO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisRect\:QCustomPlot}
{\xe \v QCustomPlot\:axisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisRect} * QCustomPlot::axisRect (int index = {\f2 0}) const}}
\par
{\bkmkstart AAAAAAAETP}
{\bkmkend AAAAAAAETP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisRectAt\:QCustomPlot}
{\xe \v QCustomPlot\:axisRectAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxisRect} * QCustomPlot::axisRectAt (const QPointF & pos) const}}
\par
{\bkmkstart AAAAAAAETQ}
{\bkmkend AAAAAAAETQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisRectCount\:QCustomPlot}
{\xe \v QCustomPlot\:axisRectCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::axisRectCount () const}}
\par
{\bkmkstart AAAAAAAETR}
{\bkmkend AAAAAAAETR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisRects\:QCustomPlot}
{\xe \v QCustomPlot\:axisRects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxisRect} * > QCustomPlot::axisRects () const}}
\par
{\bkmkstart AAAAAAAETS}
{\bkmkend AAAAAAAETS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v axisRemoved\:QCustomPlot}
{\xe \v QCustomPlot\:axisRemoved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::axisRemoved ({\b QCPAxis} * axis){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAETT}
{\bkmkend AAAAAAAETT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v background\:QCustomPlot}
{\xe \v QCustomPlot\:background}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCustomPlot::background () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAETU}
{\bkmkend AAAAAAAETU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundScaled\:QCustomPlot}
{\xe \v QCustomPlot\:backgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::backgroundScaled () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAETV}
{\bkmkend AAAAAAAETV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backgroundScaledMode\:QCustomPlot}
{\xe \v QCustomPlot\:backgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCustomPlot::backgroundScaledMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAETW}
{\bkmkend AAAAAAAETW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v beforeReplot\:QCustomPlot}
{\xe \v QCustomPlot\:beforeReplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::beforeReplot (){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAETX}
{\bkmkend AAAAAAAETX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bufferDevicePixelRatio\:QCustomPlot}
{\xe \v QCustomPlot\:bufferDevicePixelRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCustomPlot::bufferDevicePixelRatio () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAETY}
{\bkmkend AAAAAAAETY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearGraphs\:QCustomPlot}
{\xe \v QCustomPlot\:clearGraphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::clearGraphs ()}}
\par
{\bkmkstart AAAAAAAETZ}
{\bkmkend AAAAAAAETZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearItems\:QCustomPlot}
{\xe \v QCustomPlot\:clearItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::clearItems ()}}
\par
{\bkmkstart AAAAAAAEUA}
{\bkmkend AAAAAAAEUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearPlottables\:QCustomPlot}
{\xe \v QCustomPlot\:clearPlottables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::clearPlottables ()}}
\par
{\bkmkstart AAAAAAAEUB}
{\bkmkend AAAAAAAEUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createPaintBuffer\:QCustomPlot}
{\xe \v QCustomPlot\:createPaintBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPaintBuffer} * QCustomPlot::createPaintBuffer (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEUC}
{\bkmkend AAAAAAAEUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentLayer\:QCustomPlot}
{\xe \v QCustomPlot\:currentLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayer} * QCustomPlot::currentLayer () const}}
\par
{\bkmkstart AAAAAAAEUD}
{\bkmkend AAAAAAAEUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deselectAll\:QCustomPlot}
{\xe \v QCustomPlot\:deselectAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCustomPlot::deselectAll ()}}
\par
{\bkmkstart AAAAAAAEUE}
{\bkmkend AAAAAAAEUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v draw\:QCustomPlot}
{\xe \v QCustomPlot\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::draw ({\b QCPPainter} * painter){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEUF}
{\bkmkend AAAAAAAEUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drawBackground\:QCustomPlot}
{\xe \v QCustomPlot\:drawBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::drawBackground ({\b QCPPainter} * painter){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEUG}
{\bkmkend AAAAAAAEUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v freeOpenGl\:QCustomPlot}
{\xe \v QCustomPlot\:freeOpenGl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::freeOpenGl (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEUH}
{\bkmkend AAAAAAAEUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graph\:QCustomPlot}
{\xe \v QCustomPlot\:graph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGraph} * QCustomPlot::graph () const}}
\par
{\bkmkstart AAAAAAAEUI}
{\bkmkend AAAAAAAEUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graph\:QCustomPlot}
{\xe \v QCustomPlot\:graph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPGraph} * QCustomPlot::graph (int index) const}}
\par
{\bkmkstart AAAAAAAEUJ}
{\bkmkend AAAAAAAEUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v graphCount\:QCustomPlot}
{\xe \v QCustomPlot\:graphCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::graphCount () const}}
\par
{\bkmkstart AAAAAAAEUK}
{\bkmkend AAAAAAAEUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hasInvalidatedPaintBuffers\:QCustomPlot}
{\xe \v QCustomPlot\:hasInvalidatedPaintBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::hasInvalidatedPaintBuffers (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEUL}
{\bkmkend AAAAAAAEUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hasItem\:QCustomPlot}
{\xe \v QCustomPlot\:hasItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::hasItem ({\b QCPAbstractItem} * item) const}}
\par
{\bkmkstart AAAAAAAEUM}
{\bkmkend AAAAAAAEUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hasPlottable\:QCustomPlot}
{\xe \v QCustomPlot\:hasPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::hasPlottable ({\b QCPAbstractPlottable} * plottable) const}}
\par
{\bkmkstart AAAAAAAEUN}
{\bkmkend AAAAAAAEUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v interactions\:QCustomPlot}
{\xe \v QCustomPlot\:interactions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const QCP::Interactions QCustomPlot::interactions () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEUO}
{\bkmkend AAAAAAAEUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v item\:QCustomPlot}
{\xe \v QCustomPlot\:item}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractItem} * QCustomPlot::item () const}}
\par
{\bkmkstart AAAAAAAEUP}
{\bkmkend AAAAAAAEUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v item\:QCustomPlot}
{\xe \v QCustomPlot\:item}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractItem} * QCustomPlot::item (int index) const}}
\par
{\bkmkstart AAAAAAAEUQ}
{\bkmkend AAAAAAAEUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itemAt\:QCustomPlot}
{\xe \v QCustomPlot\:itemAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ItemType > ItemType * QCustomPlot::itemAt (const QPointF & pos, bool onlySelectable = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAEUR}
{\bkmkend AAAAAAAEUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the item at the pixel position {\i pos} . The item type (a {\b QCPAbstractItem} subclass) that shall be taken into consideration can be specified via the template parameter. Items that only consist of single lines (e.g. {\b QCPItemLine} or {\b QCPItemCurve}) have a tolerance band around them, see {\b setSelectionTolerance}. If multiple items come into consideration, the one closest to {\i pos}  is returned.\par
If {\i onlySelectable}  is true, only items that are selectable ({\b QCPAbstractItem::setSelectable}) are considered.\par
If there is no item at {\i pos} , returns {\f2 nullptr} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b plottableAt}, {\b layoutElementAt} \par
}}}}
{\xe \v itemAt\:QCustomPlot}
{\xe \v QCustomPlot\:itemAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractItem} * QCustomPlot::itemAt (const QPointF & pos, bool onlySelectable = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAEUS}
{\bkmkend AAAAAAAEUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itemClick\:QCustomPlot}
{\xe \v QCustomPlot\:itemClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::itemClick ({\b QCPAbstractItem} * item, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEUT}
{\bkmkend AAAAAAAEUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itemCount\:QCustomPlot}
{\xe \v QCustomPlot\:itemCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::itemCount () const}}
\par
{\bkmkstart AAAAAAAEUU}
{\bkmkend AAAAAAAEUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v itemDoubleClick\:QCustomPlot}
{\xe \v QCustomPlot\:itemDoubleClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::itemDoubleClick ({\b QCPAbstractItem} * item, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEUV}
{\bkmkend AAAAAAAEUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layer\:QCustomPlot}
{\xe \v QCustomPlot\:layer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayer} * QCustomPlot::layer (const QString & name) const}}
\par
{\bkmkstart AAAAAAAEUW}
{\bkmkend AAAAAAAEUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layer\:QCustomPlot}
{\xe \v QCustomPlot\:layer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayer} * QCustomPlot::layer (int index) const}}
\par
{\bkmkstart AAAAAAAEUX}
{\bkmkend AAAAAAAEUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layerableAt\:QCustomPlot}
{\xe \v QCustomPlot\:layerableAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayerable} * QCustomPlot::layerableAt (const QPointF & pos, bool onlySelectable, QVariant * selectionDetails = {\f2 nullptr}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEUY}
{\bkmkend AAAAAAAEUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layerableListAt\:QCustomPlot}
{\xe \v QCustomPlot\:layerableListAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPLayerable} * > QCustomPlot::layerableListAt (const QPointF & pos, bool onlySelectable, QList< QVariant > * selectionDetails = {\f2 nullptr}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEUZ}
{\bkmkend AAAAAAAEUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layerCount\:QCustomPlot}
{\xe \v QCustomPlot\:layerCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::layerCount () const}}
\par
{\bkmkstart AAAAAAAEVA}
{\bkmkend AAAAAAAEVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layoutElementAt\:QCustomPlot}
{\xe \v QCustomPlot\:layoutElementAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutElement} * QCustomPlot::layoutElementAt (const QPointF & pos) const}}
\par
{\bkmkstart AAAAAAAEVB}
{\bkmkend AAAAAAAEVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v legendClick\:QCustomPlot}
{\xe \v QCustomPlot\:legendClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::legendClick ({\b QCPLegend} * legend, {\b QCPAbstractLegendItem} * item, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVC}
{\bkmkend AAAAAAAEVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v legendDoubleClick\:QCustomPlot}
{\xe \v QCustomPlot\:legendDoubleClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::legendDoubleClick ({\b QCPLegend} * legend, {\b QCPAbstractLegendItem} * item, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVD}
{\bkmkend AAAAAAAEVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v legendRemoved\:QCustomPlot}
{\xe \v QCustomPlot\:legendRemoved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::legendRemoved ({\b QCPLegend} * legend){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVE}
{\bkmkend AAAAAAAEVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumSizeHint\:QCustomPlot}
{\xe \v QCustomPlot\:minimumSizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCustomPlot::minimumSizeHint () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVF}
{\bkmkend AAAAAAAEVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseDoubleClick\:QCustomPlot}
{\xe \v QCustomPlot\:mouseDoubleClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::mouseDoubleClick (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVG}
{\bkmkend AAAAAAAEVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseDoubleClickEvent\:QCustomPlot}
{\xe \v QCustomPlot\:mouseDoubleClickEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::mouseDoubleClickEvent (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVH}
{\bkmkend AAAAAAAEVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMove\:QCustomPlot}
{\xe \v QCustomPlot\:mouseMove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::mouseMove (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVI}
{\bkmkend AAAAAAAEVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseMoveEvent\:QCustomPlot}
{\xe \v QCustomPlot\:mouseMoveEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::mouseMoveEvent (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVJ}
{\bkmkend AAAAAAAEVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mousePress\:QCustomPlot}
{\xe \v QCustomPlot\:mousePress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::mousePress (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVK}
{\bkmkend AAAAAAAEVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mousePressEvent\:QCustomPlot}
{\xe \v QCustomPlot\:mousePressEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::mousePressEvent (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVL}
{\bkmkend AAAAAAAEVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseRelease\:QCustomPlot}
{\xe \v QCustomPlot\:mouseRelease}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::mouseRelease (QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVM}
{\bkmkend AAAAAAAEVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseReleaseEvent\:QCustomPlot}
{\xe \v QCustomPlot\:mouseReleaseEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::mouseReleaseEvent (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVN}
{\bkmkend AAAAAAAEVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mouseWheel\:QCustomPlot}
{\xe \v QCustomPlot\:mouseWheel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::mouseWheel (QWheelEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEVO}
{\bkmkend AAAAAAAEVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v moveLayer\:QCustomPlot}
{\xe \v QCustomPlot\:moveLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::moveLayer ({\b QCPLayer} * layer, {\b QCPLayer} * otherLayer, {\b LayerInsertMode} insertMode = {\f2 {\b limAbove}})}}
\par
{\bkmkstart AAAAAAAEVP}
{\bkmkend AAAAAAAEVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v multiSelectModifier\:QCustomPlot}
{\xe \v QCustomPlot\:multiSelectModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::KeyboardModifier QCustomPlot::multiSelectModifier () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEVQ}
{\bkmkend AAAAAAAEVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v noAntialiasingOnDrag\:QCustomPlot}
{\xe \v QCustomPlot\:noAntialiasingOnDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::noAntialiasingOnDrag () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEVR}
{\bkmkend AAAAAAAEVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v notAntialiasedElements\:QCustomPlot}
{\xe \v QCustomPlot\:notAntialiasedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCustomPlot::notAntialiasedElements () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEVS}
{\bkmkend AAAAAAAEVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v openGl\:QCustomPlot}
{\xe \v QCustomPlot\:openGl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::openGl () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEVT}
{\bkmkend AAAAAAAEVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v paintEvent\:QCustomPlot}
{\xe \v QCustomPlot\:paintEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::paintEvent (QPaintEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEVU}
{\bkmkend AAAAAAAEVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plotLayout\:QCustomPlot}
{\xe \v QCustomPlot\:plotLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutGrid} * QCustomPlot::plotLayout () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEVV}
{\bkmkend AAAAAAAEVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottable\:QCustomPlot}
{\xe \v QCustomPlot\:plottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable} * QCustomPlot::plottable ()}}
\par
{\bkmkstart AAAAAAAEVW}
{\bkmkend AAAAAAAEVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottable\:QCustomPlot}
{\xe \v QCustomPlot\:plottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable} * QCustomPlot::plottable (int index)}}
\par
{\bkmkstart AAAAAAAEVX}
{\bkmkend AAAAAAAEVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottableAt\:QCustomPlot}
{\xe \v QCustomPlot\:plottableAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class PlottableType > PlottableType * QCustomPlot::plottableAt (const QPointF & pos, bool onlySelectable = {\f2 false}, int * dataIndex = {\f2 nullptr}) const}}
\par
{\bkmkstart AAAAAAAEVY}
{\bkmkend AAAAAAAEVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the plottable at the pixel position {\i pos} . The plottable type (a {\b QCPAbstractPlottable} subclass) that shall be taken into consideration can be specified via the template parameter.\par
Plottables that only consist of single lines (like graphs) have a tolerance band around them, see {\b setSelectionTolerance}. If multiple plottables come into consideration, the one closest to {\i pos}  is returned.\par
If {\i onlySelectable}  is true, only plottables that are selectable ({\b QCPAbstractPlottable::setSelectable}) are considered.\par
if {\i dataIndex}  is non-null, it is set to the index of the plottable's data point that is closest to {\i pos} .\par
If there is no plottable of the specified type at {\i pos} , returns {\f2 nullptr} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b itemAt}, {\b layoutElementAt} \par
}}}}
{\xe \v plottableAt\:QCustomPlot}
{\xe \v QCustomPlot\:plottableAt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAbstractPlottable} * QCustomPlot::plottableAt (const QPointF & pos, bool onlySelectable = {\f2 false}, int * dataIndex = {\f2 nullptr}) const}}
\par
{\bkmkstart AAAAAAAEVZ}
{\bkmkend AAAAAAAEVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottableClick\:QCustomPlot}
{\xe \v QCustomPlot\:plottableClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::plottableClick ({\b QCPAbstractPlottable} * plottable, int dataIndex, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEWA}
{\bkmkend AAAAAAAEWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottableCount\:QCustomPlot}
{\xe \v QCustomPlot\:plottableCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::plottableCount () const}}
\par
{\bkmkstart AAAAAAAEWB}
{\bkmkend AAAAAAAEWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottableDoubleClick\:QCustomPlot}
{\xe \v QCustomPlot\:plottableDoubleClick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::plottableDoubleClick ({\b QCPAbstractPlottable} * plottable, int dataIndex, QMouseEvent * event){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEWC}
{\bkmkend AAAAAAAEWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plottingHints\:QCustomPlot}
{\xe \v QCustomPlot\:plottingHints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::PlottingHints QCustomPlot::plottingHints () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEWD}
{\bkmkend AAAAAAAEWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v processPointSelection\:QCustomPlot}
{\xe \v QCustomPlot\:processPointSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Q_SLOT void QCustomPlot::processPointSelection (QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEWE}
{\bkmkend AAAAAAAEWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v processRectSelection\:QCustomPlot}
{\xe \v QCustomPlot\:processRectSelection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Q_SLOT void QCustomPlot::processRectSelection (QRect rect, QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEWF}
{\bkmkend AAAAAAAEWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v processRectZoom\:QCustomPlot}
{\xe \v QCustomPlot\:processRectZoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Q_SLOT void QCustomPlot::processRectZoom (QRect rect, QMouseEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEWG}
{\bkmkend AAAAAAAEWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerGraph\:QCustomPlot}
{\xe \v QCustomPlot\:registerGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::registerGraph ({\b QCPGraph} * graph){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEWH}
{\bkmkend AAAAAAAEWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerItem\:QCustomPlot}
{\xe \v QCustomPlot\:registerItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::registerItem ({\b QCPAbstractItem} * item){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEWI}
{\bkmkend AAAAAAAEWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v registerPlottable\:QCustomPlot}
{\xe \v QCustomPlot\:registerPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::registerPlottable ({\b QCPAbstractPlottable} * plottable){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEWJ}
{\bkmkend AAAAAAAEWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeGraph\:QCustomPlot}
{\xe \v QCustomPlot\:removeGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removeGraph (int index)}}
\par
{\bkmkstart AAAAAAAEWK}
{\bkmkend AAAAAAAEWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeGraph\:QCustomPlot}
{\xe \v QCustomPlot\:removeGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removeGraph ({\b QCPGraph} * graph)}}
\par
{\bkmkstart AAAAAAAEWL}
{\bkmkend AAAAAAAEWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeItem\:QCustomPlot}
{\xe \v QCustomPlot\:removeItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removeItem (int index)}}
\par
{\bkmkstart AAAAAAAEWM}
{\bkmkend AAAAAAAEWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeItem\:QCustomPlot}
{\xe \v QCustomPlot\:removeItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removeItem ({\b QCPAbstractItem} * item)}}
\par
{\bkmkstart AAAAAAAEWN}
{\bkmkend AAAAAAAEWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removeLayer\:QCustomPlot}
{\xe \v QCustomPlot\:removeLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removeLayer ({\b QCPLayer} * layer)}}
\par
{\bkmkstart AAAAAAAEWO}
{\bkmkend AAAAAAAEWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removePlottable\:QCustomPlot}
{\xe \v QCustomPlot\:removePlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removePlottable (int index)}}
\par
{\bkmkstart AAAAAAAEWP}
{\bkmkend AAAAAAAEWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v removePlottable\:QCustomPlot}
{\xe \v QCustomPlot\:removePlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::removePlottable ({\b QCPAbstractPlottable} * plottable)}}
\par
{\bkmkstart AAAAAAAEWQ}
{\bkmkend AAAAAAAEWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v replot\:QCustomPlot}
{\xe \v QCustomPlot\:replot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCustomPlot::replot ({\b QCustomPlot::RefreshPriority} refreshPriority = {\f2 {\b QCustomPlot::rpRefreshHint}})}}
\par
{\bkmkstart AAAAAAAEWR}
{\bkmkend AAAAAAAEWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v replotTime\:QCustomPlot}
{\xe \v QCustomPlot\:replotTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCustomPlot::replotTime (bool average = {\f2 false}) const}}
\par
{\bkmkstart AAAAAAAEWS}
{\bkmkend AAAAAAAEWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rescaleAxes\:QCustomPlot}
{\xe \v QCustomPlot\:rescaleAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_SLOT void QCustomPlot::rescaleAxes (bool onlyVisiblePlottables = {\f2 false})}}
\par
{\bkmkstart AAAAAAAEWT}
{\bkmkend AAAAAAAEWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resizeEvent\:QCustomPlot}
{\xe \v QCustomPlot\:resizeEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::resizeEvent (QResizeEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEWU}
{\bkmkend AAAAAAAEWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saveBmp\:QCustomPlot}
{\xe \v QCustomPlot\:saveBmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::saveBmp (const QString & fileName, int width = {\f2 0}, int height = {\f2 0}, double scale = {\f2 1.0}, int resolution = {\f2 96}, {\b QCP::ResolutionUnit} resolutionUnit = {\f2 {\b QCP::ruDotsPerInch}})}}
\par
{\bkmkstart AAAAAAAEWV}
{\bkmkend AAAAAAAEWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saveJpg\:QCustomPlot}
{\xe \v QCustomPlot\:saveJpg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::saveJpg (const QString & fileName, int width = {\f2 0}, int height = {\f2 0}, double scale = {\f2 1.0}, int quality = {\f2 -1}, int resolution = {\f2 96}, {\b QCP::ResolutionUnit} resolutionUnit = {\f2 {\b QCP::ruDotsPerInch}})}}
\par
{\bkmkstart AAAAAAAEWW}
{\bkmkend AAAAAAAEWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v savePdf\:QCustomPlot}
{\xe \v QCustomPlot\:savePdf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::savePdf (const QString & fileName, int width = {\f2 0}, int height = {\f2 0}, {\b QCP::ExportPen} exportPen = {\f2 {\b QCP::epAllowCosmetic}}, const QString & pdfCreator = {\f2 QString()}, const QString & pdfTitle = {\f2 QString()})}}
\par
{\bkmkstart AAAAAAAEWX}
{\bkmkend AAAAAAAEWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v savePng\:QCustomPlot}
{\xe \v QCustomPlot\:savePng}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::savePng (const QString & fileName, int width = {\f2 0}, int height = {\f2 0}, double scale = {\f2 1.0}, int quality = {\f2 -1}, int resolution = {\f2 96}, {\b QCP::ResolutionUnit} resolutionUnit = {\f2 {\b QCP::ruDotsPerInch}})}}
\par
{\bkmkstart AAAAAAAEWY}
{\bkmkend AAAAAAAEWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saveRastered\:QCustomPlot}
{\xe \v QCustomPlot\:saveRastered}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::saveRastered (const QString & fileName, int width, int height, double scale, const char * format, int quality = {\f2 -1}, int resolution = {\f2 96}, {\b QCP::ResolutionUnit} resolutionUnit = {\f2 {\b QCP::ruDotsPerInch}})}}
\par
{\bkmkstart AAAAAAAEWZ}
{\bkmkend AAAAAAAEWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedAxes\:QCustomPlot}
{\xe \v QCustomPlot\:selectedAxes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAxis} * > QCustomPlot::selectedAxes () const}}
\par
{\bkmkstart AAAAAAAEXA}
{\bkmkend AAAAAAAEXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedGraphs\:QCustomPlot}
{\xe \v QCustomPlot\:selectedGraphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPGraph} * > QCustomPlot::selectedGraphs () const}}
\par
{\bkmkstart AAAAAAAEXB}
{\bkmkend AAAAAAAEXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedItems\:QCustomPlot}
{\xe \v QCustomPlot\:selectedItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractItem} * > QCustomPlot::selectedItems () const}}
\par
{\bkmkstart AAAAAAAEXC}
{\bkmkend AAAAAAAEXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedLegends\:QCustomPlot}
{\xe \v QCustomPlot\:selectedLegends}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPLegend} * > QCustomPlot::selectedLegends () const}}
\par
{\bkmkstart AAAAAAAEXD}
{\bkmkend AAAAAAAEXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectedPlottables\:QCustomPlot}
{\xe \v QCustomPlot\:selectedPlottables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList< {\b QCPAbstractPlottable} * > QCustomPlot::selectedPlottables () const}}
\par
{\bkmkstart AAAAAAAEXE}
{\bkmkend AAAAAAAEXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionChangedByUser\:QCustomPlot}
{\xe \v QCustomPlot\:selectionChangedByUser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::selectionChangedByUser (){\f2 [signal]}}}
\par
{\bkmkstart AAAAAAAEXF}
{\bkmkend AAAAAAAEXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionRect\:QCustomPlot}
{\xe \v QCustomPlot\:selectionRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPSelectionRect} * QCustomPlot::selectionRect () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEXG}
{\bkmkend AAAAAAAEXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionRectMode\:QCustomPlot}
{\xe \v QCustomPlot\:selectionRectMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCP::SelectionRectMode} QCustomPlot::selectionRectMode () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEXH}
{\bkmkend AAAAAAAEXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selectionTolerance\:QCustomPlot}
{\xe \v QCustomPlot\:selectionTolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::selectionTolerance () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEXI}
{\bkmkend AAAAAAAEXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedElement\:QCustomPlot}
{\xe \v QCustomPlot\:setAntialiasedElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setAntialiasedElement ({\b QCP::AntialiasedElement} antialiasedElement, bool enabled = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEXJ}
{\bkmkend AAAAAAAEXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAntialiasedElements\:QCustomPlot}
{\xe \v QCustomPlot\:setAntialiasedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setAntialiasedElements (const QCP::AntialiasedElements & antialiasedElements)}}
\par
{\bkmkstart AAAAAAAEXK}
{\bkmkend AAAAAAAEXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setAutoAddPlottableToLegend\:QCustomPlot}
{\xe \v QCustomPlot\:setAutoAddPlottableToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setAutoAddPlottableToLegend (bool on)}}
\par
{\bkmkstart AAAAAAAEXL}
{\bkmkend AAAAAAAEXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCustomPlot}
{\xe \v QCustomPlot\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setBackground (const QBrush & brush)}}
\par
{\bkmkstart AAAAAAAEXM}
{\bkmkend AAAAAAAEXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCustomPlot}
{\xe \v QCustomPlot\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setBackground (const QPixmap & pm)}}
\par
{\bkmkstart AAAAAAAEXN}
{\bkmkend AAAAAAAEXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackground\:QCustomPlot}
{\xe \v QCustomPlot\:setBackground}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setBackground (const QPixmap & pm, bool scaled, Qt::AspectRatioMode mode = {\f2 Qt::KeepAspectRatioByExpanding})}}
\par
{\bkmkstart AAAAAAAEXO}
{\bkmkend AAAAAAAEXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackgroundScaled\:QCustomPlot}
{\xe \v QCustomPlot\:setBackgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setBackgroundScaled (bool scaled)}}
\par
{\bkmkstart AAAAAAAEXP}
{\bkmkend AAAAAAAEXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBackgroundScaledMode\:QCustomPlot}
{\xe \v QCustomPlot\:setBackgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setBackgroundScaledMode (Qt::AspectRatioMode mode)}}
\par
{\bkmkstart AAAAAAAEXQ}
{\bkmkend AAAAAAAEXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setBufferDevicePixelRatio\:QCustomPlot}
{\xe \v QCustomPlot\:setBufferDevicePixelRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setBufferDevicePixelRatio (double ratio)}}
\par
{\bkmkstart AAAAAAAEXR}
{\bkmkend AAAAAAAEXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCurrentLayer\:QCustomPlot}
{\xe \v QCustomPlot\:setCurrentLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::setCurrentLayer (const QString & name)}}
\par
{\bkmkstart AAAAAAAEXS}
{\bkmkend AAAAAAAEXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setCurrentLayer\:QCustomPlot}
{\xe \v QCustomPlot\:setCurrentLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::setCurrentLayer ({\b QCPLayer} * layer)}}
\par
{\bkmkstart AAAAAAAEXT}
{\bkmkend AAAAAAAEXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInteraction\:QCustomPlot}
{\xe \v QCustomPlot\:setInteraction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setInteraction (const {\b QCP::Interaction} & interaction, bool enabled = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEXU}
{\bkmkend AAAAAAAEXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setInteractions\:QCustomPlot}
{\xe \v QCustomPlot\:setInteractions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setInteractions (const QCP::Interactions & interactions)}}
\par
{\bkmkstart AAAAAAAEXV}
{\bkmkend AAAAAAAEXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setMultiSelectModifier\:QCustomPlot}
{\xe \v QCustomPlot\:setMultiSelectModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setMultiSelectModifier (Qt::KeyboardModifier modifier)}}
\par
{\bkmkstart AAAAAAAEXW}
{\bkmkend AAAAAAAEXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNoAntialiasingOnDrag\:QCustomPlot}
{\xe \v QCustomPlot\:setNoAntialiasingOnDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setNoAntialiasingOnDrag (bool enabled)}}
\par
{\bkmkstart AAAAAAAEXX}
{\bkmkend AAAAAAAEXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNotAntialiasedElement\:QCustomPlot}
{\xe \v QCustomPlot\:setNotAntialiasedElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setNotAntialiasedElement ({\b QCP::AntialiasedElement} notAntialiasedElement, bool enabled = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEXY}
{\bkmkend AAAAAAAEXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setNotAntialiasedElements\:QCustomPlot}
{\xe \v QCustomPlot\:setNotAntialiasedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setNotAntialiasedElements (const QCP::AntialiasedElements & notAntialiasedElements)}}
\par
{\bkmkstart AAAAAAAEXZ}
{\bkmkend AAAAAAAEXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setOpenGl\:QCustomPlot}
{\xe \v QCustomPlot\:setOpenGl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setOpenGl (bool enabled, int multisampling = {\f2 16})}}
\par
{\bkmkstart AAAAAAAEYA}
{\bkmkend AAAAAAAEYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPlottingHint\:QCustomPlot}
{\xe \v QCustomPlot\:setPlottingHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setPlottingHint ({\b QCP::PlottingHint} hint, bool enabled = {\f2 true})}}
\par
{\bkmkstart AAAAAAAEYB}
{\bkmkend AAAAAAAEYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPlottingHints\:QCustomPlot}
{\xe \v QCustomPlot\:setPlottingHints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setPlottingHints (const QCP::PlottingHints & hints)}}
\par
{\bkmkstart AAAAAAAEYC}
{\bkmkend AAAAAAAEYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectionRect\:QCustomPlot}
{\xe \v QCustomPlot\:setSelectionRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setSelectionRect ({\b QCPSelectionRect} * selectionRect)}}
\par
{\bkmkstart AAAAAAAEYD}
{\bkmkend AAAAAAAEYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectionRectMode\:QCustomPlot}
{\xe \v QCustomPlot\:setSelectionRectMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setSelectionRectMode ({\b QCP::SelectionRectMode} mode)}}
\par
{\bkmkstart AAAAAAAEYE}
{\bkmkend AAAAAAAEYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectionTolerance\:QCustomPlot}
{\xe \v QCustomPlot\:setSelectionTolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setSelectionTolerance (int pixels)}}
\par
{\bkmkstart AAAAAAAEYF}
{\bkmkend AAAAAAAEYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupOpenGl\:QCustomPlot}
{\xe \v QCustomPlot\:setupOpenGl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::setupOpenGl (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEYG}
{\bkmkend AAAAAAAEYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setupPaintBuffers\:QCustomPlot}
{\xe \v QCustomPlot\:setupPaintBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setupPaintBuffers (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEYH}
{\bkmkend AAAAAAAEYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setViewport\:QCustomPlot}
{\xe \v QCustomPlot\:setViewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::setViewport (const QRect & rect)}}
\par
{\bkmkstart AAAAAAAEYI}
{\bkmkend AAAAAAAEYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sizeHint\:QCustomPlot}
{\xe \v QCustomPlot\:sizeHint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual QSize QCustomPlot::sizeHint () const{\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEYJ}
{\bkmkend AAAAAAAEYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toPainter\:QCustomPlot}
{\xe \v QCustomPlot\:toPainter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::toPainter ({\b QCPPainter} * painter, int width = {\f2 0}, int height = {\f2 0})}}
\par
{\bkmkstart AAAAAAAEYK}
{\bkmkend AAAAAAAEYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v toPixmap\:QCustomPlot}
{\xe \v QCustomPlot\:toPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCustomPlot::toPixmap (int width = {\f2 0}, int height = {\f2 0}, double scale = {\f2 1.0})}}
\par
{\bkmkstart AAAAAAAEYL}
{\bkmkend AAAAAAAEYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateLayerIndices\:QCustomPlot}
{\xe \v QCustomPlot\:updateLayerIndices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void QCustomPlot::updateLayerIndices () const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEYM}
{\bkmkend AAAAAAAEYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateLayout\:QCustomPlot}
{\xe \v QCustomPlot\:updateLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::updateLayout (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEYN}
{\bkmkend AAAAAAAEYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v viewport\:QCustomPlot}
{\xe \v QCustomPlot\:viewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCustomPlot::viewport () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAEYO}
{\bkmkend AAAAAAAEYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wheelEvent\:QCustomPlot}
{\xe \v QCustomPlot\:wheelEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void QCustomPlot::wheelEvent (QWheelEvent * event){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAEYP}
{\bkmkend AAAAAAAEYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v QCPAbstractItem\:QCustomPlot}
{\xe \v QCustomPlot\:QCPAbstractItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAbstractItem}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYQ}
{\bkmkend AAAAAAAEYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPAbstractPlottable\:QCustomPlot}
{\xe \v QCustomPlot\:QCPAbstractPlottable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAbstractPlottable}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYR}
{\bkmkend AAAAAAAEYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPAxis\:QCustomPlot}
{\xe \v QCustomPlot\:QCPAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAxis}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYS}
{\bkmkend AAAAAAAEYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPAxisRect\:QCustomPlot}
{\xe \v QCustomPlot\:QCPAxisRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPAxisRect}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYT}
{\bkmkend AAAAAAAEYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPGraph\:QCustomPlot}
{\xe \v QCustomPlot\:QCPGraph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPGraph}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYU}
{\bkmkend AAAAAAAEYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPLayer\:QCustomPlot}
{\xe \v QCustomPlot\:QCPLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLayer}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYV}
{\bkmkend AAAAAAAEYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCPLegend\:QCustomPlot}
{\xe \v QCustomPlot\:QCPLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b QCPLegend}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAEYW}
{\bkmkend AAAAAAAEYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v legend\:QCustomPlot}
{\xe \v QCustomPlot\:legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLegend}* QCustomPlot::legend}}
\par
{\bkmkstart AAAAAAAEYX}
{\bkmkend AAAAAAAEYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAntialiasedElements\:QCustomPlot}
{\xe \v QCustomPlot\:mAntialiasedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCustomPlot::mAntialiasedElements{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEYY}
{\bkmkend AAAAAAAEYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mAutoAddPlottableToLegend\:QCustomPlot}
{\xe \v QCustomPlot\:mAutoAddPlottableToLegend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mAutoAddPlottableToLegend{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEYZ}
{\bkmkend AAAAAAAEYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundBrush\:QCustomPlot}
{\xe \v QCustomPlot\:mBackgroundBrush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QBrush QCustomPlot::mBackgroundBrush{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZA}
{\bkmkend AAAAAAAEZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundPixmap\:QCustomPlot}
{\xe \v QCustomPlot\:mBackgroundPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCustomPlot::mBackgroundPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZB}
{\bkmkend AAAAAAAEZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundScaled\:QCustomPlot}
{\xe \v QCustomPlot\:mBackgroundScaled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mBackgroundScaled{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZC}
{\bkmkend AAAAAAAEZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBackgroundScaledMode\:QCustomPlot}
{\xe \v QCustomPlot\:mBackgroundScaledMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::AspectRatioMode QCustomPlot::mBackgroundScaledMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZD}
{\bkmkend AAAAAAAEZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mBufferDevicePixelRatio\:QCustomPlot}
{\xe \v QCustomPlot\:mBufferDevicePixelRatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCustomPlot::mBufferDevicePixelRatio{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZE}
{\bkmkend AAAAAAAEZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mCurrentLayer\:QCustomPlot}
{\xe \v QCustomPlot\:mCurrentLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayer}* QCustomPlot::mCurrentLayer{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZF}
{\bkmkend AAAAAAAEZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mGraphs\:QCustomPlot}
{\xe \v QCustomPlot\:mGraphs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPGraph}*> QCustomPlot::mGraphs{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZG}
{\bkmkend AAAAAAAEZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mInteractions\:QCustomPlot}
{\xe \v QCustomPlot\:mInteractions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::Interactions QCustomPlot::mInteractions{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZH}
{\bkmkend AAAAAAAEZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mItems\:QCustomPlot}
{\xe \v QCustomPlot\:mItems}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPAbstractItem}*> QCustomPlot::mItems{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZI}
{\bkmkend AAAAAAAEZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mLayers\:QCustomPlot}
{\xe \v QCustomPlot\:mLayers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPLayer}*> QCustomPlot::mLayers{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZJ}
{\bkmkend AAAAAAAEZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMouseEventLayerable\:QCustomPlot}
{\xe \v QCustomPlot\:mMouseEventLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPLayerable}> QCustomPlot::mMouseEventLayerable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZK}
{\bkmkend AAAAAAAEZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMouseEventLayerableDetails\:QCustomPlot}
{\xe \v QCustomPlot\:mMouseEventLayerableDetails}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVariant QCustomPlot::mMouseEventLayerableDetails{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZL}
{\bkmkend AAAAAAAEZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMouseHasMoved\:QCustomPlot}
{\xe \v QCustomPlot\:mMouseHasMoved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mMouseHasMoved{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZM}
{\bkmkend AAAAAAAEZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMousePressPos\:QCustomPlot}
{\xe \v QCustomPlot\:mMousePressPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPoint QCustomPlot::mMousePressPos{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZN}
{\bkmkend AAAAAAAEZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMouseSignalLayerable\:QCustomPlot}
{\xe \v QCustomPlot\:mMouseSignalLayerable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPointer<{\b QCPLayerable}> QCustomPlot::mMouseSignalLayerable{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZO}
{\bkmkend AAAAAAAEZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMouseSignalLayerableDetails\:QCustomPlot}
{\xe \v QCustomPlot\:mMouseSignalLayerableDetails}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QVariant QCustomPlot::mMouseSignalLayerableDetails{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZP}
{\bkmkend AAAAAAAEZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mMultiSelectModifier\:QCustomPlot}
{\xe \v QCustomPlot\:mMultiSelectModifier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Qt::KeyboardModifier QCustomPlot::mMultiSelectModifier{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZQ}
{\bkmkend AAAAAAAEZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNoAntialiasingOnDrag\:QCustomPlot}
{\xe \v QCustomPlot\:mNoAntialiasingOnDrag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mNoAntialiasingOnDrag{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZR}
{\bkmkend AAAAAAAEZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mNotAntialiasedElements\:QCustomPlot}
{\xe \v QCustomPlot\:mNotAntialiasedElements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCustomPlot::mNotAntialiasedElements{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZS}
{\bkmkend AAAAAAAEZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOpenGl\:QCustomPlot}
{\xe \v QCustomPlot\:mOpenGl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mOpenGl{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZT}
{\bkmkend AAAAAAAEZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOpenGlAntialiasedElementsBackup\:QCustomPlot}
{\xe \v QCustomPlot\:mOpenGlAntialiasedElementsBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::AntialiasedElements QCustomPlot::mOpenGlAntialiasedElementsBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZU}
{\bkmkend AAAAAAAEZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOpenGlCacheLabelsBackup\:QCustomPlot}
{\xe \v QCustomPlot\:mOpenGlCacheLabelsBackup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mOpenGlCacheLabelsBackup{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZV}
{\bkmkend AAAAAAAEZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mOpenGlMultisamples\:QCustomPlot}
{\xe \v QCustomPlot\:mOpenGlMultisamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::mOpenGlMultisamples{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZW}
{\bkmkend AAAAAAAEZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPaintBuffers\:QCustomPlot}
{\xe \v QCustomPlot\:mPaintBuffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<QSharedPointer<{\b QCPAbstractPaintBuffer}> > QCustomPlot::mPaintBuffers{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZX}
{\bkmkend AAAAAAAEZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPlotLayout\:QCustomPlot}
{\xe \v QCustomPlot\:mPlotLayout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPLayoutGrid}* QCustomPlot::mPlotLayout{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZY}
{\bkmkend AAAAAAAEZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPlottables\:QCustomPlot}
{\xe \v QCustomPlot\:mPlottables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QList<{\b QCPAbstractPlottable}*> QCustomPlot::mPlottables{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAEZZ}
{\bkmkend AAAAAAAEZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mPlottingHints\:QCustomPlot}
{\xe \v QCustomPlot\:mPlottingHints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QCP::PlottingHints QCustomPlot::mPlottingHints{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAA}
{\bkmkend AAAAAAAFAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mReplotQueued\:QCustomPlot}
{\xe \v QCustomPlot\:mReplotQueued}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mReplotQueued{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAB}
{\bkmkend AAAAAAAFAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mReplotTime\:QCustomPlot}
{\xe \v QCustomPlot\:mReplotTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCustomPlot::mReplotTime{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAC}
{\bkmkend AAAAAAAFAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mReplotTimeAverage\:QCustomPlot}
{\xe \v QCustomPlot\:mReplotTimeAverage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double QCustomPlot::mReplotTimeAverage{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAD}
{\bkmkend AAAAAAAFAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mReplotting\:QCustomPlot}
{\xe \v QCustomPlot\:mReplotting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool QCustomPlot::mReplotting{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAE}
{\bkmkend AAAAAAAFAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mScaledBackgroundPixmap\:QCustomPlot}
{\xe \v QCustomPlot\:mScaledBackgroundPixmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QPixmap QCustomPlot::mScaledBackgroundPixmap{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAF}
{\bkmkend AAAAAAAFAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectionRect\:QCustomPlot}
{\xe \v QCustomPlot\:mSelectionRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPSelectionRect}* QCustomPlot::mSelectionRect{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAG}
{\bkmkend AAAAAAAFAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectionRectMode\:QCustomPlot}
{\xe \v QCustomPlot\:mSelectionRectMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCP::SelectionRectMode} QCustomPlot::mSelectionRectMode{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAH}
{\bkmkend AAAAAAAFAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mSelectionTolerance\:QCustomPlot}
{\xe \v QCustomPlot\:mSelectionTolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int QCustomPlot::mSelectionTolerance{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAI}
{\bkmkend AAAAAAAFAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mViewport\:QCustomPlot}
{\xe \v QCustomPlot\:mViewport}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCustomPlot::mViewport{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAFAJ}
{\bkmkend AAAAAAAFAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xAxis\:QCustomPlot}
{\xe \v QCustomPlot\:xAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis}* QCustomPlot::xAxis}}
\par
{\bkmkstart AAAAAAAFAK}
{\bkmkend AAAAAAAFAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xAxis2\:QCustomPlot}
{\xe \v QCustomPlot\:xAxis2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCustomPlot::xAxis2}}
\par
{\bkmkstart AAAAAAAFAL}
{\bkmkend AAAAAAAFAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yAxis\:QCustomPlot}
{\xe \v QCustomPlot\:yAxis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCustomPlot::yAxis}}
\par
{\bkmkstart AAAAAAAFAM}
{\bkmkend AAAAAAAFAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yAxis2\:QCustomPlot}
{\xe \v QCustomPlot\:yAxis2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b QCPAxis} * QCustomPlot::yAxis2}}
\par
{\bkmkstart AAAAAAAFAN}
{\bkmkend AAAAAAAFAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
QCPAxisPainterPrivate::TickLabelData Struct Reference\par \pard\plain 
{\tc\tcl2 \v QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData}
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\par
{
{\f2 #include <qcustomplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b basePart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b expPart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QString {\b suffixPart}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b baseBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b expBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b suffixBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b totalBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QRect {\b rotatedTotalBounds}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b baseFont}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
QFont {\b expFont}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v baseBounds\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:baseBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::TickLabelData::baseBounds}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v baseFont\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:baseFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxisPainterPrivate::TickLabelData::baseFont}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v basePart\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:basePart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisPainterPrivate::TickLabelData::basePart}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expBounds\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:expBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::TickLabelData::expBounds}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expFont\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:expFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QFont QCPAxisPainterPrivate::TickLabelData::expFont}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expPart\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:expPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisPainterPrivate::TickLabelData::expPart}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotatedTotalBounds\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:rotatedTotalBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::TickLabelData::rotatedTotalBounds}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v suffixBounds\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:suffixBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::TickLabelData::suffixBounds}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v suffixPart\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:suffixPart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QString QCPAxisPainterPrivate::TickLabelData::suffixPart}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v totalBounds\:QCPAxisPainterPrivate::TickLabelData}
{\xe \v QCPAxisPainterPrivate::TickLabelData\:totalBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
QRect QCPAxisPainterPrivate::TickLabelData::totalBounds}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/{\b qcustomplot.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/console.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/console.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/console.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QPlainTextEdit>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Console}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
console.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/console.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/console.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef CONSOLE_H}\par
27 {\cf21 #define CONSOLE_H}\par
28 \par
29 {\cf21 #include <QPlainTextEdit>}\par
30 \par
31 {\cf17 class }Console : {\cf17 public} QPlainTextEdit\par
32 \{\par
33     Q_OBJECT\par
34 \par
35 signals:\par
36     {\cf18 void} getData({\cf17 const} QByteArray &data);\par
37 \par
38 {\cf17 public}:\par
39     {\cf17 explicit} Console(QWidget *parent = {\cf17 nullptr});\par
40 \par
41     {\cf18 void} putData({\cf17 const} QByteArray &data);\par
42     {\cf18 void} setLocalEchoEnabled({\cf18 bool} set);\par
43 \par
44 {\cf17 protected}:\par
45     {\cf18 void} keyPressEvent(QKeyEvent *e) {\cf17 override};\par
46     {\cf18 void} mousePressEvent(QMouseEvent *e) {\cf17 override};\par
47     {\cf18 void} mouseDoubleClickEvent(QMouseEvent *e) {\cf17 override};\par
48     {\cf18 void} contextMenuEvent(QContextMenuEvent *e) {\cf17 override};\par
49 \par
50 {\cf17 private}:\par
51     {\cf18 bool} m_localEchoEnabled = {\cf17 false};\par
52 \};\par
53 \par
54 {\cf21 #endif }{\cf20 // CONSOLE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_about.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_about.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_about.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_about}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_about.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_about.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_about.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_ABOUT_H}\par
27 {\cf21 #define DIALOG_ABOUT_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_about;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_about : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_about(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_about();\par
42 \par
43 {\cf17 private}:\par
44     Ui::Dialog_about *ui;\par
45 \};\par
46 \par
47 {\cf21 #endif }{\cf20 // DIALOG_ABOUT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_dist.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_dist.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_dist.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_alarm_dist}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_alarm_dist.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_dist.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_dist.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_ALARM_DIST_H}\par
27 {\cf21 #define DIALOG_ALARM_DIST_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_alarm_dist;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_alarm_dist : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_alarm_dist(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_alarm_dist();\par
42 \par
43     {\cf18 void} load_data_alarm(QList<float>);\par
44     QList<float> alarm_data();\par
45     {\cf18 bool} alarm_on=0;\par
46     {\cf18 bool} alarm_activation();\par
47 \par
48 {\cf17 private} slots:\par
49     {\cf18 void} on_checkBox_toggled({\cf18 bool} checked);\par
50     {\cf18 void} on_doubleSpinBox_valueChanged({\cf18 double} arg1);\par
51     {\cf18 void} on_doubleSpinBox_2_valueChanged({\cf18 double} arg1);\par
52 \par
53 {\cf17 private}:\par
54     Ui::Dialog_alarm_dist *ui;\par
55 \};\par
56 \par
57 {\cf21 #endif }{\cf20 // DIALOG_ALARM_DIST_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_pos.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_pos.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_pos.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_alarm_pos}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_alarm_pos.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_pos.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_alarm_pos.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_ALARM_POS_H}\par
27 {\cf21 #define DIALOG_ALARM_POS_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_alarm_pos;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_alarm_pos : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_alarm_pos(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_alarm_pos();\par
42 \par
43     {\cf18 void} load_data_alarm(QList<float>);\par
44 \par
45     QList<float> alarm_data();\par
46 \par
47     {\cf18 bool} alarm_on=0;\par
48     {\cf18 bool} alarm_pos_on=0;\par
49     {\cf18 bool} alarm_activation();\par
50 \par
51     {\cf18 bool} alarm_x_enabled();\par
52     {\cf18 bool} alarm_y_enabled();\par
53     {\cf18 bool} alarm_z_enabled();\par
54 \par
55     {\cf18 bool} alarm_x_ena=0;\par
56     {\cf18 bool} alarm_y_ena=0;\par
57     {\cf18 bool} alarm_z_ena=0;\par
58 \par
59 {\cf17 private} slots:\par
60 \par
61     {\cf18 void} on_doubleSpinBox_valueChanged({\cf18 double} arg1);\par
62     {\cf18 void} on_doubleSpinBox_2_valueChanged({\cf18 double} arg1);\par
63     {\cf18 void} on_doubleSpinBox_5_valueChanged({\cf18 double} arg1);\par
64     {\cf18 void} on_doubleSpinBox_6_valueChanged({\cf18 double} arg1);\par
65     {\cf18 void} on_doubleSpinBox_7_valueChanged({\cf18 double} arg1);\par
66     {\cf18 void} on_doubleSpinBox_8_valueChanged({\cf18 double} arg1);\par
67     {\cf18 void} on_checkBox_toggled({\cf18 bool} checked);\par
68     {\cf18 void} on_checkBox_2_toggled({\cf18 bool} checked);\par
69     {\cf18 void} on_checkBox_3_toggled({\cf18 bool} checked);\par
70     {\cf18 void} on_checkBox_4_toggled({\cf18 bool} checked);\par
71 \par
72 {\cf17 private}:\par
73     Ui::Dialog_alarm_pos *ui;\par
74 \};\par
75 \par
76 {\cf21 #endif }{\cf20 // DIALOG_ALARM_POS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_csv.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_csv.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_csv.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include <QFileDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_csv}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_csv.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_csv.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_csv.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_CSV_H}\par
27 {\cf21 #define DIALOG_CSV_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 {\cf21 #include <QFileDialog>}\par
31 \par
32 {\cf17 namespace }Ui \{\par
33 {\cf17 class }Dialog_csv;\par
34 \}\par
35 \par
36 {\cf17 class }Dialog_csv : {\cf17 public} QDialog\par
37 \{\par
38     Q_OBJECT\par
39 \par
40 {\cf17 public}:\par
41     {\cf17 explicit} Dialog_csv(QWidget *parent = {\cf17 nullptr});\par
42     ~Dialog_csv();\par
43 \par
44     {\cf20 //QString rutaynombre_csv();}\par
45     QString folder_filename_csv();\par
46 \par
47 {\cf17 private} slots:\par
48     {\cf18 void} on_pushButton_clicked();\par
49 \par
50 {\cf17 private}:\par
51     Ui::Dialog_csv *ui;\par
52     QString folder_directory_csv;\par
53     QString filename_csv;\par
54     QString complete_folder_filename;\par
55 \};\par
56 \par
57 {\cf21 #endif }{\cf20 // DIALOG_CSV_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_deviceconfig.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_deviceconfig.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_deviceconfig.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_deviceconfig}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_deviceconfig.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_deviceconfig.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_deviceconfig.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_DEVICECONFIG_H}\par
27 {\cf21 #define DIALOG_DEVICECONFIG_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_deviceconfig;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_deviceconfig : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_deviceconfig(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_deviceconfig();\par
42 \par
43     {\cf18 int} func_mode=0;\par
44     QString network;\par
45     {\cf18 int} mode_processing();\par
46     QString network_processing();\par
47 \par
48 {\cf17 private} slots:\par
49     {\cf18 void} on_pushButton_clicked();\par
50     {\cf18 void} on_pushButton_2_clicked();\par
51     {\cf18 void} on_pushButton_3_clicked();\par
52     {\cf18 void} on_pushButton_4_clicked();\par
53 \par
54 {\cf17 private}:\par
55     Ui::Dialog_deviceconfig *ui;\par
56 \};\par
57 \par
58 {\cf21 #endif }{\cf20 // DIALOG_DEVICECONFIG_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_dist_graph_config.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_dist_graph_config.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_dist_graph_config.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_dist_graph_config}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_dist_graph_config.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_dist_graph_config.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_dist_graph_config.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_DIST_GRAPH_CONFIG_H}\par
27 {\cf21 #define DIALOG_DIST_GRAPH_CONFIG_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_dist_graph_config;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_dist_graph_config : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_dist_graph_config(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_dist_graph_config();\par
42 \par
43     {\cf18 bool} autorange_var=0;\par
44     QList<float> graph_data();\par
45     {\cf18 void} load_data(QList<float>);\par
46     {\cf18 bool} autorange();\par
47 \par
48 {\cf17 private} slots:\par
49     {\cf18 void} on_checkBox_toggled({\cf18 bool} checked);\par
50     {\cf18 void} on_uppervalue_valueChanged({\cf18 double} arg1);\par
51     {\cf18 void} on_lowervalue_valueChanged({\cf18 double} arg1);\par
52 \par
53 {\cf17 private}:\par
54     Ui::Dialog_dist_graph_config *ui;\par
55 \};\par
56 \par
57 {\cf21 #endif }{\cf20 // DIALOG_DIST_GRAPH_CONFIG_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_graph_history.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_graph_history.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_graph_history.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "qcustomplot.h"}\par
{\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_graph_history}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_graph_history.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_graph_history.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_graph_history.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_GRAPH_HISTORY_H}\par
27 {\cf21 #define DIALOG_GRAPH_HISTORY_H}\par
28 \par
29 {\cf21 #include "qcustomplot.h"}\par
30 {\cf21 #include <QDialog>}\par
31 \par
32 {\cf17 namespace }Ui \{\par
33 {\cf17 class }Dialog_graph_history;\par
34 \}\par
35 \par
36 {\cf17 class }Dialog_graph_history : {\cf17 public} QDialog\par
37 \{\par
38     Q_OBJECT\par
39 \par
40 {\cf17 public}:\par
41     {\cf17 explicit} Dialog_graph_history(QWidget *parent = {\cf17 nullptr});\par
42     ~Dialog_graph_history();\par
43 \par
44     {\cf18 void} setupRealtimeDataDemo();\par
45     {\cf18 void} setupRealtimeDataDemo3({\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double});\par
46     {\cf18 void} load_distances_1(QList<double>, {\cf18 double}, QString, {\cf18 double});\par
47     {\cf18 void} load_distances_2(QList<double>, {\cf18 double}, QString, {\cf18 double});\par
48     {\cf18 void} load_distances_3(QList<double>, {\cf18 double}, QString, {\cf18 double});\par
49     {\cf18 void} load_distances_4(QList<double>, {\cf18 double}, QString, {\cf18 double});\par
50     {\cf18 void} load_coordinates(QList<double>, QList<double>, QList<double>);\par
51     {\cf18 void} load_anchors({\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double});\par
52     {\cf18 void} max_range_graph({\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double});\par
53     {\cf18 bool} reset_variables();\par
54 \par
55     {\cf20 //void mousePress();}\par
56 \par
57 {\cf17 private} slots:\par
58 \par
59     {\cf18 void} on_pushButton_clicked();\par
60 \par
61     {\cf18 void} on_pushButton_2_clicked();\par
62 \par
63     {\cf18 void} on_checkBox_1_toggled({\cf18 bool} checked);\par
64     {\cf18 void} on_checkBox_2_toggled({\cf18 bool} checked);\par
65     {\cf18 void} on_checkBox_3_toggled({\cf18 bool} checked);\par
66     {\cf18 void} on_checkBox_4_toggled({\cf18 bool} checked);\par
67 \par
68     {\cf18 void} graph_interaction();\par
69 \par
70     {\cf18 void} on_pushButton_4_clicked();\par
71 \par
72     {\cf18 void} on_pushButton_3_clicked();\par
73 \par
74 {\cf17 private}:\par
75     Ui::Dialog_graph_history *ui;\par
76 \par
77     QPen graphPen_1;\par
78     QPen graphPen_2;\par
79     QPen graphPen_3;\par
80     QPen graphPen_4;\par
81     QPen graphPen_selected;\par
82 \par
83     QVector<double> data_list_d1;\par
84     QList<double> data_list_d2;\par
85     QList<double> data_list_d3;\par
86     QList<double> data_list_d4;\par
87 \par
88     QList<double> data_pos_x;\par
89     QList<double> data_pos_y;\par
90     QList<double> data_pos_z;\par
91 \par
92     {\cf18 double} max_dist1=0;\par
93     {\cf18 double} max_dist2=0;\par
94     {\cf18 double} max_dist3=0;\par
95     {\cf18 double} max_dist4=0;\par
96 \par
97     QString id_label_1;\par
98     QString id_label_2;\par
99     QString id_label_3;\par
100     QString id_label_4;\par
101 \par
102     {\cf18 double} maximum_y_range;\par
103     {\cf18 double} maximum_x_range;\par
104 \par
105     {\cf18 double} range_pos_y_min_c;\par
106     {\cf18 double} range_pos_y_max_c;\par
107     {\cf18 double} range_pos_x_min_c;\par
108     {\cf18 double} range_pos_x_max_c;\par
109 \par
110     {\cf18 bool} reset_values = 0;\par
111 \par
112 \};\par
113 \par
114 {\cf21 #endif }{\cf20 // DIALOG_GRAPH_HISTORY_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_mediafilter.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_mediafilter.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_mediafilter.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_mediafilter}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_mediafilter.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_mediafilter.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_mediafilter.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_MEDIAFILTER_H}\par
27 {\cf21 #define DIALOG_MEDIAFILTER_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_mediafilter;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_mediafilter : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_mediafilter(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_mediafilter();\par
42 \par
43     {\cf18 bool} alarm_linked=0;\par
44 \par
45     {\cf18 bool} media_enabled=0;\par
46 \par
47     QList<float> bufer_data();\par
48 \par
49     {\cf18 bool} link_alarm();\par
50 \par
51     {\cf18 bool} enable_mediafilter();\par
52 \par
53     {\cf18 void} load_data_bufer(QList<float>);\par
54 \par
55 {\cf17 private} slots:\par
56     {\cf18 void} on_checkBox_toggled({\cf18 bool} checked);\par
57 \par
58     {\cf18 void} on_checkBox_2_toggled({\cf18 bool} checked);\par
59 \par
60 {\cf17 private}:\par
61     Ui::Dialog_mediafilter *ui;\par
62 \};\par
63 \par
64 {\cf21 #endif }{\cf20 // DIALOG_MEDIAFILTER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_pos_graph_config.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_pos_graph_config.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_pos_graph_config.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_pos_graph_config}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_pos_graph_config.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_pos_graph_config.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_pos_graph_config.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_POS_GRAPH_CONFIG_H}\par
27 {\cf21 #define DIALOG_POS_GRAPH_CONFIG_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 \par
31 {\cf17 namespace }Ui \{\par
32 {\cf17 class }Dialog_pos_graph_config;\par
33 \}\par
34 \par
35 {\cf17 class }Dialog_pos_graph_config : {\cf17 public} QDialog\par
36 \{\par
37     Q_OBJECT\par
38 \par
39 {\cf17 public}:\par
40     {\cf17 explicit} Dialog_pos_graph_config(QWidget *parent = {\cf17 nullptr});\par
41     ~Dialog_pos_graph_config();\par
42 \par
43     {\cf18 bool} passive=0;\par
44     {\cf18 bool} passive_mode();\par
45     QList<float> anchor_data();\par
46     {\cf18 void} load_data(QList<float>);\par
47 \par
48 {\cf17 private} slots:\par
49     {\cf18 void} on_pushButton_clicked();\par
50     {\cf18 void} on_doubleSpinBox_11_valueChanged({\cf18 double} arg1);\par
51     {\cf18 void} on_doubleSpinBox_12_valueChanged({\cf18 double} arg1);\par
52     {\cf18 void} on_doubleSpinBox_9_valueChanged({\cf18 double} arg1);\par
53     {\cf18 void} on_doubleSpinBox_10_valueChanged({\cf18 double} arg1);\par
54 \par
55 {\cf17 private}:\par
56     Ui::Dialog_pos_graph_config *ui;\par
57 \};\par
58 \par
59 {\cf21 #endif }{\cf20 // DIALOG_POS_GRAPH_CONFIG_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_stats.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_stats.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_stats.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QDialog>}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QDateTime>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialog_stats}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dialog_stats.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_stats.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/dialog_stats.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef DIALOG_STATS_H}\par
27 {\cf21 #define DIALOG_STATS_H}\par
28 \par
29 {\cf21 #include <QDialog>}\par
30 {\cf21 #include <QFileDialog>}\par
31 {\cf21 #include <QDateTime>}\par
32 \par
33 {\cf17 namespace }Ui \{\par
34 {\cf17 class }Dialog_stats;\par
35 \}\par
36 \par
37 {\cf17 class }Dialog_stats : {\cf17 public} QDialog\par
38 \{\par
39     Q_OBJECT\par
40 \par
41 {\cf17 public}:\par
42     {\cf17 explicit} Dialog_stats(QWidget *parent = {\cf17 nullptr});\par
43     ~Dialog_stats();\par
44 \par
45     {\cf18 void} load_data_statistics_d1(QList<double>);\par
46     {\cf18 void} load_data_statistics_d2(QList<double>);\par
47     {\cf18 void} load_data_statistics_d3(QList<double>);\par
48     {\cf18 void} load_data_statistics_d4(QList<double>);\par
49 \par
50     {\cf18 void} load_data_statistics_pos_x(QList<double>);\par
51     {\cf18 void} load_data_statistics_pos_y(QList<double>);\par
52     {\cf18 void} load_data_statistics_pos_z(QList<double>);\par
53 \par
54     {\cf18 void} load_data_statistics_ids(QList<QString>);\par
55 \par
56     {\cf18 void} initialise_variables();\par
57     {\cf18 bool} reset_variables();\par
58     {\cf18 bool} enable_data_saving();\par
59     QString directory_folder_stat();\par
60 \par
61 {\cf17 private} slots:\par
62     {\cf18 void} on_pushButton_clicked();\par
63     {\cf18 void} on_pushButton_2_clicked();\par
64 \par
65 {\cf17 private}:\par
66     Ui::Dialog_stats *ui;\par
67 \par
68     {\cf18 bool} reset_values = 0;\par
69     QString save_folder;\par
70     QString file_name;\par
71     QString complete_dir;\par
72     {\cf18 bool} save_statistics=0;\par
73 \};\par
74 \par
75 {\cf21 #endif }{\cf20 // DIALOG_STATS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/mainwindow.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/mainwindow.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/mainwindow.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "qelapsedtimer.h"}\par
{\f2 #include "qtimer.h"}\par
{\f2 #include <QMainWindow>}\par
{\f2 #include "qcustomplot.h"}\par
{\f2 #include <QFileDialog>}\par
{\f2 #include <QSerialPort>}\par
{\f2 #include <QMessageBox>}\par
{\f2 #include <QPen>}\par
{\f2 #include <QTranslator>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MainWindow}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b Ui}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
mainwindow.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/mainwindow.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/mainwindow.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef MAINWINDOW_H}\par
27 {\cf21 #define MAINWINDOW_H}\par
28 \par
29 {\cf21 #include "qelapsedtimer.h"}\par
30 {\cf21 #include "qtimer.h"}\par
31 {\cf21 #include <QMainWindow>}\par
32 {\cf21 #include "qcustomplot.h"}\par
33 {\cf21 #include <QFileDialog>}\par
34 {\cf21 #include <QSerialPort>}\par
35 {\cf21 #include <QMessageBox>}\par
36 {\cf21 #include <QPen>}\par
37 {\cf21 #include <QTranslator>}\par
38 \par
39 QT_BEGIN_NAMESPACE\par
40 {\cf17 namespace }Ui \{\par
41 {\cf17 class }MainWindow;\par
42 \}\par
43 QT_END_NAMESPACE\par
44 \par
45 {\cf17 class }QSerialPort;\par
46 {\cf17 class }Console;\par
47 \par
48 {\cf17 class }MainWindow : {\cf17 public} QMainWindow\par
49 \{\par
50     Q_OBJECT\par
51 \par
52 {\cf17 protected}:\par
53     {\cf18 void} changeEvent(QEvent*);\par
54 \par
55 {\cf17 protected} slots:\par
56     {\cf20 // this slot is called by the language menu actions}\par
57     {\cf18 void} slotLanguageChanged(QAction* action);\par
58 \par
59 {\cf17 public}:\par
60     MainWindow(QWidget *parent = {\cf17 nullptr});\par
61     ~MainWindow();\par
62 \par
63     {\cf18 void} setupRealtimeDataDemo(QCustomPlot *customPlot);\par
64     {\cf18 void} setupRealtimeDataDemo2(QCustomPlot *customPlot);\par
65     {\cf18 void} setupRealtimeDataDemo3(QCustomPlot *customPlot);\par
66 \par
67     {\cf18 void} device_connection();\par
68     {\cf18 void} device_disconnection();\par
69     {\cf18 void} closeEvent (QCloseEvent *event);\par
70 \par
71 {\cf17 private} slots:\par
72 \par
73     {\cf20 // Connection:}\par
74 \par
75     {\cf18 void} writeData({\cf17 const} QByteArray &data);\par
76     {\cf18 void} readData();\par
77     {\cf18 void} sampletimechange_wait();\par
78     {\cf18 void} gpio_config();\par
79     {\cf18 void} device_config({\cf18 int});\par
80     {\cf18 void} passive_config();\par
81     {\cf18 void} network_config(QString);\par
82     {\cf20 //void informacion_sys();}\par
83     {\cf18 void} send_message(QString);\par
84     {\cf18 void} change_devicemode_wait();\par
85     {\cf18 void} receive_info();\par
86     {\cf18 void} receive_info_failure();\par
87 \par
88     {\cf20 // Graph functions:}\par
89 \par
90     {\cf18 void} distance_analysis({\cf17 const} QByteArray &data);\par
91     {\cf18 void} position_analysis({\cf17 const} QByteArray &data2);\par
92     {\cf18 void} realtimeDataSlot();\par
93 \par
94     {\cf18 void} media_calc();\par
95     {\cf18 void} media_calc_pos();\par
96 \par
97     {\cf18 void} distance_data_processing({\cf18 double}, {\cf18 double}, {\cf18 double}, {\cf18 double});\par
98     {\cf18 void} position_data_processing();\par
99     {\cf18 void} distance_stats_calc();\par
100     {\cf18 void} position_stats_calc();\par
101     {\cf18 void} reset_stats();\par
102 \par
103     {\cf18 void} save_distance_data(QDateTime hora);\par
104     {\cf18 void} save_position_data(QDateTime hora);\par
105     {\cf18 void} save_stats_data();\par
106 \par
107     {\cf18 void} check_distance_alarm();\par
108     {\cf18 void} check_position_alarm();\par
109     {\cf18 void} alarm_graph();\par
110     {\cf18 void} alarm_duration_f();\par
111     {\cf18 void} dist_alarm_activation_request();\par
112     {\cf18 void} pos_alarm_activation_request();\par
113     {\cf18 void} draw_alarm_pos();\par
114 \par
115     {\cf20 //void desactivar_recepcion();}\par
116     {\cf18 void} clear_gpio();\par
117     QColor obtain_color({\cf18 float});\par
118     {\cf18 void} gpio_clear_wait();\par
119 \par
120     {\cf18 void} timer_gpio8();\par
121     {\cf18 void} timer_gpio9();\par
122     {\cf18 void} timer_gpio10();\par
123     {\cf18 void} timer_gpio12();\par
124     {\cf18 void} pos_anchors();\par
125 \par
126     {\cf18 void} on_pushButton_USBportrefresh_clicked();\par
127     {\cf18 void} on_pushButton_connect_clicked();\par
128     {\cf18 void} on_pushButton_disconnect_clicked();\par
129     {\cf18 void} on_pushButton_distancemode_clicked();\par
130     {\cf18 void} on_pushButton_positionmode_clicked();\par
131     {\cf18 void} on_actionExit_triggered();\par
132     {\cf18 void} on_plot_distance_toggled({\cf18 bool} checked);\par
133     {\cf18 void} on_spinBox_sampletime_valueChanged({\cf18 int} arg1);\par
134     {\cf18 void} on_actionDistanceGraphSettings_triggered();\par
135     {\cf18 void} on_pushButton_2_clicked();\par
136     {\cf18 void} on_pushButton_clicked();\par
137     {\cf18 void} on_actionReset_triggered();\par
138     {\cf18 void} on_actionFactory_Reset_triggered();\par
139     {\cf18 void} on_actionDataSavingSettings_triggered();\par
140     {\cf18 void} on_actionStartDataSaving_triggered();\par
141     {\cf18 void} on_actionStopDataSaving_triggered();\par
142     {\cf18 void} on_actionPositionGraphSettings_triggered();\par
143     {\cf18 void} on_actionDeviceSettings_triggered();\par
144     {\cf18 void} on_pushButton_6_clicked();\par
145     {\cf18 void} on_pushButton_5_clicked();\par
146     {\cf18 void} on_comboBox_GPIO8_activated({\cf18 int} index);\par
147     {\cf18 void} on_comboBox_GPIO9_activated({\cf18 int} index);\par
148     {\cf18 void} on_comboBox_GPIO10_activated({\cf18 int} index);\par
149     {\cf18 void} on_comboBox_GPIO12_activated({\cf18 int} index);\par
150     {\cf18 void} on_pushButton_GPIO8_clicked();\par
151     {\cf18 void} on_pushButton_GPIO9_clicked();\par
152     {\cf18 void} on_pushButton_GPIO10_clicked();\par
153     {\cf18 void} on_pushButton_GPIO12_clicked();\par
154     {\cf18 void} on_actionStatistics_triggered();\par
155     {\cf18 void} on_actionAbout_triggered();\par
156     {\cf18 void} on_actionHelp_triggered();\par
157     {\cf18 void} on_actionHistogram_triggered();\par
158     {\cf18 void} on_actionReiniciar_los_datos_recibidos_triggered();\par
159 \par
160 {\cf17 private}:\par
161     {\cf20 // loads a language by the given language shortcur (e.g. de, en)}\par
162     {\cf18 void} loadLanguage({\cf17 const} QString& rLanguage);\par
163 \par
164     {\cf20 // creates the language menu dynamically from the content of m_langPath}\par
165     {\cf18 void} createLanguageMenu({\cf18 void});\par
166 \par
167 \par
168     Ui::MainWindow *ui;\par
169     QTranslator m_translator; {\cf20 // contains the translations for this application}\par
170     QTranslator m_translatorQt; {\cf20 // contains the translations for qt}\par
171     QString m_currLang; {\cf20 // contains the currently loaded language}\par
172     QString m_langPath; {\cf20 // Path of language files. This is always fixed to /languages.}\par
173 \par
174     QSerialPort *p_serie;\par
175 \par
176     {\cf20 // Initialise variables}\par
177 \par
178     {\cf18 bool} savedata=0;\par
179 \par
180     {\cf18 bool} multiple_measures=0;\par
181 \par
182     {\cf18 bool} info_ids_1=0;\par
183     {\cf18 bool} info_ids_2=0;\par
184     {\cf18 bool} info_ids_3=0;\par
185     {\cf18 bool} info_ids_4=0;\par
186 \par
187     QByteArray serial_message;\par
188     QByteArray position_message;\par
189     {\cf18 bool} receive_initial_info=0;\par
190     QByteArray info_message;\par
191     QString filename={\cf22 "C:/"};\par
192     QString filename_est;\par
193     QString chosenPort;\par
194     QString network;\par
195 \par
196     QTimer timer_sampletime;\par
197     QTimer dataTimer;\par
198     QTimer posTimer;\par
199     QTimer timer_gpioconfig;\par
200     QTimer timer_alarmdelay;\par
201     QTimer timer_alarmduration;\par
202     QTimer timer_opmodechange;\par
203     QTimer timer_infofailure;\par
204     QTimer timer_gpioclear;\par
205     {\cf18 bool} deactivate_GPIO=0;\par
206 \par
207     {\cf20 //int distance_samples_ID1=0; //Esto parece que no hace nada}\par
208     {\cf20 //int distance_samples_ID2=0;}\par
209     {\cf20 //int distance_samples_ID3=0;}\par
210     {\cf18 int} distance_samples_ID4=0; {\cf20 //S\'F3lo se usa esta variable (analizar)}\par
211     {\cf18 int} position_samples=0;\par
212 \par
213     QTimer tem_gpio8;\par
214     QTimer tem_gpio9;\par
215     QTimer tem_gpio10;\par
216     QTimer tem_gpio12;\par
217     {\cf18 int} desac_gpio=0;\par
218 \par
219     {\cf18 bool} datareception_enabled;\par
220     {\cf18 bool} passive_positioning=0;\par
221     {\cf18 bool} tag_positioning=0;\par
222 \par
223     {\cf18 bool} operation_mode=0;\par
224 \par
225     {\cf18 bool} enable_statistics=0;\par
226     {\cf18 double} distance_value_1;\par
227     {\cf18 double} distance_value_2;\par
228     {\cf18 double} distance_value_3;\par
229     {\cf18 double} distance_value_4;\par
230     {\cf18 double} mediafilter_value_1;\par
231     {\cf18 double} mediafilter_value_2;\par
232     {\cf18 double} mediafilter_value_3;\par
233     {\cf18 double} mediafilter_value_4;\par
234     {\cf18 double} accumulated_dist_1=0;\par
235     {\cf18 double} accumulated_dist_2=0;\par
236     {\cf18 double} accumulated_dist_3=0;\par
237     {\cf18 double} accumulated_dist_4=0;\par
238     {\cf18 double} position_data_samples=0;\par
239     {\cf18 double} received_data_quantity_1=0;\par
240     {\cf18 double} received_data_quantity_2=0;\par
241     {\cf18 double} received_data_quantity_3=0;\par
242     {\cf18 double} received_data_quantity_4=0;\par
243     {\cf18 double} min_value_1=1000;\par
244     {\cf18 double} max_value_1=0;\par
245     {\cf18 double} min_value_2=1000;\par
246     {\cf18 double} max_value_2=0;\par
247     {\cf18 double} min_value_3=1000;\par
248     {\cf18 double} max_value_3=0;\par
249     {\cf18 double} min_value_4=1000;\par
250     {\cf18 double} max_value_4=0;\par
251 \par
252     {\cf18 double} mode_1=0;\par
253     {\cf18 double} std_1=0;\par
254     {\cf18 double} range_1=0;\par
255     {\cf18 double} percentil_25_1=0;\par
256     {\cf18 double} percentil_75_1=0;\par
257 \par
258     {\cf18 double} mode_2=0;\par
259     {\cf18 double} std_2=0;\par
260     {\cf18 double} range_2=0;\par
261     {\cf18 double} percentil_25_2=0;\par
262     {\cf18 double} percentil_75_2=0;\par
263 \par
264     {\cf18 double} mode_3=0;\par
265     {\cf18 double} std_3=0;\par
266     {\cf18 double} range_3=0;\par
267     {\cf18 double} percentil_25_3=0;\par
268     {\cf18 double} percentil_75_3=0;\par
269 \par
270     {\cf18 double} mode_4=0;\par
271     {\cf18 double} std_4=0;\par
272     {\cf18 double} range_4=0;\par
273     {\cf18 double} percentil_25_4=0;\par
274     {\cf18 double} percentil_75_4=0;\par
275 \par
276     {\cf18 double} mode_x=0;\par
277     {\cf18 double} mode_y=0;\par
278     {\cf18 double} mode_z=0;\par
279     {\cf18 double} std_x=0;\par
280     {\cf18 double} std_y=0;\par
281     {\cf18 double} std_z=0;\par
282     {\cf18 double} max_x=-1000;\par
283     {\cf18 double} max_y=-1000;\par
284     {\cf18 double} max_z=-1000;\par
285     {\cf18 double} min_x=1000;\par
286     {\cf18 double} min_y=1000;\par
287     {\cf18 double} min_z=1000;\par
288     {\cf18 double} range_x=0;\par
289     {\cf18 double} range_y=0;\par
290     {\cf18 double} range_z=0;\par
291     {\cf18 double} accumulated_pos_x=0;\par
292     {\cf18 double} accumulated_pos_y=0;\par
293     {\cf18 double} accumulated_pos_z=0;\par
294     {\cf18 double} mean_total_x=0;\par
295     {\cf18 double} mean_total_y=0;\par
296     {\cf18 double} mean_total_z=0;\par
297     {\cf18 double} percentil_25_x=0;\par
298     {\cf18 double} percentil_75_x=0;\par
299     {\cf18 double} percentil_25_y=0;\par
300     {\cf18 double} percentil_75_y=0;\par
301     {\cf18 double} percentil_25_z=0;\par
302     {\cf18 double} percentil_75_z=0;\par
303 \par
304 \par
305     QList<double> distance_list_1;\par
306     QList<double> distance_list_2;\par
307     QList<double> distance_list_3;\par
308     QList<double> distance_list_4;\par
309 \par
310     QList<double> position_list_x;\par
311     QList<double> position_list_y;\par
312     QList<double> position_list_z;\par
313 \par
314     {\cf18 int} detected_devices = 0;\par
315     {\cf18 int} max_detected_devices = 0;\par
316 \par
317     {\cf18 bool} gpio_init_config=1;\par
318     {\cf18 bool} alarm_activation=0;\par
319     {\cf18 bool} alarm_activated=0;\par
320     {\cf18 int} previous_alarm=0;\par
321     {\cf18 int} chosen_alarm=0;\par
322     {\cf18 bool} distance_alarm_plot=0;\par
323     {\cf18 bool} position_alarm_pos=0;\par
324 \par
325     {\cf18 bool} auto_range=0;\par
326 \par
327     {\cf18 bool} mean_value_alarm_link=0;\par
328 \par
329     {\cf18 int} bufer_size=1;\par
330 \par
331     {\cf18 double} bufer_media;\par
332     {\cf18 double} bufer_media_2;\par
333     {\cf18 double} bufer_media_3;\par
334     {\cf18 double} bufer_media_4;\par
335     {\cf18 double} bufer_media_5;\par
336     {\cf18 double} bufer_media_6;\par
337 \par
338     {\cf18 bool} mean_enable=0;\par
339     QList<double> bufer;\par
340     QList<double> bufer_2;\par
341     QList<double> bufer_3;\par
342     QList<double> bufer_4;\par
343     QList<double> bufer_5;\par
344     QList<double> bufer_6;\par
345 \par
346     {\cf18 double} bufer_media_x;\par
347     QList<double> bufer_x;\par
348     {\cf18 double} bufer_media_y;\par
349     QList<double> bufer_y;\par
350     {\cf18 double} bufer_media_z;\par
351     QList<double> bufer_z;\par
352 \par
353     QString id_1;\par
354     QString id_2;\par
355     QString id_3;\par
356     QString id_4;\par
357     QString initial_id_1;\par
358     QString initial_id_2;\par
359     QString initial_id_3;\par
360     QString initial_id_4;\par
361 \par
362     {\cf18 int} alarm_issue_check_1=0;\par
363     {\cf18 int} alarm_issue_check_2=0;\par
364     {\cf18 int} alarm_issue_check_3=0;\par
365     {\cf18 int} alarm_issue_check_4=0;\par
366     {\cf18 double} prev_id_dist_1;\par
367     {\cf18 double} prev_id_dist_2;\par
368     {\cf18 double} prev_id_dist_3;\par
369     {\cf18 double} prev_id_dist_4;\par
370 \par
371     {\cf18 int} id_label_1=0;\par
372     {\cf18 int} id_label_2=0;\par
373     {\cf18 int} id_label_3=0;\par
374     {\cf18 int} id_label_4=0;\par
375 \par
376     {\cf18 double} position_x;\par
377     {\cf18 double} position_y;\par
378     {\cf18 double} position_z;\par
379 \par
380     {\cf18 double} pos_x_temp;\par
381     {\cf18 double} pos_y_temp;\par
382     {\cf18 double} pos_z_temp;\par
383 \par
384     {\cf18 float} pos_alarm_x_min;\par
385     {\cf18 float} pos_alarm_x_max;\par
386     {\cf18 float} pos_alarm_y_min;\par
387     {\cf18 float} pos_alarm_y_max;\par
388     {\cf18 float} pos_alarm_z_min;\par
389     {\cf18 float} pos_alarm_z_max;\par
390     {\cf18 int} pos_alarm_delay=0;\par
391     {\cf18 int} pos_alarm_duration=0;\par
392     {\cf18 bool} pos_x_alarm_ena=0;\par
393     {\cf18 bool} pos_y_alarm_ena=0;\par
394     {\cf18 bool} pos_z_alarm_ena=0;\par
395 \par
396     {\cf18 float} axisYmax;\par
397     {\cf18 float} max_value_alarm;\par
398     {\cf18 float} min_value_alarm;\par
399     {\cf18 int} alarm_delay=0;\par
400     {\cf18 int} alarm_duration=0;\par
401 \par
402     {\cf18 float} graph0_size=1.50;\par
403     {\cf18 float} graph1_size=1.50;\par
404     {\cf18 float} graph2_size=1.50;\par
405     {\cf18 float} graph4_size=1.50;\par
406     {\cf18 float} graph5_size=1.50;\par
407     {\cf18 float} graph6_size=1.50;\par
408     {\cf18 int} color_graph0;\par
409     {\cf18 int} color_graph1;\par
410     {\cf18 int} color_graph2;\par
411 \par
412     QColor color1;\par
413     QColor color1_2;\par
414     QColor color1_3;\par
415     QColor color1_4;\par
416     QColor color2;\par
417     QColor color3;\par
418     QString chosen_color_info={\cf22 ""};\par
419 \par
420     QString chosen_color_d1={\cf22 "red"};\par
421     QString chosen_color_d2={\cf22 "blue"};\par
422     QString chosen_color_d3={\cf22 "darkgreen"};\par
423     QString chosen_color_d4={\cf22 "magenta"};\par
424 \par
425     {\cf18 int} indice_color_fm;\par
426     {\cf18 int} indice_color_al;\par
427 \par
428     QPen graphPen;\par
429     QPen graphPen_2;\par
430     QPen graphPen_3;\par
431     QPen graphPen_4;\par
432     QPen graphPen_5;\par
433     QPen graphPen_6;\par
434     QPen graphPenmaxmin;\par
435 \par
436     {\cf18 double} range_dist_y_max;\par
437     {\cf18 double} range_dist_y_min;\par
438 \par
439     {\cf18 double} range_pos_y_min=0;\par
440     {\cf18 double} range_pos_y_max=10;\par
441     {\cf18 double} range_pos_x_min=0;\par
442     {\cf18 double} range_pos_x_max=10;\par
443 \par
444     {\cf18 double} anchor_1_x;\par
445     {\cf18 double} anchor_1_y;\par
446     {\cf18 double} anchor_2_x;\par
447     {\cf18 double} anchor_2_y;\par
448     {\cf18 double} anchor_3_x;\par
449     {\cf18 double} anchor_3_y;\par
450     {\cf18 double} anchor_4_x;\par
451     {\cf18 double} anchor_4_y;\par
452 \par
453     {\cf18 bool} position_graph_enabled=0;\par
454 \};\par
455 {\cf21 #endif }{\cf20 // MAINWINDOW_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/qcustomplot.h File Reference\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/qcustomplot.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/qcustomplot.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <QtCore/qglobal.h>}\par
{\f2 #include <QtCore/QObject>}\par
{\f2 #include <QtCore/QPointer>}\par
{\f2 #include <QtCore/QSharedPointer>}\par
{\f2 #include <QtCore/QTimer>}\par
{\f2 #include <QtGui/QPainter>}\par
{\f2 #include <QtGui/QPainterPath>}\par
{\f2 #include <QtGui/QPaintEvent>}\par
{\f2 #include <QtGui/QMouseEvent>}\par
{\f2 #include <QtGui/QWheelEvent>}\par
{\f2 #include <QtGui/QPixmap>}\par
{\f2 #include <QtCore/QVector>}\par
{\f2 #include <QtCore/QString>}\par
{\f2 #include <QtCore/QDateTime>}\par
{\f2 #include <QtCore/QMultiMap>}\par
{\f2 #include <QtCore/QFlags>}\par
{\f2 #include <QtCore/QDebug>}\par
{\f2 #include <QtCore/QStack>}\par
{\f2 #include <QtCore/QCache>}\par
{\f2 #include <QtCore/QMargins>}\par
{\f2 #include <qmath.h>}\par
{\f2 #include <limits>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <QtNumeric>}\par
{\f2 #include <QtWidgets/QWidget>}\par
{\f2 #include <QtPrintSupport/QtPrintSupport>}\par
{\f2 #include <QtCore/QElapsedTimer>}\par
{\f2 #include <QtCore/QTimeZone>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPVector2D}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPainter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractPaintBuffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPaintBufferPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayerable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPDataRange}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPDataSelection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPSelectionRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPMarginGroup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayoutElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayout}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayoutGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLayoutInset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLineEnding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLabelPainterPrivate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QCPLabelPainterPrivate::CachedLabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QCPLabelPainterPrivate::LabelData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTicker}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTickerDateTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTickerTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTickerFixed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTickerText}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTickerPi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisTickerLog}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxis}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisPainterPrivate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QCPAxisPainterPrivate::CachedLabel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b QCPAxisPainterPrivate::TickLabelData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPScatterStyle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPDataContainer< DataType >}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The generic data container for one-dimensional plottables. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPSelectionDecorator}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractPlottable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemAnchor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemPosition}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractItem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCustomPlot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPlottableInterface1D}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Defines an abstract interface for one-dimensional plottables. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractPlottable1D< DataType >}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A template base class for plottables with one-dimensional data. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorGradient}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPSelectionDecoratorBracket}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAxisRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPAbstractLegendItem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPlottableLegendItem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPLegend}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPTextElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorScaleAxisRectPrivate}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorScale}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPGraphData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPGraph}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPCurveData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPCurve}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPBarsGroup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPBarsData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPBars}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPStatisticalBoxData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPStatisticalBox}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorMapData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPColorMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPFinancialData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPFinancial}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPErrorBarsData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPErrorBars}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemStraightLine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemLine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemCurve}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemText}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemEllipse}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemPixmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemTracer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPItemBracket}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarAxisRadial}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarAxisAngular}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarLegendItem}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QCPPolarGraph}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b QCP}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QCP_DEVICEPIXELRATIO_SUPPORTED}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QCP_DEVICEPIXELRATIO_FLOAT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QCUSTOMPLOT_VERSION_STR}\~ "2.1.1"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QCUSTOMPLOT_VERSION}\~ 0x020101\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QCP_LIB_DECL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Q_DECL_OVERRIDE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b QCPDataContainer}< {\b QCPGraphData} > {\b QCPGraphDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b QCPDataContainer}< {\b QCPCurveData} > {\b QCPCurveDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b QCPDataContainer}< {\b QCPBarsData} > {\b QCPBarsDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b QCPDataContainer}< {\b QCPStatisticalBoxData} > {\b QCPStatisticalBoxDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b QCPDataContainer}< {\b QCPFinancialData} > {\b QCPFinancialDataContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef QVector< {\b QCPErrorBarsData} > {\b QCPErrorBarsDataContainer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::ResolutionUnit} \{ {\b QCP::ruDotsPerMeter}
, {\b QCP::ruDotsPerCentimeter}
, {\b QCP::ruDotsPerInch}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::ExportPen} \{ {\b QCP::epNoCosmetic}
, {\b QCP::epAllowCosmetic}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::SignDomain} \{ {\b QCP::sdNegative}
, {\b QCP::sdBoth}
, {\b QCP::sdPositive}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::MarginSide} \{ {\b QCP::msLeft} = 0x01
, {\b QCP::msRight} = 0x02
, {\b QCP::msTop} = 0x04
, {\b QCP::msBottom} = 0x08
, {\b QCP::msAll} = 0xFF
, {\b QCP::msNone} = 0x00
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::AntialiasedElement} \{ {\b QCP::aeAxes} = 0x0001
, {\b QCP::aeGrid} = 0x0002
, {\b QCP::aeSubGrid} = 0x0004
, {\b QCP::aeLegend} = 0x0008
, {\b QCP::aeLegendItems} = 0x0010
, {\b QCP::aePlottables} = 0x0020
, {\b QCP::aeItems} = 0x0040
, {\b QCP::aeScatters} = 0x0080
, {\b QCP::aeFills} = 0x0100
, {\b QCP::aeZeroLine} = 0x0200
, {\b QCP::aeOther} = 0x8000
, {\b QCP::aeAll} = 0xFFFF
, {\b QCP::aeNone} = 0x0000
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::PlottingHint} \{ {\b QCP::phNone} = 0x000
, {\b QCP::phFastPolylines} = 0x001
, {\b QCP::phImmediateRefresh} = 0x002
, {\b QCP::phCacheLabels} = 0x004
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::Interaction} \{ {\b QCP::iNone} = 0x000
, {\b QCP::iRangeDrag} = 0x001
, {\b QCP::iRangeZoom} = 0x002
, {\b QCP::iMultiSelect} = 0x004
, {\b QCP::iSelectPlottables} = 0x008
, {\b QCP::iSelectAxes} = 0x010
, {\b QCP::iSelectLegend} = 0x020
, {\b QCP::iSelectItems} = 0x040
, {\b QCP::iSelectOther} = 0x080
, {\b QCP::iSelectPlottablesBeyondAxisRect} = 0x100
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::SelectionRectMode} \{ {\b QCP::srmNone}
, {\b QCP::srmZoom}
, {\b QCP::srmSelect}
, {\b QCP::srmCustom}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b QCP::SelectionType} \{ {\b QCP::stNone}
, {\b QCP::stWhole}
, {\b QCP::stSingleData}
, {\b QCP::stDataRange}
, {\b QCP::stMultipleDataRanges}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b QCP::isInvalidData} (double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b QCP::isInvalidData} (double value1, double value2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b QCP::setMarginValue} (QMargins &margins, {\b QCP::MarginSide} side, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b QCP::getMarginValue} (const QMargins &margins, {\b QCP::MarginSide} side)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPVector2D}, Q_MOVABLE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator*} (double factor, const {\b QCPVector2D} &vec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator*} (const {\b QCPVector2D} &vec, double factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator/} (const {\b QCPVector2D} &vec, double divisor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator+} (const {\b QCPVector2D} &vec1, const {\b QCPVector2D} &vec2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator-} (const {\b QCPVector2D} &vec1, const {\b QCPVector2D} &vec2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPVector2D} {\b operator-} (const {\b QCPVector2D} &vec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPRange}, Q_MOVABLE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator+} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator+} (double value, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator-} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator*} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator*} (double value, const {\b QCPRange} &range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPRange} {\b operator/} (const {\b QCPRange} &range, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPDataRange}, Q_MOVABLE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataSelection} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataRange} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataSelection} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator+} (const {\b QCPDataRange} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataSelection} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataRange} &a, const {\b QCPDataSelection} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataSelection} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b QCPDataSelection} {\b operator-} (const {\b QCPDataRange} &a, const {\b QCPDataRange} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPLineEnding}, Q_MOVABLE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPScatterStyle}, Q_MOVABLE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPGraphData}, Q_PRIMITIVE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPCurveData}, Q_PRIMITIVE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPBarsData}, Q_PRIMITIVE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPStatisticalBoxData}, Q_MOVABLE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPFinancialData}, Q_PRIMITIVE_TYPE)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Q_DECLARE_TYPEINFO} ({\b QCPErrorBarsData}, Q_PRIMITIVE_TYPE)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const QMetaObject {\b QCP::staticMetaObject}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v Q_DECL_OVERRIDE\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECL_OVERRIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Q_DECL_OVERRIDE}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCP_DEVICEPIXELRATIO_FLOAT\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCP_DEVICEPIXELRATIO_FLOAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QCP_DEVICEPIXELRATIO_FLOAT}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCP_DEVICEPIXELRATIO_SUPPORTED\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCP_DEVICEPIXELRATIO_SUPPORTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QCP_DEVICEPIXELRATIO_SUPPORTED}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
** {\b QCustomPlot}, an easy to use, modern plotting widget for Qt ** Copyright (C) 2011-2022 Emanuel Eichhammer ** ** This program is free software: you can redistribute it and/or modify ** it under the terms of the GNU General Public License as published by ** the Free Software Foundation, either version 3 of the License, or ** (at your option) any later version. ** ** This program is distributed in the hope that it will be useful, ** but WITHOUT ANY WARRANTY; without even the implied warranty of ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the ** GNU General Public License for more details. ** ** You should have received a copy of the GNU General Public License ** along with this program. If not, see {\f2 http://www.gnu.org/licenses/}. ** **\par
Author: Emanuel Eichhammer ** Website/Contact: {\f2 https://www.qcustomplot.com/} ** Date: 06.11.22 ** Version: 2.1.1 ** \par
}}
{\xe \v QCP_LIB_DECL\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCP_LIB_DECL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QCP_LIB_DECL}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCUSTOMPLOT_VERSION\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCUSTOMPLOT_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QCUSTOMPLOT_VERSION\~ 0x020101}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v QCUSTOMPLOT_VERSION_STR\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCUSTOMPLOT_VERSION_STR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QCUSTOMPLOT_VERSION_STR\~ "2.1.1"}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v QCPBarsDataContainer\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCPBarsDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b QCPDataContainer}<{\b QCPBarsData}> {\b QCPBarsDataContainer}}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for storing {\b QCPBarsData} points. The data is stored sorted by {\i key} .\par
This template instantiation is the container in which {\b QCPBars} holds its data. For details about the generic container, see the documentation of the class template {\b QCPDataContainer}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPBarsData}, {\b QCPBars::setData} \par
}}}}
{\xe \v QCPCurveDataContainer\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCPCurveDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b QCPDataContainer}<{\b QCPCurveData}> {\b QCPCurveDataContainer}}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for storing {\b QCPCurveData} points. The data is stored sorted by {\i t} , so the {\i sortKey()}  (returning {\i t} ) is different from {\i mainKey()}  (returning {\i key} ).\par
This template instantiation is the container in which {\b QCPCurve} holds its data. For details about the generic container, see the documentation of the class template {\b QCPDataContainer}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPCurveData}, {\b QCPCurve::setData} \par
}}}}
{\xe \v QCPErrorBarsDataContainer\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCPErrorBarsDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef QVector<{\b QCPErrorBarsData}> {\b QCPErrorBarsDataContainer}}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for storing {\b QCPErrorBarsData} points. It is a typedef for {\f2 QVector<{\b QCPErrorBarsData}>} .\par
This is the container in which {\b QCPErrorBars} holds its data. Unlike most other data containers for plottables, it is not based on {\b QCPDataContainer}. This is because the error bars plottable is special in that it doesn't store its own key and value coordinate per error bar. It adopts the key and value from the plottable to which the error bars shall be applied ({\b QCPErrorBars::setDataPlottable}). So the stored {\b QCPErrorBarsData} doesn't need a sortable key, but merely an index (as {\f2 QVector}  provides), which maps one-to-one to the indices of the other plottable's data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPErrorBarsData}, {\b QCPErrorBars::setData} \par
}}}}
{\xe \v QCPFinancialDataContainer\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCPFinancialDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b QCPDataContainer}<{\b QCPFinancialData}> {\b QCPFinancialDataContainer}}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for storing {\b QCPFinancialData} points. The data is stored sorted by {\i key} .\par
This template instantiation is the container in which {\b QCPFinancial} holds its data. For details about the generic container, see the documentation of the class template {\b QCPDataContainer}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPFinancialData}, {\b QCPFinancial::setData} \par
}}}}
{\xe \v QCPGraphDataContainer\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCPGraphDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b QCPDataContainer}<{\b QCPGraphData}> {\b QCPGraphDataContainer}}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for storing {\b QCPGraphData} points. The data is stored sorted by {\i key} .\par
This template instantiation is the container in which {\b QCPGraph} holds its data. For details about the generic container, see the documentation of the class template {\b QCPDataContainer}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPGraphData}, {\b QCPGraph::setData} \par
}}}}
{\xe \v QCPStatisticalBoxDataContainer\:qcustomplot.h}
{\xe \v qcustomplot.h\:QCPStatisticalBoxDataContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b QCPDataContainer}<{\b QCPStatisticalBoxData}> {\b QCPStatisticalBoxDataContainer}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Container for storing {\b QCPStatisticalBoxData} points. The data is stored sorted by {\i key} .\par
This template instantiation is the container in which {\b QCPStatisticalBox} holds its data. For details about the generic container, see the documentation of the class template {\b QCPDataContainer}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
See also\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b QCPStatisticalBoxData}, {\b QCPStatisticalBox::setData} \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator*\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator* (const {\b QCPRange} & range, double value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplies both boundaries of the range by {\i value} . \par
}}
{\xe \v operator*\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator* (const {\b QCPVector2D} & vec, double factor){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator* (double factor, const {\b QCPVector2D} & vec){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator*\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator* (double value, const {\b QCPRange} & range){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Multiplies both boundaries of the range by {\i value} . \par
}}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataRange} & a, const {\b QCPDataRange} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataRange} & a, const {\b QCPDataSelection} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataSelection} & a, const {\b QCPDataRange} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator+ (const {\b QCPDataSelection} & a, const {\b QCPDataSelection} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points in {\i a}  joined with the data points in {\i b} . The resulting data selection is already simplified (see {\b QCPDataSelection::simplify}). \par
}}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator+ (const {\b QCPRange} & range, double value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds {\i value}  to both boundaries of the range. \par
}}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator+ (const {\b QCPVector2D} & vec1, const {\b QCPVector2D} & vec2){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator+\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator+ (double value, const {\b QCPRange} & range){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds {\i value}  to both boundaries of the range. \par
}}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataRange} & a, const {\b QCPDataRange} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataRange} & a, const {\b QCPDataSelection} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataSelection} & a, const {\b QCPDataRange} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPDataSelection} operator- (const {\b QCPDataSelection} & a, const {\b QCPDataSelection} & b){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a {\b QCPDataSelection} with the data points which are in {\i a}  but not in {\i b} . \par
}}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator- (const {\b QCPRange} & range, double value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subtracts {\i value}  from both boundaries of the range. \par
}}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator- (const {\b QCPVector2D} & vec){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator-\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator- (const {\b QCPVector2D} & vec1, const {\b QCPVector2D} & vec2){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator/\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPRange} operator/ (const {\b QCPRange} & range, double value){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Divides both boundaries of the range by {\i value} . \par
}}
{\xe \v operator/\:qcustomplot.h}
{\xe \v qcustomplot.h\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b QCPVector2D} operator/ (const {\b QCPVector2D} & vec, double divisor){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPBarsData} , Q_PRIMITIVE_TYPE )}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPCurveData} , Q_PRIMITIVE_TYPE )}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPDataRange} , Q_MOVABLE_TYPE )}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPErrorBarsData} , Q_PRIMITIVE_TYPE )}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPFinancialData} , Q_PRIMITIVE_TYPE )}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPGraphData} , Q_PRIMITIVE_TYPE )}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPLineEnding} , Q_MOVABLE_TYPE )}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPRange} , Q_MOVABLE_TYPE )}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPScatterStyle} , Q_MOVABLE_TYPE )}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPStatisticalBoxData} , Q_MOVABLE_TYPE )}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Q_DECLARE_TYPEINFO\:qcustomplot.h}
{\xe \v qcustomplot.h\:Q_DECLARE_TYPEINFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Q_DECLARE_TYPEINFO ({\b QCPVector2D} , Q_MOVABLE_TYPE )}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
qcustomplot.h\par \pard\plain 
{\tc\tcl2 \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/qcustomplot.h}
{\xe \v C:/Users/anton/OneDrive - Universidad de C\'F3rdoba/Doctorado_ARR/Qt/Versiones/DWM1001DEV_APP/Github/UCO-DWM1001-DEV/src/qcustomplot.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
26 {\cf21 #ifndef QCUSTOMPLOT_H}\par
27 {\cf21 #define QCUSTOMPLOT_H}\par
28 \par
29 {\cf21 #include <QtCore/qglobal.h>}\par
30 \par
31 {\cf20 // some Qt version/configuration dependent macros to include or exclude certain code paths:}\par
32 {\cf21 #ifdef QCUSTOMPLOT_USE_OPENGL}\par
33 {\cf21 #  if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)}\par
34 {\cf21 #    define QCP_OPENGL_PBUFFER}\par
35 {\cf21 #  else}\par
36 {\cf21 #    define QCP_OPENGL_FBO}\par
37 {\cf21 #  endif}\par
38 {\cf21 #  if QT_VERSION >= QT_VERSION_CHECK(5, 3, 0)}\par
39 {\cf21 #    define QCP_OPENGL_OFFSCREENSURFACE}\par
40 {\cf21 #  endif}\par
41 {\cf21 #endif}\par
42 \par
43 {\cf21 #if QT_VERSION >= QT_VERSION_CHECK(5, 4, 0)}\par
44 {\cf21 #  define QCP_DEVICEPIXELRATIO_SUPPORTED}\par
45 {\cf21 #  if QT_VERSION >= QT_VERSION_CHECK(5, 6, 0)}\par
46 {\cf21 #    define QCP_DEVICEPIXELRATIO_FLOAT}\par
47 {\cf21 #  endif}\par
48 {\cf21 #endif}\par
49 \par
50 {\cf21 #include <QtCore/QObject>}\par
51 {\cf21 #include <QtCore/QPointer>}\par
52 {\cf21 #include <QtCore/QSharedPointer>}\par
53 {\cf21 #include <QtCore/QTimer>}\par
54 {\cf21 #include <QtGui/QPainter>}\par
55 {\cf21 #include <QtGui/QPainterPath>}\par
56 {\cf21 #include <QtGui/QPaintEvent>}\par
57 {\cf21 #include <QtGui/QMouseEvent>}\par
58 {\cf21 #include <QtGui/QWheelEvent>}\par
59 {\cf21 #include <QtGui/QPixmap>}\par
60 {\cf21 #include <QtCore/QVector>}\par
61 {\cf21 #include <QtCore/QString>}\par
62 {\cf21 #include <QtCore/QDateTime>}\par
63 {\cf21 #include <QtCore/QMultiMap>}\par
64 {\cf21 #include <QtCore/QFlags>}\par
65 {\cf21 #include <QtCore/QDebug>}\par
66 {\cf21 #include <QtCore/QStack>}\par
67 {\cf21 #include <QtCore/QCache>}\par
68 {\cf21 #include <QtCore/QMargins>}\par
69 {\cf21 #include <qmath.h>}\par
70 {\cf21 #include <limits>}\par
71 {\cf21 #include <algorithm>}\par
72 {\cf21 #ifdef QCP_OPENGL_FBO}\par
73 {\cf21 #  include <QtGui/QOpenGLContext>}\par
74 {\cf21 #  if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)}\par
75 {\cf21 #    include <QtGui/QOpenGLFramebufferObject>}\par
76 {\cf21 #  else}\par
77 {\cf21 #    include <QOpenGLFramebufferObject>}\par
78 {\cf21 #    include <QOpenGLPaintDevice>}\par
79 {\cf21 #  endif}\par
80 {\cf21 #  ifdef QCP_OPENGL_OFFSCREENSURFACE}\par
81 {\cf21 #    include <QtGui/QOffscreenSurface>}\par
82 {\cf21 #  else}\par
83 {\cf21 #    include <QtGui/QWindow>}\par
84 {\cf21 #  endif}\par
85 {\cf21 #endif}\par
86 {\cf21 #ifdef QCP_OPENGL_PBUFFER}\par
87 {\cf21 #  include <QtOpenGL/QGLPixelBuffer>}\par
88 {\cf21 #endif}\par
89 {\cf21 #if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)}\par
90 {\cf21 #  include <qnumeric.h>}\par
91 {\cf21 #  include <QtGui/QWidget>}\par
92 {\cf21 #  include <QtGui/QPrinter>}\par
93 {\cf21 #  include <QtGui/QPrintEngine>}\par
94 {\cf21 #else}\par
95 {\cf21 #  include <QtNumeric>}\par
96 {\cf21 #  include <QtWidgets/QWidget>}\par
97 {\cf21 #  include <QtPrintSupport/QtPrintSupport>}\par
98 {\cf21 #endif}\par
99 {\cf21 #if QT_VERSION >= QT_VERSION_CHECK(4, 8, 0)}\par
100 {\cf21 #  include <QtCore/QElapsedTimer>}\par
101 {\cf21 #endif}\par
102 {\cf21 # if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)}\par
103 {\cf21 #  include <QtCore/QTimeZone>}\par
104 {\cf21 #endif}\par
105 \par
106 {\cf17 class }QCPPainter;\par
107 {\cf17 class }QCustomPlot;\par
108 {\cf17 class }QCPLayerable;\par
109 {\cf17 class }QCPLayoutElement;\par
110 {\cf17 class }QCPLayout;\par
111 {\cf17 class }QCPAxis;\par
112 {\cf17 class }QCPAxisRect;\par
113 {\cf17 class }QCPAxisPainterPrivate;\par
114 {\cf17 class }QCPAbstractPlottable;\par
115 {\cf17 class }QCPGraph;\par
116 {\cf17 class }QCPAbstractItem;\par
117 {\cf17 class }QCPPlottableInterface1D;\par
118 {\cf17 class }QCPLegend;\par
119 {\cf17 class }QCPItemPosition;\par
120 {\cf17 class }QCPLayer;\par
121 {\cf17 class }QCPAbstractLegendItem;\par
122 {\cf17 class }QCPSelectionRect;\par
123 {\cf17 class }QCPColorMap;\par
124 {\cf17 class }QCPColorScale;\par
125 {\cf17 class }QCPBars;\par
126 {\cf17 class }QCPPolarAxisRadial;\par
127 {\cf17 class }QCPPolarAxisAngular;\par
128 {\cf17 class }QCPPolarGrid;\par
129 {\cf17 class }QCPPolarGraph;\par
130 \par
131 {\cf20 /* including file 'src/global.h'            */}\par
132 {\cf20 /* modified 2022-11-06T12:45:57, size 18102 */}\par
133 \par
134 {\cf21 #define QCUSTOMPLOT_VERSION_STR "2.1.1"}\par
135 {\cf21 #define QCUSTOMPLOT_VERSION 0x020101}\par
136 \par
137 {\cf20 // decl definitions for shared library compilation/usage:}\par
138 {\cf21 #if defined(QT_STATIC_BUILD)}\par
139 {\cf21 #  define QCP_LIB_DECL}\par
140 {\cf21 #elif defined(QCUSTOMPLOT_COMPILE_LIBRARY)}\par
141 {\cf21 #  define QCP_LIB_DECL Q_DECL_EXPORT}\par
142 {\cf21 #elif defined(QCUSTOMPLOT_USE_LIBRARY)}\par
143 {\cf21 #  define QCP_LIB_DECL Q_DECL_IMPORT}\par
144 {\cf21 #else}\par
145 {\cf21 #  define QCP_LIB_DECL}\par
146 {\cf21 #endif}\par
147 \par
148 {\cf20 // define empty macro for Q_DECL_OVERRIDE if it doesn't exist (Qt < 5)}\par
149 {\cf21 #ifndef Q_DECL_OVERRIDE}\par
150 {\cf21 #  define Q_DECL_OVERRIDE}\par
151 {\cf21 #endif}\par
152 \par
160 {\cf20 // Qt version < 6.2.0: to get metatypes Q_GADGET/Q_ENUMS/Q_FLAGS in namespace we have to make it look like a class during moc-run}\par
161 {\cf21 #if QT_VERSION >= 0x060200 }{\cf20 // don't use QT_VERSION_CHECK here, some moc versions don't understand it}\par
162 {\cf17 namespace }QCP \{\par
163   Q_NAMESPACE {\cf20 // this is how to add the staticMetaObject to namespaces in newer Qt versions}\par
164 {\cf21 #else }{\cf20 // Qt version older than 6.2.0}\par
165 {\cf21 #  ifndef Q_MOC_RUN}\par
166 {\cf17 namespace }QCP \{\par
167 {\cf21 #  else }{\cf20 // not in moc run}\par
168 {\cf17 class }QCP \{\par
169   Q_GADGET\par
170   Q_ENUMS(ExportPen)\par
171   Q_ENUMS(ResolutionUnit)\par
172   Q_ENUMS(SignDomain)\par
173   Q_ENUMS(MarginSide)\par
174   Q_ENUMS(AntialiasedElement)\par
175   Q_ENUMS(PlottingHint)\par
176   Q_ENUMS(Interaction)\par
177   Q_ENUMS(SelectionRectMode)\par
178   Q_ENUMS(SelectionType)\par
179   \par
180   Q_FLAGS(AntialiasedElements)\par
181   Q_FLAGS(PlottingHints)\par
182   Q_FLAGS(MarginSides)\par
183   Q_FLAGS(Interactions)\par
184 {\cf17 public}:\par
185 {\cf21 #  endif}\par
186 {\cf21 #endif}\par
187 \par
188 \par
195 {\cf17 enum} ResolutionUnit \{ ruDotsPerMeter       \par
196                       ,ruDotsPerCentimeter \par
197                       ,ruDotsPerInch       \par
198                     \};\par
199 \par
205 {\cf17 enum} ExportPen \{ epNoCosmetic     \par
206                  ,epAllowCosmetic \par
207                \};\par
208 \par
216 {\cf17 enum} SignDomain \{ sdNegative  \par
217                   ,sdBoth     \par
218                   ,sdPositive \par
219                 \};\par
220 \par
226 {\cf17 enum} MarginSide \{ msLeft     = 0x01 \par
227                   ,msRight   = 0x02 \par
228                   ,msTop     = 0x04 \par
229                   ,msBottom  = 0x08 \par
230                   ,msAll     = 0xFF \par
231                   ,msNone    = 0x00 \par
232                 \};\par
233 Q_DECLARE_FLAGS(MarginSides, MarginSide)\par
234 \par
235 \par
244 enum AntialiasedElement \{ aeAxes           = 0x0001 \par
245                           ,aeGrid          = 0x0002 \par
246                           ,aeSubGrid       = 0x0004 \par
247                           ,aeLegend        = 0x0008 \par
248                           ,aeLegendItems   = 0x0010 \par
249                           ,aePlottables    = 0x0020 \par
250                           ,aeItems         = 0x0040 \par
251                           ,aeScatters      = 0x0080 \par
252                           ,aeFills         = 0x0100 \par
253                           ,aeZeroLine      = 0x0200 \par
254                           ,aeOther         = 0x8000 \par
255                           ,aeAll           = 0xFFFF \par
256                           ,aeNone          = 0x0000 \par
257                         \};\par
258 Q_DECLARE_FLAGS(AntialiasedElements, AntialiasedElement)\par
259 \par
260 \par
265 enum PlottingHint \{ phNone              = 0x000 \par
266                     ,phFastPolylines    = 0x001 \par
268                     ,phImmediateRefresh = 0x002 \par
270                     ,phCacheLabels      = 0x004 \par
271                   \};\par
272 Q_DECLARE_FLAGS(PlottingHints, PlottingHint)\par
273 \par
274 \par
281 enum Interaction \{ iNone              = 0x000 \par
282                    ,iRangeDrag        = 0x001 \par
283                    ,iRangeZoom        = 0x002 \par
284                    ,iMultiSelect      = 0x004 \par
285                    ,iSelectPlottables = 0x008 \par
286                    ,iSelectAxes       = 0x010 \par
287                    ,iSelectLegend     = 0x020 \par
288                    ,iSelectItems      = 0x040 \par
289                    ,iSelectOther      = 0x080 \par
290                    ,iSelectPlottablesBeyondAxisRect = 0x100 \par
291                  \};\par
292 Q_DECLARE_FLAGS(Interactions, Interaction)\par
293 \par
294 \par
299 enum SelectionRectMode \{ srmNone    \par
300                          ,srmZoom   \par
301                          ,srmSelect \par
302                          ,srmCustom \par
303                        \};\par
304 \par
323 {\cf17 enum} SelectionType \{ stNone                \par
324                      ,stWhole              \par
325                      ,stSingleData         \par
326                      ,stDataRange          \par
327                      ,stMultipleDataRanges \par
328                     \};\par
329 \par
336 {\cf17 inline} {\cf18 bool} isInvalidData({\cf18 double} value)\par
337 \{\par
338   {\cf19 return} qIsNaN(value) || qIsInf(value);\par
339 \}\par
340 \par
346 {\cf17 inline} {\cf18 bool} isInvalidData({\cf18 double} value1, {\cf18 double} value2)\par
347 \{\par
348   {\cf19 return} isInvalidData(value1) || isInvalidData(value2);\par
349 \}\par
350 \par
357 {\cf17 inline} {\cf18 void} setMarginValue(QMargins &margins, QCP::MarginSide side, {\cf18 int} value)\par
358 \{\par
359   {\cf19 switch} (side)\par
360   \{\par
361     {\cf19 case} QCP::msLeft: margins.setLeft(value); {\cf19 break};\par
362     {\cf19 case} QCP::msRight: margins.setRight(value); {\cf19 break};\par
363     {\cf19 case} QCP::msTop: margins.setTop(value); {\cf19 break};\par
364     {\cf19 case} QCP::msBottom: margins.setBottom(value); {\cf19 break};\par
365     {\cf19 case} QCP::msAll: margins = QMargins(value, value, value, value); {\cf19 break};\par
366     {\cf19 default}: {\cf19 break};\par
367   \}\par
368 \}\par
369 \par
377 {\cf17 inline} {\cf18 int} getMarginValue({\cf17 const} QMargins &margins, QCP::MarginSide side)\par
378 \{\par
379   {\cf19 switch} (side)\par
380   \{\par
381     {\cf19 case} QCP::msLeft: {\cf19 return} margins.left();\par
382     {\cf19 case} QCP::msRight: {\cf19 return} margins.right();\par
383     {\cf19 case} QCP::msTop: {\cf19 return} margins.top();\par
384     {\cf19 case} QCP::msBottom: {\cf19 return} margins.bottom();\par
385     {\cf19 default}: {\cf19 break};\par
386   \}\par
387   {\cf19 return} 0;\par
388 \}\par
389 \par
390 {\cf20 // for newer Qt versions we have to declare the enums/flags as metatypes inside the namespace using Q_ENUM_NS/Q_FLAG_NS:}\par
391 {\cf20 // if you change anything here, don't forget to change it for older Qt versions below, too,}\par
392 {\cf20 // and at the start of the namespace in the fake moc-run class}\par
393 {\cf21 #if QT_VERSION >= 0x060200}\par
394 Q_ENUM_NS(ExportPen)\par
395 Q_ENUM_NS(ResolutionUnit)\par
396 Q_ENUM_NS(SignDomain)\par
397 Q_ENUM_NS(MarginSide)\par
398 Q_ENUM_NS(AntialiasedElement)\par
399 Q_ENUM_NS(PlottingHint)\par
400 Q_ENUM_NS(Interaction)\par
401 Q_ENUM_NS(SelectionRectMode)\par
402 Q_ENUM_NS(SelectionType)\par
403 \par
404 Q_FLAG_NS(AntialiasedElements)\par
405 Q_FLAG_NS(PlottingHints)\par
406 Q_FLAG_NS(MarginSides)\par
407 Q_FLAG_NS(Interactions)\par
408 {\cf21 #else}\par
409 {\cf17 extern} {\cf17 const} QMetaObject staticMetaObject;\par
410 {\cf21 #endif}\par
411 \par
412 \} {\cf20 // end of namespace QCP}\par
413 \par
414 Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::AntialiasedElements)\par
415 Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::PlottingHints)\par
416 Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::MarginSides)\par
417 Q_DECLARE_OPERATORS_FOR_FLAGS(QCP::Interactions)\par
418 \par
419 {\cf20 // for older Qt versions we have to declare the enums/flags as metatypes outside the namespace using Q_DECLARE_METATYPE:}\par
420 {\cf20 // if you change anything here, don't forget to change it for newer Qt versions above, too,}\par
421 {\cf20 // and at the start of the namespace in the fake moc-run class}\par
422 {\cf21 #if QT_VERSION < QT_VERSION_CHECK(6, 2, 0)}\par
423 Q_DECLARE_METATYPE(QCP::ExportPen)\par
424 Q_DECLARE_METATYPE(QCP::ResolutionUnit)\par
425 Q_DECLARE_METATYPE(QCP::SignDomain)\par
426 Q_DECLARE_METATYPE(QCP::MarginSide)\par
427 Q_DECLARE_METATYPE(QCP::AntialiasedElement)\par
428 Q_DECLARE_METATYPE(QCP::PlottingHint)\par
429 Q_DECLARE_METATYPE(QCP::Interaction)\par
430 Q_DECLARE_METATYPE(QCP::SelectionRectMode)\par
431 Q_DECLARE_METATYPE(QCP::SelectionType)\par
432 {\cf21 #endif}\par
433 \par
434 {\cf20 /* end of 'src/global.h' */}\par
435 \par
436 \par
437 {\cf20 /* including file 'src/vector2d.h'         */}\par
438 {\cf20 /* modified 2022-11-06T12:45:56, size 4988 */}\par
439 \par
440 {\cf17 class }QCP_LIB_DECL QCPVector2D\par
441 \{\par
442 {\cf17 public}:\par
443   QCPVector2D();\par
444   QCPVector2D({\cf18 double} x, {\cf18 double} y);\par
445   QCPVector2D({\cf17 const} QPoint &point);\par
446   QCPVector2D({\cf17 const} QPointF &point);\par
447   \par
448   {\cf20 // getters:}\par
449   {\cf18 double} x(){\cf17  const }\{ {\cf19 return} mX; \}\par
450   {\cf18 double} y(){\cf17  const }\{ {\cf19 return} mY; \}\par
451   {\cf18 double} &rx() \{ {\cf19 return} mX; \}\par
452   {\cf18 double} &ry() \{ {\cf19 return} mY; \}\par
453   \par
454   {\cf20 // setters:}\par
455   {\cf18 void} setX({\cf18 double} x) \{ mX = x; \}\par
456   {\cf18 void} setY({\cf18 double} y) \{ mY = y; \}\par
457   \par
458   {\cf20 // non-virtual methods:}\par
459   {\cf18 double} length(){\cf17  const }\{ {\cf19 return} qSqrt(mX*mX+mY*mY); \}\par
460   {\cf18 double} lengthSquared(){\cf17  const }\{ {\cf19 return} mX*mX+mY*mY; \}\par
461   {\cf18 double} angle(){\cf17  const }\{ {\cf19 return} qAtan2(mY, mX); \}\par
462   QPoint toPoint(){\cf17  const }\{ {\cf19 return} QPoint({\cf18 int}(mX), {\cf18 int}(mY)); \}\par
463   QPointF toPointF(){\cf17  const }\{ {\cf19 return} QPointF(mX, mY); \}\par
464   \par
465   {\cf18 bool} isNull(){\cf17  const }\{ {\cf19 return} qIsNull(mX) && qIsNull(mY); \}\par
466   {\cf18 void} normalize();\par
467   QCPVector2D normalized() {\cf17 const};\par
468   QCPVector2D perpendicular(){\cf17  const }\{ {\cf19 return} QCPVector2D(-mY, mX); \}\par
469   {\cf18 double} dot({\cf17 const} QCPVector2D &vec){\cf17  const }\{ {\cf19 return} mX*vec.mX+mY*vec.mY; \}\par
470   {\cf18 double} distanceSquaredToLine({\cf17 const} QCPVector2D &start, {\cf17 const} QCPVector2D &end) {\cf17 const};\par
471   {\cf18 double} distanceSquaredToLine({\cf17 const} QLineF &line) {\cf17 const};\par
472   {\cf18 double} distanceToStraightLine({\cf17 const} QCPVector2D &base, {\cf17 const} QCPVector2D &direction) {\cf17 const};\par
473   \par
474   QCPVector2D &operator*=({\cf18 double} factor);\par
475   QCPVector2D &operator/=({\cf18 double} divisor);\par
476   QCPVector2D &operator+=({\cf17 const} QCPVector2D &vector);\par
477   QCPVector2D &operator-=({\cf17 const} QCPVector2D &vector);\par
478   \par
479 {\cf17 private}:\par
480   {\cf20 // property members:}\par
481   {\cf18 double} mX, mY;\par
482   \par
483   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPVector2D operator*({\cf18 double} factor, {\cf17 const} QCPVector2D &vec);\par
484   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPVector2D operator*({\cf17 const} QCPVector2D &vec, {\cf18 double} factor);\par
485   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPVector2D operator/({\cf17 const} QCPVector2D &vec, {\cf18 double} divisor);\par
486   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPVector2D operator+({\cf17 const} QCPVector2D &vec1, {\cf17 const} QCPVector2D &vec2);\par
487   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPVector2D operator-({\cf17 const} QCPVector2D &vec1, {\cf17 const} QCPVector2D &vec2);\par
488   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPVector2D operator-({\cf17 const} QCPVector2D &vec);\par
489 \};\par
490 Q_DECLARE_TYPEINFO(QCPVector2D, Q_MOVABLE_TYPE);\par
491 \par
492 {\cf17 inline} {\cf17 const} QCPVector2D operator*({\cf18 double} factor, {\cf17 const} QCPVector2D &vec) \{ {\cf19 return} QCPVector2D(vec.mX*factor, vec.mY*factor); \}\par
493 {\cf17 inline} {\cf17 const} QCPVector2D operator*({\cf17 const} QCPVector2D &vec, {\cf18 double} factor) \{ {\cf19 return} QCPVector2D(vec.mX*factor, vec.mY*factor); \}\par
494 {\cf17 inline} {\cf17 const} QCPVector2D operator/({\cf17 const} QCPVector2D &vec, {\cf18 double} divisor) \{ {\cf19 return} QCPVector2D(vec.mX/divisor, vec.mY/divisor); \}\par
495 {\cf17 inline} {\cf17 const} QCPVector2D operator+({\cf17 const} QCPVector2D &vec1, {\cf17 const} QCPVector2D &vec2) \{ {\cf19 return} QCPVector2D(vec1.mX+vec2.mX, vec1.mY+vec2.mY); \}\par
496 {\cf17 inline} {\cf17 const} QCPVector2D operator-({\cf17 const} QCPVector2D &vec1, {\cf17 const} QCPVector2D &vec2) \{ {\cf19 return} QCPVector2D(vec1.mX-vec2.mX, vec1.mY-vec2.mY); \}\par
497 {\cf17 inline} {\cf17 const} QCPVector2D operator-({\cf17 const} QCPVector2D &vec) \{ {\cf19 return} QCPVector2D(-vec.mX, -vec.mY); \}\par
498 \par
503 {\cf17 inline} QDebug operator<< (QDebug d, {\cf17 const} QCPVector2D &vec)\par
504 \{\par
505     d.nospace() << {\cf22 "QCPVector2D("} << vec.x() << {\cf22 ", "} << vec.y() << {\cf22 ")"};\par
506     {\cf19 return} d.space();\par
507 \}\par
508 \par
509 {\cf20 /* end of 'src/vector2d.h' */}\par
510 \par
511 \par
512 {\cf20 /* including file 'src/painter.h'          */}\par
513 {\cf20 /* modified 2022-11-06T12:45:56, size 4035 */}\par
514 \par
515 {\cf17 class }QCP_LIB_DECL QCPPainter : {\cf17 public} QPainter\par
516 \{\par
517   Q_GADGET\par
518 {\cf17 public}:\par
523   {\cf17 enum} PainterMode \{ pmDefault       = 0x00   \par
524                      ,pmVectorized   = 0x01   \par
525                      ,pmNoCaching    = 0x02   \par
526                      ,pmNonCosmetic  = 0x04   \par
527                    \};\par
528   Q_ENUMS(PainterMode)\par
529   Q_FLAGS(PainterModes)\par
530   Q_DECLARE_FLAGS(PainterModes, PainterMode)\par
531   \par
532   QCPPainter();\par
533   explicit QCPPainter(QPaintDevice *device);\par
534   \par
535   {\cf20 // getters:}\par
536   {\cf18 bool} antialiasing(){\cf17  const }\{ {\cf19 return} testRenderHint(QPainter::Antialiasing); \}\par
537   PainterModes modes(){\cf17  const }\{ {\cf19 return} mModes; \}\par
538 \par
539   {\cf20 // setters:}\par
540   {\cf18 void} setAntialiasing({\cf18 bool} enabled);\par
541   {\cf18 void} setMode(PainterMode mode, {\cf18 bool} enabled={\cf17 true});\par
542   {\cf18 void} setModes(PainterModes modes);\par
543 \par
544   {\cf20 // methods hiding non-virtual base class functions (QPainter bug workarounds):}\par
545   {\cf18 bool} begin(QPaintDevice *device);\par
546   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
547   {\cf18 void} setPen({\cf17 const} QColor &color);\par
548   {\cf18 void} setPen(Qt::PenStyle penStyle);\par
549   {\cf18 void} drawLine({\cf17 const} QLineF &line);\par
550   {\cf18 void} drawLine({\cf17 const} QPointF &p1, {\cf17 const} QPointF &p2) \{drawLine(QLineF(p1, p2));\}\par
551   {\cf18 void} save();\par
552   {\cf18 void} restore();\par
553   \par
554   {\cf20 // non-virtual methods:}\par
555   {\cf18 void} makeNonCosmetic();\par
556   \par
557 {\cf17 protected}:\par
558   {\cf20 // property members:}\par
559   PainterModes mModes;\par
560   {\cf18 bool} mIsAntialiasing;\par
561   \par
562   {\cf20 // non-property members:}\par
563   QStack<bool> mAntialiasingStack;\par
564 \};\par
565 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPainter::PainterModes)\par
566 Q_DECLARE_METATYPE(QCPPainter::PainterMode)\par
567 \par
568 {\cf20 /* end of 'src/painter.h' */}\par
569 \par
570 \par
571 {\cf20 /* including file 'src/paintbuffer.h'      */}\par
572 {\cf20 /* modified 2022-11-06T12:45:56, size 5006 */}\par
573 \par
574 class QCP_LIB_DECL QCPAbstractPaintBuffer\par
575 \{\par
576 {\cf17 public}:\par
577   {\cf17 explicit} QCPAbstractPaintBuffer({\cf17 const} QSize &size, {\cf18 double} devicePixelRatio);\par
578   {\cf17 virtual} ~QCPAbstractPaintBuffer();\par
579   \par
580   {\cf20 // getters:}\par
581   QSize size(){\cf17  const }\{ {\cf19 return} mSize; \}\par
582   {\cf18 bool} invalidated(){\cf17  const }\{ {\cf19 return} mInvalidated; \}\par
583   {\cf18 double} devicePixelRatio(){\cf17  const }\{ {\cf19 return} mDevicePixelRatio; \}\par
584   \par
585   {\cf20 // setters:}\par
586   {\cf18 void} setSize({\cf17 const} QSize &size);\par
587   {\cf18 void} setInvalidated({\cf18 bool} invalidated={\cf17 true});\par
588   {\cf18 void} setDevicePixelRatio({\cf18 double} ratio);\par
589   \par
590   {\cf20 // introduced virtual methods:}\par
591   {\cf17 virtual} QCPPainter *startPainting() = 0;\par
592   {\cf17 virtual} {\cf18 void} donePainting() \{\}\par
593   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) {\cf17 const} = 0;\par
594   {\cf17 virtual} {\cf18 void} clear({\cf17 const} QColor &color) = 0;\par
595   \par
596 {\cf17 protected}:\par
597   {\cf20 // property members:}\par
598   QSize mSize;\par
599   {\cf18 double} mDevicePixelRatio;\par
600   \par
601   {\cf20 // non-property members:}\par
602   {\cf18 bool} mInvalidated;\par
603   \par
604   {\cf20 // introduced virtual methods:}\par
605   {\cf17 virtual} {\cf18 void} reallocateBuffer() = 0;\par
606 \};\par
607 \par
608 \par
609 {\cf17 class }QCP_LIB_DECL QCPPaintBufferPixmap : {\cf17 public} QCPAbstractPaintBuffer\par
610 \{\par
611 {\cf17 public}:\par
612   {\cf17 explicit} QCPPaintBufferPixmap({\cf17 const} QSize &size, {\cf18 double} devicePixelRatio);\par
613   {\cf17 virtual} ~QCPPaintBufferPixmap() Q_DECL_OVERRIDE;\par
614   \par
615   {\cf20 // reimplemented virtual methods:}\par
616   virtual QCPPainter *startPainting() Q_DECL_OVERRIDE;\par
617   virtual {\cf18 void} draw(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
618   {\cf18 void} clear(const QColor &color) Q_DECL_OVERRIDE;\par
619   \par
620 protected:\par
621   {\cf20 // non-property members:}\par
622   QPixmap mBuffer;\par
623   \par
624   {\cf20 // reimplemented virtual methods:}\par
625   virtual {\cf18 void} reallocateBuffer() Q_DECL_OVERRIDE;\par
626 \};\par
627 \par
628 \par
629 {\cf21 #ifdef QCP_OPENGL_PBUFFER}\par
630 {\cf17 class }QCP_LIB_DECL QCPPaintBufferGlPbuffer : {\cf17 public} QCPAbstractPaintBuffer\par
631 \{\par
632 {\cf17 public}:\par
633   {\cf17 explicit} QCPPaintBufferGlPbuffer({\cf17 const} QSize &size, {\cf18 double} devicePixelRatio, {\cf18 int} multisamples);\par
634   {\cf17 virtual} ~QCPPaintBufferGlPbuffer() Q_DECL_OVERRIDE;\par
635   \par
636   {\cf20 // reimplemented virtual methods:}\par
637   {\cf17 virtual} QCPPainter *startPainting() Q_DECL_OVERRIDE;\par
638   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
639   {\cf18 void} clear({\cf17 const} QColor &color) Q_DECL_OVERRIDE;\par
640   \par
641 {\cf17 protected}:\par
642   {\cf20 // non-property members:}\par
643   QGLPixelBuffer *mGlPBuffer;\par
644   {\cf18 int} mMultisamples;\par
645   \par
646   {\cf20 // reimplemented virtual methods:}\par
647   {\cf17 virtual} {\cf18 void} reallocateBuffer() Q_DECL_OVERRIDE;\par
648 \};\par
649 {\cf21 #endif }{\cf20 // QCP_OPENGL_PBUFFER}\par
650 \par
651 \par
652 {\cf21 #ifdef QCP_OPENGL_FBO}\par
653 {\cf17 class }QCP_LIB_DECL QCPPaintBufferGlFbo : {\cf17 public} QCPAbstractPaintBuffer\par
654 \{\par
655 {\cf17 public}:\par
656   {\cf17 explicit} QCPPaintBufferGlFbo({\cf17 const} QSize &size, {\cf18 double} devicePixelRatio, QWeakPointer<QOpenGLContext> glContext, QWeakPointer<QOpenGLPaintDevice> glPaintDevice);\par
657   {\cf17 virtual} ~QCPPaintBufferGlFbo() Q_DECL_OVERRIDE;\par
658   \par
659   {\cf20 // reimplemented virtual methods:}\par
660   virtual QCPPainter *startPainting() Q_DECL_OVERRIDE;\par
661   virtual {\cf18 void} donePainting() Q_DECL_OVERRIDE;\par
662   virtual {\cf18 void} draw(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
663   {\cf18 void} clear(const QColor &color) Q_DECL_OVERRIDE;\par
664   \par
665 protected:\par
666   {\cf20 // non-property members:}\par
667   QWeakPointer<QOpenGLContext> mGlContext;\par
668   QWeakPointer<QOpenGLPaintDevice> mGlPaintDevice;\par
669   QOpenGLFramebufferObject *mGlFrameBuffer;\par
670   \par
671   {\cf20 // reimplemented virtual methods:}\par
672   virtual {\cf18 void} reallocateBuffer() Q_DECL_OVERRIDE;\par
673 \};\par
674 {\cf21 #endif }{\cf20 // QCP_OPENGL_FBO}\par
675 \par
676 {\cf20 /* end of 'src/paintbuffer.h' */}\par
677 \par
678 \par
679 {\cf20 /* including file 'src/layer.h'            */}\par
680 {\cf20 /* modified 2022-11-06T12:45:56, size 7038 */}\par
681 \par
682 {\cf17 class }QCP_LIB_DECL QCPLayer : {\cf17 public} QObject\par
683 \{\par
684   Q_OBJECT\par
686   Q_PROPERTY(QCustomPlot* parentPlot READ parentPlot)\par
687   Q_PROPERTY(QString name READ name)\par
688   Q_PROPERTY({\cf18 int} index READ index)\par
689   Q_PROPERTY(QList<QCPLayerable*> children READ children)\par
690   Q_PROPERTY({\cf18 bool} visible READ visible WRITE setVisible)\par
691   Q_PROPERTY(LayerMode mode READ mode WRITE setMode)\par
693 {\cf17 public}:\par
694   \par
702   {\cf17 enum} LayerMode \{ lmLogical   \par
703                    ,lmBuffered \par
704                  \};\par
705   Q_ENUMS(LayerMode)\par
706   \par
707   QCPLayer(QCustomPlot* parentPlot, const QString &layerName);\par
708   virtual ~QCPLayer();\par
709   \par
710   {\cf20 // getters:}\par
711   QCustomPlot *parentPlot(){\cf17  const }\{ {\cf19 return} mParentPlot; \}\par
712   QString name(){\cf17  const }\{ {\cf19 return} mName; \}\par
713   {\cf18 int} index(){\cf17  const }\{ {\cf19 return} mIndex; \}\par
714   QList<QCPLayerable*> children(){\cf17  const }\{ {\cf19 return} mChildren; \}\par
715   {\cf18 bool} visible(){\cf17  const }\{ {\cf19 return} mVisible; \}\par
716   LayerMode mode(){\cf17  const }\{ {\cf19 return} mMode; \}\par
717   \par
718   {\cf20 // setters:}\par
719   {\cf18 void} setVisible({\cf18 bool} visible);\par
720   {\cf18 void} setMode(LayerMode mode);\par
721   \par
722   {\cf20 // non-virtual methods:}\par
723   {\cf18 void} replot();\par
724   \par
725 {\cf17 protected}:\par
726   {\cf20 // property members:}\par
727   QCustomPlot *mParentPlot;\par
728   QString mName;\par
729   {\cf18 int} mIndex;\par
730   QList<QCPLayerable*> mChildren;\par
731   {\cf18 bool} mVisible;\par
732   LayerMode mMode;\par
733   \par
734   {\cf20 // non-property members:}\par
735   QWeakPointer<QCPAbstractPaintBuffer> mPaintBuffer;\par
736   \par
737   {\cf20 // non-virtual methods:}\par
738   {\cf18 void} draw(QCPPainter *painter);\par
739   {\cf18 void} drawToPaintBuffer();\par
740   {\cf18 void} addChild(QCPLayerable *layerable, {\cf18 bool} prepend);\par
741   {\cf18 void} removeChild(QCPLayerable *layerable);\par
742   \par
743 {\cf17 private}:\par
744   Q_DISABLE_COPY(QCPLayer)\par
745   \par
746   friend class QCustomPlot;\par
747   friend class QCPLayerable;\par
748 \};\par
749 Q_DECLARE_METATYPE(QCPLayer::LayerMode)\par
750 \par
751 class QCP_LIB_DECL QCPLayerable : public QObject\par
752 \{\par
753   Q_OBJECT\par
755   Q_PROPERTY({\cf18 bool} visible READ visible WRITE setVisible)\par
756   Q_PROPERTY(QCustomPlot* parentPlot READ parentPlot)\par
757   Q_PROPERTY(QCPLayerable* parentLayerable READ parentLayerable)\par
758   Q_PROPERTY(QCPLayer* layer READ layer WRITE setLayer NOTIFY layerChanged)\par
759   Q_PROPERTY({\cf18 bool} antialiased READ antialiased WRITE setAntialiased)\par
761 {\cf17 public}:\par
762   QCPLayerable(QCustomPlot *plot, QString targetLayer=QString(), QCPLayerable *parentLayerable={\cf17 nullptr});\par
763   {\cf17 virtual} ~QCPLayerable();\par
764   \par
765   {\cf20 // getters:}\par
766   {\cf18 bool} visible(){\cf17  const }\{ {\cf19 return} mVisible; \}\par
767   QCustomPlot *parentPlot(){\cf17  const }\{ {\cf19 return} mParentPlot; \}\par
768   QCPLayerable *parentLayerable(){\cf17  const }\{ {\cf19 return} mParentLayerable.data(); \}\par
769   QCPLayer *layer(){\cf17  const }\{ {\cf19 return} mLayer; \}\par
770   {\cf18 bool} antialiased(){\cf17  const }\{ {\cf19 return} mAntialiased; \}\par
771   \par
772   {\cf20 // setters:}\par
773   {\cf18 void} setVisible({\cf18 bool} on);\par
774   Q_SLOT {\cf18 bool} setLayer(QCPLayer *layer);\par
775   {\cf18 bool} setLayer({\cf17 const} QString &layerName);\par
776   {\cf18 void} setAntialiased({\cf18 bool} enabled);\par
777   \par
778   {\cf20 // introduced virtual methods:}\par
779   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) {\cf17 const};\par
780 \par
781   {\cf20 // non-property methods:}\par
782   {\cf18 bool} realVisibility() {\cf17 const};\par
783   \par
784 signals:\par
785   {\cf18 void} layerChanged(QCPLayer *newLayer);\par
786   \par
787 {\cf17 protected}:\par
788   {\cf20 // property members:}\par
789   {\cf18 bool} mVisible;\par
790   QCustomPlot *mParentPlot;\par
791   QPointer<QCPLayerable> mParentLayerable;\par
792   QCPLayer *mLayer;\par
793   {\cf18 bool} mAntialiased;\par
794   \par
795   {\cf20 // introduced virtual methods:}\par
796   {\cf17 virtual} {\cf18 void} parentPlotInitialized(QCustomPlot *parentPlot);\par
797   {\cf17 virtual} QCP::Interaction selectionCategory() {\cf17 const};\par
798   {\cf17 virtual} QRect clipRect() {\cf17 const};\par
799   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} = 0;\par
800   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) = 0;\par
801   {\cf20 // selection events:}\par
802   {\cf17 virtual} {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, {\cf17 const} QVariant &details, {\cf18 bool} *selectionStateChanged);\par
803   {\cf17 virtual} {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged);\par
804   {\cf20 // low-level mouse events:}\par
805   {\cf17 virtual} {\cf18 void} mousePressEvent(QMouseEvent *event, {\cf17 const} QVariant &details);\par
806   {\cf17 virtual} {\cf18 void} mouseMoveEvent(QMouseEvent *event, {\cf17 const} QPointF &startPos);\par
807   {\cf17 virtual} {\cf18 void} mouseReleaseEvent(QMouseEvent *event, {\cf17 const} QPointF &startPos);\par
808   {\cf17 virtual} {\cf18 void} mouseDoubleClickEvent(QMouseEvent *event, {\cf17 const} QVariant &details);\par
809   {\cf17 virtual} {\cf18 void} wheelEvent(QWheelEvent *event);\par
810   \par
811   {\cf20 // non-property methods:}\par
812   {\cf18 void} initializeParentPlot(QCustomPlot *parentPlot);\par
813   {\cf18 void} setParentLayerable(QCPLayerable* parentLayerable);\par
814   {\cf18 bool} moveToLayer(QCPLayer *layer, {\cf18 bool} prepend);\par
815   {\cf18 void} applyAntialiasingHint(QCPPainter *painter, {\cf18 bool} localAntialiased, QCP::AntialiasedElement overrideElement) {\cf17 const};\par
816   \par
817 {\cf17 private}:\par
818   Q_DISABLE_COPY(QCPLayerable)\par
819   \par
820   friend class QCustomPlot;\par
821   friend class QCPLayer;\par
822   friend class QCPAxisRect;\par
823 \};\par
824 \par
825 {\cf20 /* end of 'src/layer.h' */}\par
826 \par
827 \par
828 {\cf20 /* including file 'src/axis/range.h'       */}\par
829 {\cf20 /* modified 2022-11-06T12:45:56, size 5280 */}\par
830 \par
831 class QCP_LIB_DECL QCPRange\par
832 \{\par
833 {\cf17 public}:\par
834   {\cf18 double} lower, upper;\par
835   \par
836   QCPRange();\par
837   QCPRange({\cf18 double} lower, {\cf18 double} upper);\par
838   \par
839   {\cf18 bool} operator==({\cf17 const} QCPRange& other){\cf17  const }\{ {\cf19 return} lower == other.lower && upper == other.upper; \}\par
840   {\cf18 bool} operator!=({\cf17 const} QCPRange& other){\cf17  const }\{ {\cf19 return} !(*{\cf17 this} == other); \}\par
841   \par
842   QCPRange &operator+=({\cf17 const} {\cf18 double}& value) \{ lower+=value; upper+=value; {\cf19 return} *{\cf17 this}; \}\par
843   QCPRange &operator-=({\cf17 const} {\cf18 double}& value) \{ lower-=value; upper-=value; {\cf19 return} *{\cf17 this}; \}\par
844   QCPRange &operator*=({\cf17 const} {\cf18 double}& value) \{ lower*=value; upper*=value; {\cf19 return} *{\cf17 this}; \}\par
845   QCPRange &operator/=({\cf17 const} {\cf18 double}& value) \{ lower/=value; upper/=value; {\cf19 return} *{\cf17 this}; \}\par
846   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPRange operator+({\cf17 const} QCPRange&, {\cf18 double});\par
847   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPRange operator+({\cf18 double}, {\cf17 const} QCPRange&);\par
848   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPRange operator-({\cf17 const} QCPRange& range, {\cf18 double} value);\par
849   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPRange operator*({\cf17 const} QCPRange& range, {\cf18 double} value);\par
850   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPRange operator*({\cf18 double} value, {\cf17 const} QCPRange& range);\par
851   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPRange operator/({\cf17 const} QCPRange& range, {\cf18 double} value);\par
852   \par
853   {\cf18 double} size(){\cf17  const }\{ {\cf19 return} upper-lower; \}\par
854   {\cf18 double} center(){\cf17  const }\{ {\cf19 return} (upper+lower)*0.5; \}\par
855   {\cf18 void} normalize() \{ {\cf19 if} (lower > upper) qSwap(lower, upper); \}\par
856   {\cf18 void} expand({\cf17 const} QCPRange &otherRange);\par
857   {\cf18 void} expand({\cf18 double} includeCoord);\par
858   QCPRange expanded({\cf17 const} QCPRange &otherRange) {\cf17 const};\par
859   QCPRange expanded({\cf18 double} includeCoord) {\cf17 const};\par
860   QCPRange bounded({\cf18 double} lowerBound, {\cf18 double} upperBound) {\cf17 const};\par
861   QCPRange sanitizedForLogScale() {\cf17 const};\par
862   QCPRange sanitizedForLinScale() {\cf17 const};\par
863   {\cf18 bool} contains({\cf18 double} value){\cf17  const }\{ {\cf19 return} value >= lower && value <= upper; \}\par
864   \par
865   {\cf17 static} {\cf18 bool} validRange({\cf18 double} lower, {\cf18 double} upper);\par
866   {\cf17 static} {\cf18 bool} validRange({\cf17 const} QCPRange &range);\par
867   {\cf17 static} {\cf17 const} {\cf18 double} minRange;\par
868   {\cf17 static} {\cf17 const} {\cf18 double} maxRange;\par
869   \par
870 \};\par
871 Q_DECLARE_TYPEINFO(QCPRange, Q_MOVABLE_TYPE);\par
872 \par
877 {\cf17 inline} QDebug operator<< (QDebug d, {\cf17 const} QCPRange &range)\par
878 \{\par
879     d.nospace() << {\cf22 "QCPRange("} << range.lower << {\cf22 ", "} << range.upper << {\cf22 ")"};\par
880     {\cf19 return} d.space();\par
881 \}\par
882 \par
886 {\cf17 inline} {\cf17 const} QCPRange operator+({\cf17 const} QCPRange& range, {\cf18 double} value)\par
887 \{\par
888   QCPRange result(range);\par
889   result += value;\par
890   {\cf19 return} result;\par
891 \}\par
892 \par
896 {\cf17 inline} {\cf17 const} QCPRange operator+({\cf18 double} value, {\cf17 const} QCPRange& range)\par
897 \{\par
898   QCPRange result(range);\par
899   result += value;\par
900   {\cf19 return} result;\par
901 \}\par
902 \par
906 {\cf17 inline} {\cf17 const} QCPRange operator-({\cf17 const} QCPRange& range, {\cf18 double} value)\par
907 \{\par
908   QCPRange result(range);\par
909   result -= value;\par
910   {\cf19 return} result;\par
911 \}\par
912 \par
916 {\cf17 inline} {\cf17 const} QCPRange operator*({\cf17 const} QCPRange& range, {\cf18 double} value)\par
917 \{\par
918   QCPRange result(range);\par
919   result *= value;\par
920   {\cf19 return} result;\par
921 \}\par
922 \par
926 {\cf17 inline} {\cf17 const} QCPRange operator*({\cf18 double} value, {\cf17 const} QCPRange& range)\par
927 \{\par
928   QCPRange result(range);\par
929   result *= value;\par
930   {\cf19 return} result;\par
931 \}\par
932 \par
936 {\cf17 inline} {\cf17 const} QCPRange operator/({\cf17 const} QCPRange& range, {\cf18 double} value)\par
937 \{\par
938   QCPRange result(range);\par
939   result /= value;\par
940   {\cf19 return} result;\par
941 \}\par
942 \par
943 {\cf20 /* end of 'src/axis/range.h' */}\par
944 \par
945 \par
946 {\cf20 /* including file 'src/selection.h'        */}\par
947 {\cf20 /* modified 2022-11-06T12:45:56, size 8569 */}\par
948 \par
949 {\cf17 class }QCP_LIB_DECL QCPDataRange\par
950 \{\par
951 {\cf17 public}:\par
952   QCPDataRange();\par
953   QCPDataRange({\cf18 int} begin, {\cf18 int} end);\par
954   \par
955   {\cf18 bool} operator==({\cf17 const} QCPDataRange& other){\cf17  const }\{ {\cf19 return} mBegin == other.mBegin && mEnd == other.mEnd; \}\par
956   {\cf18 bool} operator!=({\cf17 const} QCPDataRange& other){\cf17  const }\{ {\cf19 return} !(*{\cf17 this} == other); \}\par
957   \par
958   {\cf20 // getters:}\par
959   {\cf18 int} begin(){\cf17  const }\{ {\cf19 return} mBegin; \}\par
960   {\cf18 int} end(){\cf17  const }\{ {\cf19 return} mEnd; \}\par
961   {\cf18 int} size(){\cf17  const }\{ {\cf19 return} mEnd-mBegin; \}\par
962   {\cf18 int} length(){\cf17  const }\{ {\cf19 return} size(); \}\par
963   \par
964   {\cf20 // setters:}\par
965   {\cf18 void} setBegin({\cf18 int} begin) \{ mBegin = begin; \}\par
966   {\cf18 void} setEnd({\cf18 int} end)  \{ mEnd = end; \}\par
967   \par
968   {\cf20 // non-property methods:}\par
969   {\cf18 bool} isValid(){\cf17  const }\{ {\cf19 return} (mEnd >= mBegin) && (mBegin >= 0); \}\par
970   {\cf18 bool} isEmpty(){\cf17  const }\{ {\cf19 return} length() == 0; \}\par
971   QCPDataRange bounded({\cf17 const} QCPDataRange &other) {\cf17 const};\par
972   QCPDataRange expanded({\cf17 const} QCPDataRange &other) {\cf17 const};\par
973   QCPDataRange intersection({\cf17 const} QCPDataRange &other) {\cf17 const};\par
974   QCPDataRange adjusted({\cf18 int} changeBegin, {\cf18 int} changeEnd){\cf17  const }\{ {\cf19 return} QCPDataRange(mBegin+changeBegin, mEnd+changeEnd); \}\par
975   {\cf18 bool} intersects({\cf17 const} QCPDataRange &other) {\cf17 const};\par
976   {\cf18 bool} contains({\cf17 const} QCPDataRange &other) {\cf17 const};\par
977   \par
978 {\cf17 private}:\par
979   {\cf20 // property members:}\par
980   {\cf18 int} mBegin, mEnd;\par
981 \par
982 \};\par
983 Q_DECLARE_TYPEINFO(QCPDataRange, Q_MOVABLE_TYPE);\par
984 \par
985 \par
986 {\cf17 class }QCP_LIB_DECL QCPDataSelection\par
987 \{\par
988 {\cf17 public}:\par
989   {\cf17 explicit} QCPDataSelection();\par
990   {\cf17 explicit} QCPDataSelection({\cf17 const} QCPDataRange &range);\par
991   \par
992   {\cf18 bool} operator==({\cf17 const} QCPDataSelection& other) {\cf17 const};\par
993   {\cf18 bool} operator!=({\cf17 const} QCPDataSelection& other){\cf17  const }\{ {\cf19 return} !(*{\cf17 this} == other); \}\par
994   QCPDataSelection &operator+=({\cf17 const} QCPDataSelection& other);\par
995   QCPDataSelection &operator+=({\cf17 const} QCPDataRange& other);\par
996   QCPDataSelection &operator-=({\cf17 const} QCPDataSelection& other);\par
997   QCPDataSelection &operator-=({\cf17 const} QCPDataRange& other);\par
998   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataSelection& b);\par
999   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataSelection& b);\par
1000   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataRange& b);\par
1001   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataRange& b);\par
1002   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataSelection& b);\par
1003   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataSelection& b);\par
1004   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataRange& b);\par
1005   {\cf17 friend} {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataRange& b);\par
1006   \par
1007   {\cf20 // getters:}\par
1008   {\cf18 int} dataRangeCount(){\cf17  const }\{ {\cf19 return} mDataRanges.size(); \}\par
1009   {\cf18 int} dataPointCount() {\cf17 const};\par
1010   QCPDataRange dataRange({\cf18 int} index=0) {\cf17 const};\par
1011   QList<QCPDataRange> dataRanges(){\cf17  const }\{ {\cf19 return} mDataRanges; \}\par
1012   QCPDataRange span() {\cf17 const};\par
1013   \par
1014   {\cf20 // non-property methods:}\par
1015   {\cf18 void} addDataRange({\cf17 const} QCPDataRange &dataRange, {\cf18 bool} simplify={\cf17 true});\par
1016   {\cf18 void} clear();\par
1017   {\cf18 bool} isEmpty(){\cf17  const }\{ {\cf19 return} mDataRanges.isEmpty(); \}\par
1018   {\cf18 void} simplify();\par
1019   {\cf18 void} enforceType(QCP::SelectionType type);\par
1020   {\cf18 bool} contains({\cf17 const} QCPDataSelection &other) {\cf17 const};\par
1021   QCPDataSelection intersection({\cf17 const} QCPDataRange &other) {\cf17 const};\par
1022   QCPDataSelection intersection({\cf17 const} QCPDataSelection &other) {\cf17 const};\par
1023   QCPDataSelection inverse({\cf17 const} QCPDataRange &outerRange) {\cf17 const};\par
1024   \par
1025 {\cf17 private}:\par
1026   {\cf20 // property members:}\par
1027   QList<QCPDataRange> mDataRanges;\par
1028   \par
1029   {\cf17 inline} {\cf17 static} {\cf18 bool} lessThanDataRangeBegin({\cf17 const} QCPDataRange &a, {\cf17 const} QCPDataRange &b) \{ {\cf19 return} a.begin() < b.begin(); \}\par
1030 \};\par
1031 Q_DECLARE_METATYPE(QCPDataSelection)\par
1032 \par
1033 \par
1034 \par
1038 inline const QCPDataSelection operator+(const QCPDataSelection& a, const QCPDataSelection& b)\par
1039 \{\par
1040   QCPDataSelection result(a);\par
1041   result += b;\par
1042   {\cf19 return} result;\par
1043 \}\par
1044 \par
1049 {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataSelection& b)\par
1050 \{\par
1051   QCPDataSelection result(a);\par
1052   result += b;\par
1053   {\cf19 return} result;\par
1054 \}\par
1055 \par
1060 {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataRange& b)\par
1061 \{\par
1062   QCPDataSelection result(a);\par
1063   result += b;\par
1064   {\cf19 return} result;\par
1065 \}\par
1066 \par
1071 {\cf17 inline} {\cf17 const} QCPDataSelection operator+({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataRange& b)\par
1072 \{\par
1073   QCPDataSelection result(a);\par
1074   result += b;\par
1075   {\cf19 return} result;\par
1076 \}\par
1077 \par
1081 {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataSelection& b)\par
1082 \{\par
1083   QCPDataSelection result(a);\par
1084   result -= b;\par
1085   {\cf19 return} result;\par
1086 \}\par
1087 \par
1091 {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataSelection& b)\par
1092 \{\par
1093   QCPDataSelection result(a);\par
1094   result -= b;\par
1095   {\cf19 return} result;\par
1096 \}\par
1097 \par
1101 {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataSelection& a, {\cf17 const} QCPDataRange& b)\par
1102 \{\par
1103   QCPDataSelection result(a);\par
1104   result -= b;\par
1105   {\cf19 return} result;\par
1106 \}\par
1107 \par
1111 {\cf17 inline} {\cf17 const} QCPDataSelection operator-({\cf17 const} QCPDataRange& a, {\cf17 const} QCPDataRange& b)\par
1112 \{\par
1113   QCPDataSelection result(a);\par
1114   result -= b;\par
1115   {\cf19 return} result;\par
1116 \}\par
1117 \par
1122 {\cf17 inline} QDebug operator<< (QDebug d, {\cf17 const} QCPDataRange &dataRange)\par
1123 \{\par
1124   d.nospace() << {\cf22 "QCPDataRange("} << dataRange.begin() << {\cf22 ", "} << dataRange.end() << {\cf22 ")"};\par
1125   {\cf19 return} d;\par
1126 \}\par
1127 \par
1132 {\cf17 inline} QDebug operator<< (QDebug d, {\cf17 const} QCPDataSelection &selection)\par
1133 \{\par
1134     d.nospace() << {\cf22 "QCPDataSelection("};\par
1135     {\cf19 for} ({\cf18 int} i=0; i<selection.dataRangeCount(); ++i)\par
1136     \{\par
1137       {\cf19 if} (i != 0)\par
1138         d << {\cf22 ", "};\par
1139       d << selection.dataRange(i);\par
1140     \}\par
1141     d << {\cf22 ")"};\par
1142     {\cf19 return} d;\par
1143 \}\par
1144 \par
1145 \par
1146 \par
1147 {\cf20 /* end of 'src/selection.h' */}\par
1148 \par
1149 \par
1150 {\cf20 /* including file 'src/selectionrect.h'    */}\par
1151 {\cf20 /* modified 2022-11-06T12:45:56, size 3354 */}\par
1152 \par
1153 {\cf17 class }QCP_LIB_DECL QCPSelectionRect : {\cf17 public} QCPLayerable\par
1154 \{\par
1155   Q_OBJECT\par
1156 {\cf17 public}:\par
1157   {\cf17 explicit} QCPSelectionRect(QCustomPlot *parentPlot);\par
1158   {\cf17 virtual} ~QCPSelectionRect() Q_DECL_OVERRIDE;\par
1159   \par
1160   {\cf20 // getters:}\par
1161   QRect rect(){\cf17  const }\{ {\cf19 return} mRect; \}\par
1162   QCPRange range({\cf17 const} QCPAxis *axis) {\cf17 const};\par
1163   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
1164   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
1165   {\cf18 bool} isActive(){\cf17  const }\{ {\cf19 return} mActive; \}\par
1166   \par
1167   {\cf20 // setters:}\par
1168   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
1169   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
1170   \par
1171   {\cf20 // non-property methods:}\par
1172   Q_SLOT {\cf18 void} cancel();\par
1173   \par
1174 signals:\par
1175   {\cf18 void} started(QMouseEvent *event);\par
1176   {\cf18 void} changed({\cf17 const} QRect &rect, QMouseEvent *event);\par
1177   {\cf18 void} canceled({\cf17 const} QRect &rect, QInputEvent *event);\par
1178   {\cf18 void} accepted({\cf17 const} QRect &rect, QMouseEvent *event);\par
1179   \par
1180 {\cf17 protected}:\par
1181   {\cf20 // property members:}\par
1182   QRect mRect;\par
1183   QPen mPen;\par
1184   QBrush mBrush;\par
1185   {\cf20 // non-property members:}\par
1186   {\cf18 bool} mActive;\par
1187   \par
1188   {\cf20 // introduced virtual methods:}\par
1189   {\cf17 virtual} {\cf18 void} startSelection(QMouseEvent *event);\par
1190   {\cf17 virtual} {\cf18 void} moveSelection(QMouseEvent *event);\par
1191   {\cf17 virtual} {\cf18 void} endSelection(QMouseEvent *event);\par
1192   {\cf17 virtual} {\cf18 void} keyPressEvent(QKeyEvent *event);\par
1193   \par
1194   {\cf20 // reimplemented virtual methods}\par
1195   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
1196   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
1197   \par
1198   {\cf17 friend} {\cf17 class }QCustomPlot;\par
1199 \};\par
1200 \par
1201 {\cf20 /* end of 'src/selectionrect.h' */}\par
1202 \par
1203 \par
1204 {\cf20 /* including file 'src/layout.h'            */}\par
1205 {\cf20 /* modified 2022-11-06T12:45:56, size 14279 */}\par
1206 \par
1207 {\cf17 class }QCP_LIB_DECL QCPMarginGroup : {\cf17 public} QObject\par
1208 \{\par
1209   Q_OBJECT\par
1210 {\cf17 public}:\par
1211   {\cf17 explicit} QCPMarginGroup(QCustomPlot *parentPlot);\par
1212   {\cf17 virtual} ~QCPMarginGroup();\par
1213   \par
1214   {\cf20 // non-virtual methods:}\par
1215   QList<QCPLayoutElement*> elements(QCP::MarginSide side){\cf17  const }\{ {\cf19 return} mChildren.value(side); \}\par
1216   {\cf18 bool} isEmpty() {\cf17 const};\par
1217   {\cf18 void} clear();\par
1218   \par
1219 {\cf17 protected}:\par
1220   {\cf20 // non-property members:}\par
1221   QCustomPlot *mParentPlot;\par
1222   QHash<QCP::MarginSide, QList<QCPLayoutElement*> > mChildren;\par
1223   \par
1224   {\cf20 // introduced virtual methods:}\par
1225   {\cf17 virtual} {\cf18 int} commonMargin(QCP::MarginSide side) {\cf17 const};\par
1226   \par
1227   {\cf20 // non-virtual methods:}\par
1228   {\cf18 void} addChild(QCP::MarginSide side, QCPLayoutElement *element);\par
1229   {\cf18 void} removeChild(QCP::MarginSide side, QCPLayoutElement *element);\par
1230   \par
1231 {\cf17 private}:\par
1232   Q_DISABLE_COPY(QCPMarginGroup)\par
1233   \par
1234   friend class QCPLayoutElement;\par
1235 \};\par
1236 \par
1237 \par
1238 class QCP_LIB_DECL QCPLayoutElement : public QCPLayerable\par
1239 \{\par
1240   Q_OBJECT\par
1242   Q_PROPERTY(QCPLayout* layout READ layout)\par
1243   Q_PROPERTY(QRect rect READ rect)\par
1244   Q_PROPERTY(QRect outerRect READ outerRect WRITE setOuterRect)\par
1245   Q_PROPERTY(QMargins margins READ margins WRITE setMargins)\par
1246   Q_PROPERTY(QMargins minimumMargins READ minimumMargins WRITE setMinimumMargins)\par
1247   Q_PROPERTY(QSize minimumSize READ minimumSize WRITE setMinimumSize)\par
1248   Q_PROPERTY(QSize maximumSize READ maximumSize WRITE setMaximumSize)\par
1249   Q_PROPERTY(SizeConstraintRect sizeConstraintRect READ sizeConstraintRect WRITE setSizeConstraintRect)\par
1251 {\cf17 public}:\par
1256   {\cf17 enum} UpdatePhase \{ upPreparation \par
1257                      ,upMargins    \par
1258                      ,upLayout     \par
1259                    \};\par
1260   Q_ENUMS(UpdatePhase)\par
1261   \par
1262   \par
1270   enum SizeConstraintRect \{ scrInnerRect \par
1271                             , scrOuterRect \par
1272                           \};\par
1273   Q_ENUMS(SizeConstraintRect)\par
1274 \par
1275   explicit QCPLayoutElement(QCustomPlot *parentPlot={\cf18 nullptr});\par
1276   virtual ~QCPLayoutElement() Q_DECL_OVERRIDE;\par
1277   \par
1278   {\cf20 // getters:}\par
1279   QCPLayout *layout(){\cf17  const }\{ {\cf19 return} mParentLayout; \}\par
1280   QRect rect(){\cf17  const }\{ {\cf19 return} mRect; \}\par
1281   QRect outerRect(){\cf17  const }\{ {\cf19 return} mOuterRect; \}\par
1282   QMargins margins(){\cf17  const }\{ {\cf19 return} mMargins; \}\par
1283   QMargins minimumMargins(){\cf17  const }\{ {\cf19 return} mMinimumMargins; \}\par
1284   QCP::MarginSides autoMargins(){\cf17  const }\{ {\cf19 return} mAutoMargins; \}\par
1285   QSize minimumSize(){\cf17  const }\{ {\cf19 return} mMinimumSize; \}\par
1286   QSize maximumSize(){\cf17  const }\{ {\cf19 return} mMaximumSize; \}\par
1287   SizeConstraintRect sizeConstraintRect(){\cf17  const }\{ {\cf19 return} mSizeConstraintRect; \}\par
1288   QCPMarginGroup *marginGroup(QCP::MarginSide side){\cf17  const }\{ {\cf19 return} mMarginGroups.value(side, {\cf17 nullptr}); \}\par
1289   QHash<QCP::MarginSide, QCPMarginGroup*> marginGroups(){\cf17  const }\{ {\cf19 return} mMarginGroups; \}\par
1290   \par
1291   {\cf20 // setters:}\par
1292   {\cf18 void} setOuterRect({\cf17 const} QRect &rect);\par
1293   {\cf18 void} setMargins({\cf17 const} QMargins &margins);\par
1294   {\cf18 void} setMinimumMargins({\cf17 const} QMargins &margins);\par
1295   {\cf18 void} setAutoMargins(QCP::MarginSides sides);\par
1296   {\cf18 void} setMinimumSize({\cf17 const} QSize &size);\par
1297   {\cf18 void} setMinimumSize({\cf18 int} width, {\cf18 int} height);\par
1298   {\cf18 void} setMaximumSize({\cf17 const} QSize &size);\par
1299   {\cf18 void} setMaximumSize({\cf18 int} width, {\cf18 int} height);\par
1300   {\cf18 void} setSizeConstraintRect(SizeConstraintRect constraintRect);\par
1301   {\cf18 void} setMarginGroup(QCP::MarginSides sides, QCPMarginGroup *group);\par
1302   \par
1303   {\cf20 // introduced virtual methods:}\par
1304   {\cf17 virtual} {\cf18 void} update(UpdatePhase phase);\par
1305   {\cf17 virtual} QSize minimumOuterSizeHint() {\cf17 const};\par
1306   {\cf17 virtual} QSize maximumOuterSizeHint() {\cf17 const};\par
1307   {\cf17 virtual} QList<QCPLayoutElement*> elements({\cf18 bool} recursive) {\cf17 const};\par
1308   \par
1309   {\cf20 // reimplemented virtual methods:}\par
1310   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
1311   \par
1312 protected:\par
1313   {\cf20 // property members:}\par
1314   QCPLayout *mParentLayout;\par
1315   QSize mMinimumSize, mMaximumSize;\par
1316   SizeConstraintRect mSizeConstraintRect;\par
1317   QRect mRect, mOuterRect;\par
1318   QMargins mMargins, mMinimumMargins;\par
1319   QCP::MarginSides mAutoMargins;\par
1320   QHash<QCP::MarginSide, QCPMarginGroup*> mMarginGroups;\par
1321   \par
1322   {\cf20 // introduced virtual methods:}\par
1323   virtual {\cf18 int} calculateAutoMargin(QCP::MarginSide side);\par
1324   virtual {\cf18 void} layoutChanged();\par
1325   \par
1326   {\cf20 // reimplemented virtual methods:}\par
1327   virtual {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE \{ Q_UNUSED(painter) \}\par
1328   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE \{ Q_UNUSED(painter) \}\par
1329   {\cf17 virtual} {\cf18 void} parentPlotInitialized(QCustomPlot *parentPlot) Q_DECL_OVERRIDE;\par
1330 \par
1331 {\cf17 private}:\par
1332   Q_DISABLE_COPY(QCPLayoutElement)\par
1333   \par
1334   friend class QCustomPlot;\par
1335   friend class QCPLayout;\par
1336   friend class QCPMarginGroup;\par
1337 \};\par
1338 Q_DECLARE_METATYPE(QCPLayoutElement::UpdatePhase)\par
1339 \par
1340 \par
1341 class QCP_LIB_DECL QCPLayout : public QCPLayoutElement\par
1342 \{\par
1343   Q_OBJECT\par
1344 {\cf17 public}:\par
1345   {\cf17 explicit} QCPLayout();\par
1346   \par
1347   {\cf20 // reimplemented virtual methods:}\par
1348   {\cf17 virtual} {\cf18 void} update(UpdatePhase phase) Q_DECL_OVERRIDE;\par
1349   {\cf17 virtual} QList<QCPLayoutElement*> elements({\cf18 bool} recursive) {\cf17 const} Q_DECL_OVERRIDE;\par
1350   \par
1351   {\cf20 // introduced virtual methods:}\par
1352   {\cf17 virtual} {\cf18 int} elementCount() {\cf17 const} = 0;\par
1353   {\cf17 virtual} QCPLayoutElement* elementAt({\cf18 int} index) {\cf17 const} = 0;\par
1354   {\cf17 virtual} QCPLayoutElement* takeAt({\cf18 int} index) = 0;\par
1355   {\cf17 virtual} {\cf18 bool} take(QCPLayoutElement* element) = 0;\par
1356   {\cf17 virtual} {\cf18 void} simplify();\par
1357   \par
1358   {\cf20 // non-virtual methods:}\par
1359   {\cf18 bool} removeAt({\cf18 int} index);\par
1360   {\cf18 bool} remove(QCPLayoutElement* element);\par
1361   {\cf18 void} clear();\par
1362   \par
1363 {\cf17 protected}:\par
1364   {\cf20 // introduced virtual methods:}\par
1365   {\cf17 virtual} {\cf18 void} updateLayout();\par
1366   \par
1367   {\cf20 // non-virtual methods:}\par
1368   {\cf18 void} sizeConstraintsChanged() {\cf17 const};\par
1369   {\cf18 void} adoptElement(QCPLayoutElement *el);\par
1370   {\cf18 void} releaseElement(QCPLayoutElement *el);\par
1371   QVector<int> getSectionSizes(QVector<int> maxSizes, QVector<int> minSizes, QVector<double> stretchFactors, {\cf18 int} totalSize) {\cf17 const};\par
1372   {\cf17 static} QSize getFinalMinimumOuterSize({\cf17 const} QCPLayoutElement *el);\par
1373   {\cf17 static} QSize getFinalMaximumOuterSize({\cf17 const} QCPLayoutElement *el);\par
1374   \par
1375 {\cf17 private}:\par
1376   Q_DISABLE_COPY(QCPLayout)\par
1377   friend class QCPLayoutElement;\par
1378 \};\par
1379 \par
1380 \par
1381 class QCP_LIB_DECL QCPLayoutGrid : public QCPLayout\par
1382 \{\par
1383   Q_OBJECT\par
1385   Q_PROPERTY({\cf18 int} rowCount READ rowCount)\par
1386   Q_PROPERTY({\cf18 int} columnCount READ columnCount)\par
1387   Q_PROPERTY(QList<double> columnStretchFactors READ columnStretchFactors WRITE setColumnStretchFactors)\par
1388   Q_PROPERTY(QList<double> rowStretchFactors READ rowStretchFactors WRITE setRowStretchFactors)\par
1389   Q_PROPERTY({\cf18 int} columnSpacing READ columnSpacing WRITE setColumnSpacing)\par
1390   Q_PROPERTY({\cf18 int} rowSpacing READ rowSpacing WRITE setRowSpacing)\par
1391   Q_PROPERTY(FillOrder fillOrder READ fillOrder WRITE setFillOrder)\par
1392   Q_PROPERTY({\cf18 int} wrap READ wrap WRITE setWrap)\par
1394 {\cf17 public}:\par
1395   \par
1403   {\cf17 enum} FillOrder \{ foRowsFirst    \par
1404                   ,foColumnsFirst \par
1405                 \};\par
1406   Q_ENUMS(FillOrder)\par
1407   \par
1408   explicit QCPLayoutGrid();\par
1409   virtual ~QCPLayoutGrid() Q_DECL_OVERRIDE;\par
1410   \par
1411   {\cf20 // getters:}\par
1412   {\cf18 int} rowCount(){\cf17  const }\{ {\cf19 return} mElements.size(); \}\par
1413   {\cf18 int} columnCount(){\cf17  const }\{ {\cf19 return} mElements.size() > 0 ? mElements.first().size() : 0; \}\par
1414   QList<double> columnStretchFactors(){\cf17  const }\{ {\cf19 return} mColumnStretchFactors; \}\par
1415   QList<double> rowStretchFactors(){\cf17  const }\{ {\cf19 return} mRowStretchFactors; \}\par
1416   {\cf18 int} columnSpacing(){\cf17  const }\{ {\cf19 return} mColumnSpacing; \}\par
1417   {\cf18 int} rowSpacing(){\cf17  const }\{ {\cf19 return} mRowSpacing; \}\par
1418   {\cf18 int} wrap(){\cf17  const }\{ {\cf19 return} mWrap; \}\par
1419   FillOrder fillOrder(){\cf17  const }\{ {\cf19 return} mFillOrder; \}\par
1420   \par
1421   {\cf20 // setters:}\par
1422   {\cf18 void} setColumnStretchFactor({\cf18 int} column, {\cf18 double} factor);\par
1423   {\cf18 void} setColumnStretchFactors({\cf17 const} QList<double> &factors);\par
1424   {\cf18 void} setRowStretchFactor({\cf18 int} row, {\cf18 double} factor);\par
1425   {\cf18 void} setRowStretchFactors({\cf17 const} QList<double> &factors);\par
1426   {\cf18 void} setColumnSpacing({\cf18 int} pixels);\par
1427   {\cf18 void} setRowSpacing({\cf18 int} pixels);\par
1428   {\cf18 void} setWrap({\cf18 int} count);\par
1429   {\cf18 void} setFillOrder(FillOrder order, {\cf18 bool} rearrange={\cf17 true});\par
1430   \par
1431   {\cf20 // reimplemented virtual methods:}\par
1432   {\cf17 virtual} {\cf18 void} updateLayout() Q_DECL_OVERRIDE;\par
1433   virtual {\cf18 int} elementCount() const Q_DECL_OVERRIDE \{ {\cf19 return} rowCount()*columnCount(); \}\par
1434   {\cf17 virtual} QCPLayoutElement* elementAt({\cf18 int} index) {\cf17 const} Q_DECL_OVERRIDE;\par
1435   {\cf17 virtual} QCPLayoutElement* takeAt({\cf18 int} index) Q_DECL_OVERRIDE;\par
1436   {\cf17 virtual} {\cf18 bool} take(QCPLayoutElement* element) Q_DECL_OVERRIDE;\par
1437   {\cf17 virtual} QList<QCPLayoutElement*> elements({\cf18 bool} recursive) {\cf17 const} Q_DECL_OVERRIDE;\par
1438   {\cf17 virtual} {\cf18 void} simplify() Q_DECL_OVERRIDE;\par
1439   virtual QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;\par
1440   virtual QSize maximumOuterSizeHint() const Q_DECL_OVERRIDE;\par
1441   \par
1442   {\cf20 // non-virtual methods:}\par
1443   QCPLayoutElement *element({\cf18 int} row, {\cf18 int} column) const;\par
1444   {\cf18 bool} addElement({\cf18 int} row, {\cf18 int} column, QCPLayoutElement *element);\par
1445   {\cf18 bool} addElement(QCPLayoutElement *element);\par
1446   {\cf18 bool} hasElement({\cf18 int} row, {\cf18 int} column);\par
1447   {\cf18 void} expandTo({\cf18 int} newRowCount, {\cf18 int} newColumnCount);\par
1448   {\cf18 void} insertRow({\cf18 int} newIndex);\par
1449   {\cf18 void} insertColumn({\cf18 int} newIndex);\par
1450   {\cf18 int} rowColToIndex({\cf18 int} row, {\cf18 int} column) const;\par
1451   {\cf18 void} indexToRowCol({\cf18 int} index, {\cf18 int} &row, {\cf18 int} &column) const;\par
1452   \par
1453 protected:\par
1454   {\cf20 // property members:}\par
1455   QList<QList<QCPLayoutElement*> > mElements;\par
1456   QList<{\cf18 double}> mColumnStretchFactors;\par
1457   QList<{\cf18 double}> mRowStretchFactors;\par
1458   {\cf18 int} mColumnSpacing, mRowSpacing;\par
1459   {\cf18 int} mWrap;\par
1460   FillOrder mFillOrder;\par
1461   \par
1462   {\cf20 // non-virtual methods:}\par
1463   {\cf18 void} getMinimumRowColSizes(QVector<{\cf18 int}> *minColWidths, QVector<{\cf18 int}> *minRowHeights) const;\par
1464   {\cf18 void} getMaximumRowColSizes(QVector<{\cf18 int}> *maxColWidths, QVector<{\cf18 int}> *maxRowHeights) const;\par
1465   \par
1466 private:\par
1467   Q_DISABLE_COPY(QCPLayoutGrid)\par
1468 \};\par
1469 Q_DECLARE_METATYPE(QCPLayoutGrid::FillOrder)\par
1470 \par
1471 \par
1472 class QCP_LIB_DECL QCPLayoutInset : public QCPLayout\par
1473 \{\par
1474   Q_OBJECT\par
1475 {\cf17 public}:\par
1479   {\cf17 enum} InsetPlacement \{ ipFree            \par
1480                         ,ipBorderAligned  \par
1481                       \};\par
1482   Q_ENUMS(InsetPlacement)\par
1483   \par
1484   explicit QCPLayoutInset();\par
1485   virtual ~QCPLayoutInset() Q_DECL_OVERRIDE;\par
1486   \par
1487   {\cf20 // getters:}\par
1488   InsetPlacement insetPlacement({\cf18 int} index) const;\par
1489   Qt::Alignment insetAlignment({\cf18 int} index) const;\par
1490   QRectF insetRect({\cf18 int} index) const;\par
1491   \par
1492   {\cf20 // setters:}\par
1493   {\cf18 void} setInsetPlacement({\cf18 int} index, InsetPlacement placement);\par
1494   {\cf18 void} setInsetAlignment({\cf18 int} index, Qt::Alignment alignment);\par
1495   {\cf18 void} setInsetRect({\cf18 int} index, const QRectF &rect);\par
1496   \par
1497   {\cf20 // reimplemented virtual methods:}\par
1498   virtual {\cf18 void} updateLayout() Q_DECL_OVERRIDE;\par
1499   virtual {\cf18 int} elementCount() const Q_DECL_OVERRIDE;\par
1500   virtual QCPLayoutElement* elementAt({\cf18 int} index) const Q_DECL_OVERRIDE;\par
1501   virtual QCPLayoutElement* takeAt({\cf18 int} index) Q_DECL_OVERRIDE;\par
1502   virtual {\cf18 bool} take(QCPLayoutElement* element) Q_DECL_OVERRIDE;\par
1503   virtual {\cf18 void} simplify() Q_DECL_OVERRIDE \{\}\par
1504   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
1505   \par
1506   {\cf20 // non-virtual methods:}\par
1507   {\cf18 void} addElement(QCPLayoutElement *element, Qt::Alignment alignment);\par
1508   {\cf18 void} addElement(QCPLayoutElement *element, const QRectF &rect);\par
1509   \par
1510 protected:\par
1511   {\cf20 // property members:}\par
1512   QList<QCPLayoutElement*> mElements;\par
1513   QList<InsetPlacement> mInsetPlacement;\par
1514   QList<Qt::Alignment> mInsetAlignment;\par
1515   QList<QRectF> mInsetRect;\par
1516   \par
1517 private:\par
1518   Q_DISABLE_COPY(QCPLayoutInset)\par
1519 \};\par
1520 Q_DECLARE_METATYPE(QCPLayoutInset::InsetPlacement)\par
1521 \par
1522 {\cf20 /* end of 'src/layout.h' */}\par
1523 \par
1524 \par
1525 {\cf20 /* including file 'src/lineending.h'       */}\par
1526 {\cf20 /* modified 2022-11-06T12:45:56, size 4426 */}\par
1527 \par
1528 class QCP_LIB_DECL QCPLineEnding\par
1529 \{\par
1530   Q_GADGET\par
1531 {\cf17 public}:\par
1543   {\cf17 enum} EndingStyle \{ esNone          \par
1544                      ,esFlatArrow    \par
1545                      ,esSpikeArrow   \par
1546                      ,esLineArrow    \par
1547                      ,esDisc         \par
1548                      ,esSquare       \par
1549                      ,esDiamond      \par
1550                      ,esBar          \par
1551                      ,esHalfBar      \par
1552                      ,esSkewedBar    \par
1553                    \};\par
1554   Q_ENUMS(EndingStyle)\par
1555   \par
1556   QCPLineEnding();\par
1557   QCPLineEnding(EndingStyle style, {\cf18 double} width=8, {\cf18 double} length=10, {\cf18 bool} inverted=false);\par
1558   \par
1559   {\cf20 // getters:}\par
1560   EndingStyle style(){\cf17  const }\{ {\cf19 return} mStyle; \}\par
1561   {\cf18 double} width(){\cf17  const }\{ {\cf19 return} mWidth; \}\par
1562   {\cf18 double} length(){\cf17  const }\{ {\cf19 return} mLength; \}\par
1563   {\cf18 bool} inverted(){\cf17  const }\{ {\cf19 return} mInverted; \}\par
1564   \par
1565   {\cf20 // setters:}\par
1566   {\cf18 void} setStyle(EndingStyle style);\par
1567   {\cf18 void} setWidth({\cf18 double} width);\par
1568   {\cf18 void} setLength({\cf18 double} length);\par
1569   {\cf18 void} setInverted({\cf18 bool} inverted);\par
1570   \par
1571   {\cf20 // non-property methods:}\par
1572   {\cf18 double} boundingDistance() {\cf17 const};\par
1573   {\cf18 double} realLength() {\cf17 const};\par
1574   {\cf18 void} draw(QCPPainter *painter, {\cf17 const} QCPVector2D &pos, {\cf17 const} QCPVector2D &dir) {\cf17 const};\par
1575   {\cf18 void} draw(QCPPainter *painter, {\cf17 const} QCPVector2D &pos, {\cf18 double} angle) {\cf17 const};\par
1576   \par
1577 {\cf17 protected}:\par
1578   {\cf20 // property members:}\par
1579   EndingStyle mStyle;\par
1580   {\cf18 double} mWidth, mLength;\par
1581   {\cf18 bool} mInverted;\par
1582 \};\par
1583 Q_DECLARE_TYPEINFO(QCPLineEnding, Q_MOVABLE_TYPE);\par
1584 Q_DECLARE_METATYPE(QCPLineEnding::EndingStyle)\par
1585 \par
1586 {\cf20 /* end of 'src/lineending.h' */}\par
1587 \par
1588 \par
1589 {\cf20 /* including file 'src/axis/labelpainter.h' */}\par
1590 {\cf20 /* modified 2022-11-06T12:45:56, size 7086  */}\par
1591 \par
1592 class QCPLabelPainterPrivate\par
1593 \{\par
1594   Q_GADGET\par
1595 {\cf17 public}:\par
1599   {\cf17 enum} AnchorMode \{ amRectangular    \par
1600                     ,amSkewedUpright \par
1601                     ,amSkewedRotated \par
1602                    \};\par
1603   Q_ENUMS(AnchorMode)\par
1604   \par
1605   \par
1608   enum AnchorReferenceType \{ artNormal    \par
1609                              ,artTangent \par
1610                            \};\par
1611   Q_ENUMS(AnchorReferenceType)\par
1612   \par
1613   \par
1616   enum AnchorSide \{ asLeft      \par
1617                     ,asRight    \par
1618                     ,asTop      \par
1619                     ,asBottom   \par
1620                     ,asTopLeft\par
1621                     ,asTopRight\par
1622                     ,asBottomRight\par
1623                     ,asBottomLeft\par
1624                    \};\par
1625   Q_ENUMS(AnchorSide)\par
1626   \par
1627   explicit QCPLabelPainterPrivate(QCustomPlot *parentPlot);\par
1628   virtual ~QCPLabelPainterPrivate();\par
1629   \par
1630   {\cf20 // setters:}\par
1631   {\cf18 void} setAnchorSide(AnchorSide side);\par
1632   {\cf18 void} setAnchorMode(AnchorMode mode);\par
1633   {\cf18 void} setAnchorReference(const QPointF &pixelPoint);\par
1634   {\cf18 void} setAnchorReferenceType(AnchorReferenceType type);\par
1635   {\cf18 void} setFont(const QFont &font);\par
1636   {\cf18 void} setColor(const QColor &color);\par
1637   {\cf18 void} setPadding({\cf18 int} padding);\par
1638   {\cf18 void} setRotation({\cf18 double} rotation);\par
1639   {\cf18 void} setSubstituteExponent({\cf18 bool} enabled);\par
1640   {\cf18 void} setMultiplicationSymbol(QChar symbol);\par
1641   {\cf18 void} setAbbreviateDecimalPowers({\cf18 bool} enabled);\par
1642   {\cf18 void} setCacheSize({\cf18 int} labelCount);\par
1643   \par
1644   {\cf20 // getters:}\par
1645   AnchorMode anchorMode(){\cf17  const }\{ {\cf19 return} mAnchorMode; \}\par
1646   AnchorSide anchorSide(){\cf17  const }\{ {\cf19 return} mAnchorSide; \}\par
1647   QPointF anchorReference(){\cf17  const }\{ {\cf19 return} mAnchorReference; \}\par
1648   AnchorReferenceType anchorReferenceType(){\cf17  const }\{ {\cf19 return} mAnchorReferenceType; \}\par
1649   QFont font(){\cf17  const }\{ {\cf19 return} mFont; \}\par
1650   QColor color(){\cf17  const }\{ {\cf19 return} mColor; \}\par
1651   {\cf18 int} padding(){\cf17  const }\{ {\cf19 return} mPadding; \}\par
1652   {\cf18 double} rotation(){\cf17  const }\{ {\cf19 return} mRotation; \}\par
1653   {\cf18 bool} substituteExponent(){\cf17  const }\{ {\cf19 return} mSubstituteExponent; \}\par
1654   QChar multiplicationSymbol(){\cf17  const }\{ {\cf19 return} mMultiplicationSymbol; \}\par
1655   {\cf18 bool} abbreviateDecimalPowers(){\cf17  const }\{ {\cf19 return} mAbbreviateDecimalPowers; \}\par
1656   {\cf18 int} cacheSize() {\cf17 const};\par
1657   \par
1658   {\cf20 //virtual int size() const;}\par
1659   \par
1660   {\cf20 // non-property methods: }\par
1661   {\cf18 void} drawTickLabel(QCPPainter *painter, {\cf17 const} QPointF &tickPos, {\cf17 const} QString &text);\par
1662   {\cf18 void} clearCache();\par
1663   \par
1664   {\cf20 // constants that may be used with setMultiplicationSymbol:}\par
1665   {\cf17 static} {\cf17 const} QChar SymbolDot;\par
1666   {\cf17 static} {\cf17 const} QChar SymbolCross;\par
1667   \par
1668 {\cf17 protected}:\par
1669   {\cf17 struct }CachedLabel\par
1670   \{\par
1671     QPoint offset;\par
1672     QPixmap pixmap;\par
1673   \};\par
1674   {\cf17 struct }LabelData\par
1675   \{\par
1676     AnchorSide side;\par
1677     {\cf18 double} rotation; {\cf20 // angle in degrees}\par
1678     QTransform transform; {\cf20 // the transform about the label anchor which is at (0, 0). Does not contain final absolute x/y positioning on the plot/axis}\par
1679     QString basePart, expPart, suffixPart;\par
1680     QRect baseBounds, expBounds, suffixBounds;\par
1681     QRect totalBounds; {\cf20 // is in a coordinate system where label top left is at (0, 0)}\par
1682     QRect rotatedTotalBounds; {\cf20 // is in a coordinate system where the label anchor is at (0, 0)}\par
1683     QFont baseFont, expFont;\par
1684     QColor color;\par
1685   \};\par
1686   \par
1687   {\cf20 // property members:}\par
1688   AnchorMode mAnchorMode;\par
1689   AnchorSide mAnchorSide;\par
1690   QPointF mAnchorReference;\par
1691   AnchorReferenceType mAnchorReferenceType;\par
1692   QFont mFont;\par
1693   QColor mColor;\par
1694   {\cf18 int} mPadding;\par
1695   {\cf18 double} mRotation; {\cf20 // this is the rotation applied uniformly to all labels, not the heterogeneous rotation in amCircularRotated mode}\par
1696   {\cf18 bool} mSubstituteExponent;\par
1697   QChar mMultiplicationSymbol;\par
1698   {\cf18 bool} mAbbreviateDecimalPowers;\par
1699   {\cf20 // non-property members:}\par
1700   QCustomPlot *mParentPlot;\par
1701   QByteArray mLabelParameterHash; {\cf20 // to determine whether mLabelCache needs to be cleared due to changed parameters}\par
1702   QCache<QString, CachedLabel> mLabelCache;\par
1703   QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;\par
1704   {\cf18 int} mLetterCapHeight, mLetterDescent;\par
1705   \par
1706   {\cf20 // introduced virtual methods:}\par
1707   {\cf17 virtual} {\cf18 void} drawLabelMaybeCached(QCPPainter *painter, {\cf17 const} QFont &font, {\cf17 const} QColor &color, {\cf17 const} QPointF &pos, AnchorSide side, {\cf18 double} rotation, {\cf17 const} QString &text);\par
1708   {\cf17 virtual} QByteArray generateLabelParameterHash() {\cf17 const}; {\cf20 // TODO: get rid of this in favor of invalidation flag upon setters?}\par
1709 \par
1710   {\cf20 // non-virtual methods:}\par
1711   QPointF getAnchorPos({\cf17 const} QPointF &tickPos);\par
1712   {\cf18 void} drawText(QCPPainter *painter, {\cf17 const} QPointF &pos, {\cf17 const} LabelData &labelData) {\cf17 const};\par
1713   LabelData getTickLabelData({\cf17 const} QFont &font, {\cf17 const} QColor &color, {\cf18 double} rotation, AnchorSide side, {\cf17 const} QString &text) {\cf17 const};\par
1714   {\cf18 void} applyAnchorTransform(LabelData &labelData) {\cf17 const};\par
1715   {\cf20 //void getMaxTickLabelSize(const QFont &font, const QString &text, QSize *tickLabelsSize) const;}\par
1716   CachedLabel *createCachedLabel({\cf17 const} LabelData &labelData) {\cf17 const};\par
1717   QByteArray cacheKey({\cf17 const} QString &text, {\cf17 const} QColor &color, {\cf18 double} rotation, AnchorSide side) {\cf17 const};\par
1718   AnchorSide skewedAnchorSide({\cf17 const} QPointF &tickPos, {\cf18 double} sideExpandHorz, {\cf18 double} sideExpandVert) {\cf17 const};\par
1719   AnchorSide rotationCorrectedSide(AnchorSide side, {\cf18 double} rotation) {\cf17 const};\par
1720   {\cf18 void} analyzeFontMetrics();\par
1721 \};\par
1722 Q_DECLARE_METATYPE(QCPLabelPainterPrivate::AnchorMode)\par
1723 Q_DECLARE_METATYPE(QCPLabelPainterPrivate::AnchorSide)\par
1724 \par
1725 \par
1726 {\cf20 /* end of 'src/axis/labelpainter.h' */}\par
1727 \par
1728 \par
1729 {\cf20 /* including file 'src/axis/axisticker.h'  */}\par
1730 {\cf20 /* modified 2022-11-06T12:45:56, size 4230 */}\par
1731 \par
1732 class QCP_LIB_DECL QCPAxisTicker\par
1733 \{\par
1734   Q_GADGET\par
1735 {\cf17 public}:\par
1741   {\cf17 enum} TickStepStrategy\par
1742   \{\par
1743     tssReadability    \par
1744     ,tssMeetTickCount \par
1745   \};\par
1746   Q_ENUMS(TickStepStrategy)\par
1747   \par
1748   QCPAxisTicker();\par
1749   virtual ~QCPAxisTicker();\par
1750   \par
1751   {\cf20 // getters:}\par
1752   TickStepStrategy tickStepStrategy(){\cf17  const }\{ {\cf19 return} mTickStepStrategy; \}\par
1753   {\cf18 int} tickCount(){\cf17  const }\{ {\cf19 return} mTickCount; \}\par
1754   {\cf18 double} tickOrigin(){\cf17  const }\{ {\cf19 return} mTickOrigin; \}\par
1755   \par
1756   {\cf20 // setters:}\par
1757   {\cf18 void} setTickStepStrategy(TickStepStrategy strategy);\par
1758   {\cf18 void} setTickCount({\cf18 int} count);\par
1759   {\cf18 void} setTickOrigin({\cf18 double} origin);\par
1760   \par
1761   {\cf20 // introduced virtual methods:}\par
1762   {\cf17 virtual} {\cf18 void} generate({\cf17 const} QCPRange &range, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision, QVector<double> &ticks, QVector<double> *subTicks, QVector<QString> *tickLabels);\par
1763   \par
1764 {\cf17 protected}:\par
1765   {\cf20 // property members:}\par
1766   TickStepStrategy mTickStepStrategy;\par
1767   {\cf18 int} mTickCount;\par
1768   {\cf18 double} mTickOrigin;\par
1769   \par
1770   {\cf20 // introduced virtual methods:}\par
1771   {\cf17 virtual} {\cf18 double} getTickStep({\cf17 const} QCPRange &range);\par
1772   {\cf17 virtual} {\cf18 int} getSubTickCount({\cf18 double} tickStep);\par
1773   {\cf17 virtual} QString getTickLabel({\cf18 double} tick, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision);\par
1774   {\cf17 virtual} QVector<double> createTickVector({\cf18 double} tickStep, {\cf17 const} QCPRange &range);\par
1775   {\cf17 virtual} QVector<double> createSubTickVector({\cf18 int} subTickCount, {\cf17 const} QVector<double> &ticks);\par
1776   {\cf17 virtual} QVector<QString> createLabelVector({\cf17 const} QVector<double> &ticks, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision);\par
1777   \par
1778   {\cf20 // non-virtual methods:}\par
1779   {\cf18 void} trimTicks({\cf17 const} QCPRange &range, QVector<double> &ticks, {\cf18 bool} keepOneOutlier) {\cf17 const};\par
1780   {\cf18 double} pickClosest({\cf18 double} target, {\cf17 const} QVector<double> &candidates) {\cf17 const};\par
1781   {\cf18 double} getMantissa({\cf18 double} input, {\cf18 double} *magnitude={\cf17 nullptr}) {\cf17 const};\par
1782   {\cf18 double} cleanMantissa({\cf18 double} input) {\cf17 const};\par
1783   \par
1784 {\cf17 private}:\par
1785   Q_DISABLE_COPY(QCPAxisTicker)\par
1786   \par
1787 \};\par
1788 Q_DECLARE_METATYPE(QCPAxisTicker::TickStepStrategy)\par
1789 Q_DECLARE_METATYPE(QSharedPointer<QCPAxisTicker>)\par
1790 \par
1791 {\cf20 /* end of 'src/axis/axisticker.h' */}\par
1792 \par
1793 \par
1794 {\cf20 /* including file 'src/axis/axistickerdatetime.h' */}\par
1795 {\cf20 /* modified 2022-11-06T12:45:56, size 3600        */}\par
1796 \par
1797 class QCP_LIB_DECL QCPAxisTickerDateTime : public QCPAxisTicker\par
1798 \{\par
1799 {\cf17 public}:\par
1800   QCPAxisTickerDateTime();\par
1801   \par
1802   {\cf20 // getters:}\par
1803   QString dateTimeFormat(){\cf17  const }\{ {\cf19 return} mDateTimeFormat; \}\par
1804   Qt::TimeSpec dateTimeSpec(){\cf17  const }\{ {\cf19 return} mDateTimeSpec; \}\par
1805 {\cf21 # if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)}\par
1806   QTimeZone timeZone(){\cf17  const }\{ {\cf19 return} mTimeZone; \}\par
1807 {\cf21 #endif}\par
1808   \par
1809   {\cf20 // setters:}\par
1810   {\cf18 void} setDateTimeFormat({\cf17 const} QString &format);\par
1811   {\cf18 void} setDateTimeSpec(Qt::TimeSpec spec);\par
1812 {\cf21 # if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)}\par
1813   {\cf18 void} setTimeZone({\cf17 const} QTimeZone &zone);\par
1814 {\cf21 # endif}\par
1815   {\cf18 void} setTickOrigin({\cf18 double} origin); {\cf20 // hides base class method but calls baseclass implementation ("using" throws off IDEs and doxygen)}\par
1816   {\cf18 void} setTickOrigin({\cf17 const} QDateTime &origin);\par
1817   \par
1818   {\cf20 // static methods:}\par
1819   {\cf17 static} QDateTime keyToDateTime({\cf18 double} key);\par
1820   {\cf17 static} {\cf18 double} dateTimeToKey({\cf17 const} QDateTime &dateTime);\par
1821   {\cf17 static} {\cf18 double} dateTimeToKey({\cf17 const} QDate &date, Qt::TimeSpec timeSpec=Qt::LocalTime);\par
1822   \par
1823 {\cf17 protected}:\par
1824   {\cf20 // property members:}\par
1825   QString mDateTimeFormat;\par
1826   Qt::TimeSpec mDateTimeSpec;\par
1827 {\cf21 # if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)}\par
1828   QTimeZone mTimeZone;\par
1829 {\cf21 # endif}\par
1830   {\cf20 // non-property members:}\par
1831   {\cf17 enum} DateStrategy \{dsNone, dsUniformTimeInDay, dsUniformDayInMonth\} mDateStrategy;\par
1832   \par
1833   {\cf20 // reimplemented virtual methods:}\par
1834   {\cf17 virtual} {\cf18 double} getTickStep({\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
1835   {\cf17 virtual} {\cf18 int} getSubTickCount({\cf18 double} tickStep) Q_DECL_OVERRIDE;\par
1836   {\cf17 virtual} QString getTickLabel({\cf18 double} tick, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision) Q_DECL_OVERRIDE;\par
1837   {\cf17 virtual} QVector<double> createTickVector({\cf18 double} tickStep, {\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
1838 \};\par
1839 \par
1840 {\cf20 /* end of 'src/axis/axistickerdatetime.h' */}\par
1841 \par
1842 \par
1843 {\cf20 /* including file 'src/axis/axistickertime.h' */}\par
1844 {\cf20 /* modified 2022-11-06T12:45:56, size 3542    */}\par
1845 \par
1846 {\cf17 class }QCP_LIB_DECL QCPAxisTickerTime : {\cf17 public} QCPAxisTicker\par
1847 \{\par
1848   Q_GADGET\par
1849 {\cf17 public}:\par
1855   {\cf17 enum} TimeUnit \{ tuMilliseconds \par
1856                   ,tuSeconds     \par
1857                   ,tuMinutes     \par
1858                   ,tuHours       \par
1859                   ,tuDays        \par
1860                 \};\par
1861   Q_ENUMS(TimeUnit)\par
1862   \par
1863   QCPAxisTickerTime();\par
1864 \par
1865   {\cf20 // getters:}\par
1866   QString timeFormat(){\cf17  const }\{ {\cf19 return} mTimeFormat; \}\par
1867   {\cf18 int} fieldWidth(TimeUnit unit){\cf17  const }\{ {\cf19 return} mFieldWidth.value(unit); \}\par
1868   \par
1869   {\cf20 // setters:}\par
1870   {\cf18 void} setTimeFormat({\cf17 const} QString &format);\par
1871   {\cf18 void} setFieldWidth(TimeUnit unit, {\cf18 int} width);\par
1872   \par
1873 {\cf17 protected}:\par
1874   {\cf20 // property members:}\par
1875   QString mTimeFormat;\par
1876   QHash<TimeUnit, int> mFieldWidth;\par
1877   \par
1878   {\cf20 // non-property members:}\par
1879   TimeUnit mSmallestUnit, mBiggestUnit;\par
1880   QHash<TimeUnit, QString> mFormatPattern;\par
1881   \par
1882   {\cf20 // reimplemented virtual methods:}\par
1883   {\cf17 virtual} {\cf18 double} getTickStep({\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
1884   {\cf17 virtual} {\cf18 int} getSubTickCount({\cf18 double} tickStep) Q_DECL_OVERRIDE;\par
1885   {\cf17 virtual} QString getTickLabel({\cf18 double} tick, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision) Q_DECL_OVERRIDE;\par
1886   \par
1887   {\cf20 // non-virtual methods:}\par
1888   {\cf18 void} replaceUnit(QString &text, TimeUnit unit, {\cf18 int} value) {\cf17 const};\par
1889 \};\par
1890 Q_DECLARE_METATYPE(QCPAxisTickerTime::TimeUnit)\par
1891 \par
1892 {\cf20 /* end of 'src/axis/axistickertime.h' */}\par
1893 \par
1894 \par
1895 {\cf20 /* including file 'src/axis/axistickerfixed.h' */}\par
1896 {\cf20 /* modified 2022-11-06T12:45:56, size 3308     */}\par
1897 \par
1898 class QCP_LIB_DECL QCPAxisTickerFixed : public QCPAxisTicker\par
1899 \{\par
1900   Q_GADGET\par
1901 {\cf17 public}:\par
1908   {\cf17 enum} ScaleStrategy \{ ssNone      \par
1909                        ,ssMultiples \par
1910                        ,ssPowers    \par
1911                      \};\par
1912   Q_ENUMS(ScaleStrategy)\par
1913   \par
1914   QCPAxisTickerFixed();\par
1915   \par
1916   {\cf20 // getters:}\par
1917   {\cf18 double} tickStep(){\cf17  const }\{ {\cf19 return} mTickStep; \}\par
1918   ScaleStrategy scaleStrategy(){\cf17  const }\{ {\cf19 return} mScaleStrategy; \}\par
1919   \par
1920   {\cf20 // setters:}\par
1921   {\cf18 void} setTickStep({\cf18 double} step);\par
1922   {\cf18 void} setScaleStrategy(ScaleStrategy strategy);\par
1923   \par
1924 {\cf17 protected}:\par
1925   {\cf20 // property members:}\par
1926   {\cf18 double} mTickStep;\par
1927   ScaleStrategy mScaleStrategy;\par
1928   \par
1929   {\cf20 // reimplemented virtual methods:}\par
1930   {\cf17 virtual} {\cf18 double} getTickStep({\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
1931 \};\par
1932 Q_DECLARE_METATYPE(QCPAxisTickerFixed::ScaleStrategy)\par
1933 \par
1934 {\cf20 /* end of 'src/axis/axistickerfixed.h' */}\par
1935 \par
1936 \par
1937 {\cf20 /* including file 'src/axis/axistickertext.h' */}\par
1938 {\cf20 /* modified 2022-11-06T12:45:56, size 3090    */}\par
1939 \par
1940 class QCP_LIB_DECL QCPAxisTickerText : public QCPAxisTicker\par
1941 \{\par
1942 {\cf17 public}:\par
1943   QCPAxisTickerText();\par
1944   \par
1945   {\cf20 // getters:}\par
1946   QMap<double, QString> &ticks() \{ {\cf19 return} mTicks; \}\par
1947   {\cf18 int} subTickCount(){\cf17  const }\{ {\cf19 return} mSubTickCount; \}\par
1948   \par
1949   {\cf20 // setters:}\par
1950   {\cf18 void} setTicks({\cf17 const} QMap<double, QString> &ticks);\par
1951   {\cf18 void} setTicks({\cf17 const} QVector<double> &positions, {\cf17 const} QVector<QString> &labels);\par
1952   {\cf18 void} setSubTickCount({\cf18 int} subTicks);\par
1953   \par
1954   {\cf20 // non-virtual methods:}\par
1955   {\cf18 void} clear();\par
1956   {\cf18 void} addTick({\cf18 double} position, {\cf17 const} QString &label);\par
1957   {\cf18 void} addTicks({\cf17 const} QMap<double, QString> &ticks);\par
1958   {\cf18 void} addTicks({\cf17 const} QVector<double> &positions, {\cf17 const} QVector<QString> &labels);\par
1959   \par
1960 {\cf17 protected}:\par
1961   {\cf20 // property members:}\par
1962   QMap<double, QString> mTicks;\par
1963   {\cf18 int} mSubTickCount;\par
1964   \par
1965   {\cf20 // reimplemented virtual methods:}\par
1966   {\cf17 virtual} {\cf18 double} getTickStep({\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
1967   {\cf17 virtual} {\cf18 int} getSubTickCount({\cf18 double} tickStep) Q_DECL_OVERRIDE;\par
1968   {\cf17 virtual} QString getTickLabel({\cf18 double} tick, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision) Q_DECL_OVERRIDE;\par
1969   {\cf17 virtual} QVector<double> createTickVector({\cf18 double} tickStep, {\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
1970 \};\par
1971 \par
1972 {\cf20 /* end of 'src/axis/axistickertext.h' */}\par
1973 \par
1974 \par
1975 {\cf20 /* including file 'src/axis/axistickerpi.h' */}\par
1976 {\cf20 /* modified 2022-11-06T12:45:56, size 3911  */}\par
1977 \par
1978 {\cf17 class }QCP_LIB_DECL QCPAxisTickerPi : {\cf17 public} QCPAxisTicker\par
1979 \{\par
1980   Q_GADGET\par
1981 {\cf17 public}:\par
1987   {\cf17 enum} FractionStyle \{ fsFloatingPoint     \par
1988                        ,fsAsciiFractions   \par
1989                        ,fsUnicodeFractions \par
1990                      \};\par
1991   Q_ENUMS(FractionStyle)\par
1992   \par
1993   QCPAxisTickerPi();\par
1994   \par
1995   {\cf20 // getters:}\par
1996   QString piSymbol(){\cf17  const }\{ {\cf19 return} mPiSymbol; \}\par
1997   {\cf18 double} piValue(){\cf17  const }\{ {\cf19 return} mPiValue; \}\par
1998   {\cf18 bool} periodicity(){\cf17  const }\{ {\cf19 return} mPeriodicity; \}\par
1999   FractionStyle fractionStyle(){\cf17  const }\{ {\cf19 return} mFractionStyle; \}\par
2000   \par
2001   {\cf20 // setters:}\par
2002   {\cf18 void} setPiSymbol(QString symbol);\par
2003   {\cf18 void} setPiValue({\cf18 double} pi);\par
2004   {\cf18 void} setPeriodicity({\cf18 int} multiplesOfPi);\par
2005   {\cf18 void} setFractionStyle(FractionStyle style);\par
2006   \par
2007 {\cf17 protected}:\par
2008   {\cf20 // property members:}\par
2009   QString mPiSymbol;\par
2010   {\cf18 double} mPiValue;\par
2011   {\cf18 int} mPeriodicity;\par
2012   FractionStyle mFractionStyle;\par
2013   \par
2014   {\cf20 // non-property members:}\par
2015   {\cf18 double} mPiTickStep; {\cf20 // size of one tick step in units of mPiValue}\par
2016   \par
2017   {\cf20 // reimplemented virtual methods:}\par
2018   {\cf17 virtual} {\cf18 double} getTickStep({\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
2019   {\cf17 virtual} {\cf18 int} getSubTickCount({\cf18 double} tickStep) Q_DECL_OVERRIDE;\par
2020   {\cf17 virtual} QString getTickLabel({\cf18 double} tick, {\cf17 const} QLocale &locale, QChar formatChar, {\cf18 int} precision) Q_DECL_OVERRIDE;\par
2021   \par
2022   {\cf20 // non-virtual methods:}\par
2023   {\cf18 void} simplifyFraction({\cf18 int} &numerator, {\cf18 int} &denominator) {\cf17 const};\par
2024   QString fractionToString({\cf18 int} numerator, {\cf18 int} denominator) {\cf17 const};\par
2025   QString unicodeFraction({\cf18 int} numerator, {\cf18 int} denominator) {\cf17 const};\par
2026   QString unicodeSuperscript({\cf18 int} number) {\cf17 const};\par
2027   QString unicodeSubscript({\cf18 int} number) {\cf17 const};\par
2028 \};\par
2029 Q_DECLARE_METATYPE(QCPAxisTickerPi::FractionStyle)\par
2030 \par
2031 {\cf20 /* end of 'src/axis/axistickerpi.h' */}\par
2032 \par
2033 \par
2034 {\cf20 /* including file 'src/axis/axistickerlog.h' */}\par
2035 {\cf20 /* modified 2022-11-06T12:45:56, size 2594   */}\par
2036 \par
2037 class QCP_LIB_DECL QCPAxisTickerLog : public QCPAxisTicker\par
2038 \{\par
2039 {\cf17 public}:\par
2040   QCPAxisTickerLog();\par
2041   \par
2042   {\cf20 // getters:}\par
2043   {\cf18 double} logBase(){\cf17  const }\{ {\cf19 return} mLogBase; \}\par
2044   {\cf18 int} subTickCount(){\cf17  const }\{ {\cf19 return} mSubTickCount; \}\par
2045   \par
2046   {\cf20 // setters:}\par
2047   {\cf18 void} setLogBase({\cf18 double} base);\par
2048   {\cf18 void} setSubTickCount({\cf18 int} subTicks);\par
2049   \par
2050 {\cf17 protected}:\par
2051   {\cf20 // property members:}\par
2052   {\cf18 double} mLogBase;\par
2053   {\cf18 int} mSubTickCount;\par
2054   \par
2055   {\cf20 // non-property members:}\par
2056   {\cf18 double} mLogBaseLnInv;\par
2057   \par
2058   {\cf20 // reimplemented virtual methods:}\par
2059   {\cf17 virtual} {\cf18 int} getSubTickCount({\cf18 double} tickStep) Q_DECL_OVERRIDE;\par
2060   {\cf17 virtual} QVector<double> createTickVector({\cf18 double} tickStep, {\cf17 const} QCPRange &range) Q_DECL_OVERRIDE;\par
2061 \};\par
2062 \par
2063 {\cf20 /* end of 'src/axis/axistickerlog.h' */}\par
2064 \par
2065 \par
2066 {\cf20 /* including file 'src/axis/axis.h'         */}\par
2067 {\cf20 /* modified 2022-11-06T12:45:56, size 20913 */}\par
2068 \par
2069 {\cf17 class }QCP_LIB_DECL QCPGrid :{\cf17 public} QCPLayerable\par
2070 \{\par
2071   Q_OBJECT\par
2073   Q_PROPERTY({\cf18 bool} subGridVisible READ subGridVisible WRITE setSubGridVisible)\par
2074   Q_PROPERTY({\cf18 bool} antialiasedSubGrid READ antialiasedSubGrid WRITE setAntialiasedSubGrid)\par
2075   Q_PROPERTY({\cf18 bool} antialiasedZeroLine READ antialiasedZeroLine WRITE setAntialiasedZeroLine)\par
2076   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
2077   Q_PROPERTY(QPen subGridPen READ subGridPen WRITE setSubGridPen)\par
2078   Q_PROPERTY(QPen zeroLinePen READ zeroLinePen WRITE setZeroLinePen)\par
2080 {\cf17 public}:\par
2081   {\cf17 explicit} QCPGrid(QCPAxis *parentAxis);\par
2082   \par
2083   {\cf20 // getters:}\par
2084   {\cf18 bool} subGridVisible(){\cf17  const }\{ {\cf19 return} mSubGridVisible; \}\par
2085   {\cf18 bool} antialiasedSubGrid(){\cf17  const }\{ {\cf19 return} mAntialiasedSubGrid; \}\par
2086   {\cf18 bool} antialiasedZeroLine(){\cf17  const }\{ {\cf19 return} mAntialiasedZeroLine; \}\par
2087   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
2088   QPen subGridPen(){\cf17  const }\{ {\cf19 return} mSubGridPen; \}\par
2089   QPen zeroLinePen(){\cf17  const }\{ {\cf19 return} mZeroLinePen; \}\par
2090   \par
2091   {\cf20 // setters:}\par
2092   {\cf18 void} setSubGridVisible({\cf18 bool} visible);\par
2093   {\cf18 void} setAntialiasedSubGrid({\cf18 bool} enabled);\par
2094   {\cf18 void} setAntialiasedZeroLine({\cf18 bool} enabled);\par
2095   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
2096   {\cf18 void} setSubGridPen({\cf17 const} QPen &pen);\par
2097   {\cf18 void} setZeroLinePen({\cf17 const} QPen &pen);\par
2098   \par
2099 {\cf17 protected}:\par
2100   {\cf20 // property members:}\par
2101   {\cf18 bool} mSubGridVisible;\par
2102   {\cf18 bool} mAntialiasedSubGrid, mAntialiasedZeroLine;\par
2103   QPen mPen, mSubGridPen, mZeroLinePen;\par
2104   \par
2105   {\cf20 // non-property members:}\par
2106   QCPAxis *mParentAxis;\par
2107   \par
2108   {\cf20 // reimplemented virtual methods:}\par
2109   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
2110   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
2111   \par
2112   {\cf20 // non-virtual methods:}\par
2113   {\cf18 void} drawGridLines(QCPPainter *painter) {\cf17 const};\par
2114   {\cf18 void} drawSubGridLines(QCPPainter *painter) {\cf17 const};\par
2115   \par
2116   {\cf17 friend} {\cf17 class }QCPAxis;\par
2117 \};\par
2118 \par
2119 \par
2120 {\cf17 class }QCP_LIB_DECL QCPAxis : {\cf17 public} QCPLayerable\par
2121 \{\par
2122   Q_OBJECT\par
2124   Q_PROPERTY(AxisType axisType READ axisType)\par
2125   Q_PROPERTY(QCPAxisRect* axisRect READ axisRect)\par
2126   Q_PROPERTY(ScaleType scaleType READ scaleType WRITE setScaleType NOTIFY scaleTypeChanged)\par
2127   Q_PROPERTY(QCPRange range READ range WRITE setRange NOTIFY rangeChanged)\par
2128   Q_PROPERTY({\cf18 bool} rangeReversed READ rangeReversed WRITE setRangeReversed)\par
2129   Q_PROPERTY(QSharedPointer<QCPAxisTicker> ticker READ ticker WRITE setTicker)\par
2130   Q_PROPERTY({\cf18 bool} ticks READ ticks WRITE setTicks)\par
2131   Q_PROPERTY({\cf18 bool} tickLabels READ tickLabels WRITE setTickLabels)\par
2132   Q_PROPERTY({\cf18 int} tickLabelPadding READ tickLabelPadding WRITE setTickLabelPadding)\par
2133   Q_PROPERTY(QFont tickLabelFont READ tickLabelFont WRITE setTickLabelFont)\par
2134   Q_PROPERTY(QColor tickLabelColor READ tickLabelColor WRITE setTickLabelColor)\par
2135   Q_PROPERTY({\cf18 double} tickLabelRotation READ tickLabelRotation WRITE setTickLabelRotation)\par
2136   Q_PROPERTY(LabelSide tickLabelSide READ tickLabelSide WRITE setTickLabelSide)\par
2137   Q_PROPERTY(QString numberFormat READ numberFormat WRITE setNumberFormat)\par
2138   Q_PROPERTY({\cf18 int} numberPrecision READ numberPrecision WRITE setNumberPrecision)\par
2139   Q_PROPERTY(QVector<double> tickVector READ tickVector)\par
2140   Q_PROPERTY(QVector<QString> tickVectorLabels READ tickVectorLabels)\par
2141   Q_PROPERTY({\cf18 int} tickLengthIn READ tickLengthIn WRITE setTickLengthIn)\par
2142   Q_PROPERTY({\cf18 int} tickLengthOut READ tickLengthOut WRITE setTickLengthOut)\par
2143   Q_PROPERTY({\cf18 bool} subTicks READ subTicks WRITE setSubTicks)\par
2144   Q_PROPERTY({\cf18 int} subTickLengthIn READ subTickLengthIn WRITE setSubTickLengthIn)\par
2145   Q_PROPERTY({\cf18 int} subTickLengthOut READ subTickLengthOut WRITE setSubTickLengthOut)\par
2146   Q_PROPERTY(QPen basePen READ basePen WRITE setBasePen)\par
2147   Q_PROPERTY(QPen tickPen READ tickPen WRITE setTickPen)\par
2148   Q_PROPERTY(QPen subTickPen READ subTickPen WRITE setSubTickPen)\par
2149   Q_PROPERTY(QFont labelFont READ labelFont WRITE setLabelFont)\par
2150   Q_PROPERTY(QColor labelColor READ labelColor WRITE setLabelColor)\par
2151   Q_PROPERTY(QString label READ label WRITE setLabel)\par
2152   Q_PROPERTY({\cf18 int} labelPadding READ labelPadding WRITE setLabelPadding)\par
2153   Q_PROPERTY({\cf18 int} padding READ padding WRITE setPadding)\par
2154   Q_PROPERTY({\cf18 int} offset READ offset WRITE setOffset)\par
2155   Q_PROPERTY(SelectableParts selectedParts READ selectedParts WRITE setSelectedParts NOTIFY selectionChanged)\par
2156   Q_PROPERTY(SelectableParts selectableParts READ selectableParts WRITE setSelectableParts NOTIFY selectableChanged)\par
2157   Q_PROPERTY(QFont selectedTickLabelFont READ selectedTickLabelFont WRITE setSelectedTickLabelFont)\par
2158   Q_PROPERTY(QFont selectedLabelFont READ selectedLabelFont WRITE setSelectedLabelFont)\par
2159   Q_PROPERTY(QColor selectedTickLabelColor READ selectedTickLabelColor WRITE setSelectedTickLabelColor)\par
2160   Q_PROPERTY(QColor selectedLabelColor READ selectedLabelColor WRITE setSelectedLabelColor)\par
2161   Q_PROPERTY(QPen selectedBasePen READ selectedBasePen WRITE setSelectedBasePen)\par
2162   Q_PROPERTY(QPen selectedTickPen READ selectedTickPen WRITE setSelectedTickPen)\par
2163   Q_PROPERTY(QPen selectedSubTickPen READ selectedSubTickPen WRITE setSelectedSubTickPen)\par
2164   Q_PROPERTY(QCPLineEnding lowerEnding READ lowerEnding WRITE setLowerEnding)\par
2165   Q_PROPERTY(QCPLineEnding upperEnding READ upperEnding WRITE setUpperEnding)\par
2166   Q_PROPERTY(QCPGrid* grid READ grid)\par
2168 {\cf17 public}:\par
2173   {\cf17 enum} AxisType \{ atLeft    = 0x01  \par
2174                   ,atRight  = 0x02  \par
2175                   ,atTop    = 0x04  \par
2176                   ,atBottom = 0x08  \par
2177                 \};\par
2178   Q_ENUMS(AxisType)\par
2179   Q_FLAGS(AxisTypes)\par
2180   Q_DECLARE_FLAGS(AxisTypes, AxisType)\par
2186   enum LabelSide \{ lsInside    \par
2187                    ,lsOutside  \par
2188                  \};\par
2189   Q_ENUMS(LabelSide)\par
2194   enum ScaleType \{ stLinear       \par
2195                    ,stLogarithmic \par
2196                  \};\par
2197   Q_ENUMS(ScaleType)\par
2202   enum SelectablePart \{ spNone        = 0      \par
2203                         ,spAxis       = 0x001  \par
2204                         ,spTickLabels = 0x002  \par
2205                         ,spAxisLabel  = 0x004  \par
2206                       \};\par
2207   Q_ENUMS(SelectablePart)\par
2208   Q_FLAGS(SelectableParts)\par
2209   Q_DECLARE_FLAGS(SelectableParts, SelectablePart)\par
2210   \par
2211   explicit QCPAxis(QCPAxisRect *parent, AxisType type);\par
2212   virtual ~QCPAxis() Q_DECL_OVERRIDE;\par
2213   \par
2214   {\cf20 // getters:}\par
2215   AxisType axisType(){\cf17  const }\{ {\cf19 return} mAxisType; \}\par
2216   QCPAxisRect *axisRect(){\cf17  const }\{ {\cf19 return} mAxisRect; \}\par
2217   ScaleType scaleType(){\cf17  const }\{ {\cf19 return} mScaleType; \}\par
2218   {\cf17 const} QCPRange range(){\cf17  const }\{ {\cf19 return} mRange; \}\par
2219   {\cf18 bool} rangeReversed(){\cf17  const }\{ {\cf19 return} mRangeReversed; \}\par
2220   QSharedPointer<QCPAxisTicker> ticker(){\cf17  const }\{ {\cf19 return} mTicker; \}\par
2221   {\cf18 bool} ticks(){\cf17  const }\{ {\cf19 return} mTicks; \}\par
2222   {\cf18 bool} tickLabels(){\cf17  const }\{ {\cf19 return} mTickLabels; \}\par
2223   {\cf18 int} tickLabelPadding() {\cf17 const};\par
2224   QFont tickLabelFont(){\cf17  const }\{ {\cf19 return} mTickLabelFont; \}\par
2225   QColor tickLabelColor(){\cf17  const }\{ {\cf19 return} mTickLabelColor; \}\par
2226   {\cf18 double} tickLabelRotation() {\cf17 const};\par
2227   LabelSide tickLabelSide() {\cf17 const};\par
2228   QString numberFormat() {\cf17 const};\par
2229   {\cf18 int} numberPrecision(){\cf17  const }\{ {\cf19 return} mNumberPrecision; \}\par
2230   QVector<double> tickVector(){\cf17  const }\{ {\cf19 return} mTickVector; \}\par
2231   QVector<QString> tickVectorLabels(){\cf17  const }\{ {\cf19 return} mTickVectorLabels; \}\par
2232   {\cf18 int} tickLengthIn() {\cf17 const};\par
2233   {\cf18 int} tickLengthOut() {\cf17 const};\par
2234   {\cf18 bool} subTicks(){\cf17  const }\{ {\cf19 return} mSubTicks; \}\par
2235   {\cf18 int} subTickLengthIn() {\cf17 const};\par
2236   {\cf18 int} subTickLengthOut() {\cf17 const};\par
2237   QPen basePen(){\cf17  const }\{ {\cf19 return} mBasePen; \}\par
2238   QPen tickPen(){\cf17  const }\{ {\cf19 return} mTickPen; \}\par
2239   QPen subTickPen(){\cf17  const }\{ {\cf19 return} mSubTickPen; \}\par
2240   QFont labelFont(){\cf17  const }\{ {\cf19 return} mLabelFont; \}\par
2241   QColor labelColor(){\cf17  const }\{ {\cf19 return} mLabelColor; \}\par
2242   QString label(){\cf17  const }\{ {\cf19 return} mLabel; \}\par
2243   {\cf18 int} labelPadding() {\cf17 const};\par
2244   {\cf18 int} padding(){\cf17  const }\{ {\cf19 return} mPadding; \}\par
2245   {\cf18 int} offset() {\cf17 const};\par
2246   SelectableParts selectedParts(){\cf17  const }\{ {\cf19 return} mSelectedParts; \}\par
2247   SelectableParts selectableParts(){\cf17  const }\{ {\cf19 return} mSelectableParts; \}\par
2248   QFont selectedTickLabelFont(){\cf17  const }\{ {\cf19 return} mSelectedTickLabelFont; \}\par
2249   QFont selectedLabelFont(){\cf17  const }\{ {\cf19 return} mSelectedLabelFont; \}\par
2250   QColor selectedTickLabelColor(){\cf17  const }\{ {\cf19 return} mSelectedTickLabelColor; \}\par
2251   QColor selectedLabelColor(){\cf17  const }\{ {\cf19 return} mSelectedLabelColor; \}\par
2252   QPen selectedBasePen(){\cf17  const }\{ {\cf19 return} mSelectedBasePen; \}\par
2253   QPen selectedTickPen(){\cf17  const }\{ {\cf19 return} mSelectedTickPen; \}\par
2254   QPen selectedSubTickPen(){\cf17  const }\{ {\cf19 return} mSelectedSubTickPen; \}\par
2255   QCPLineEnding lowerEnding() {\cf17 const};\par
2256   QCPLineEnding upperEnding() {\cf17 const};\par
2257   QCPGrid *grid(){\cf17  const }\{ {\cf19 return} mGrid; \}\par
2258   \par
2259   {\cf20 // setters:}\par
2260   Q_SLOT {\cf18 void} setScaleType(QCPAxis::ScaleType type);\par
2261   Q_SLOT {\cf18 void} setRange({\cf17 const} QCPRange &range);\par
2262   {\cf18 void} setRange({\cf18 double} lower, {\cf18 double} upper);\par
2263   {\cf18 void} setRange({\cf18 double} position, {\cf18 double} size, Qt::AlignmentFlag alignment);\par
2264   {\cf18 void} setRangeLower({\cf18 double} lower);\par
2265   {\cf18 void} setRangeUpper({\cf18 double} upper);\par
2266   {\cf18 void} setRangeReversed({\cf18 bool} reversed);\par
2267   {\cf18 void} setTicker(QSharedPointer<QCPAxisTicker> ticker);\par
2268   {\cf18 void} setTicks({\cf18 bool} show);\par
2269   {\cf18 void} setTickLabels({\cf18 bool} show);\par
2270   {\cf18 void} setTickLabelPadding({\cf18 int} padding);\par
2271   {\cf18 void} setTickLabelFont({\cf17 const} QFont &font);\par
2272   {\cf18 void} setTickLabelColor({\cf17 const} QColor &color);\par
2273   {\cf18 void} setTickLabelRotation({\cf18 double} degrees);\par
2274   {\cf18 void} setTickLabelSide(LabelSide side);\par
2275   {\cf18 void} setNumberFormat({\cf17 const} QString &formatCode);\par
2276   {\cf18 void} setNumberPrecision({\cf18 int} precision);\par
2277   {\cf18 void} setTickLength({\cf18 int} inside, {\cf18 int} outside=0);\par
2278   {\cf18 void} setTickLengthIn({\cf18 int} inside);\par
2279   {\cf18 void} setTickLengthOut({\cf18 int} outside);\par
2280   {\cf18 void} setSubTicks({\cf18 bool} show);\par
2281   {\cf18 void} setSubTickLength({\cf18 int} inside, {\cf18 int} outside=0);\par
2282   {\cf18 void} setSubTickLengthIn({\cf18 int} inside);\par
2283   {\cf18 void} setSubTickLengthOut({\cf18 int} outside);\par
2284   {\cf18 void} setBasePen({\cf17 const} QPen &pen);\par
2285   {\cf18 void} setTickPen({\cf17 const} QPen &pen);\par
2286   {\cf18 void} setSubTickPen({\cf17 const} QPen &pen);\par
2287   {\cf18 void} setLabelFont({\cf17 const} QFont &font);\par
2288   {\cf18 void} setLabelColor({\cf17 const} QColor &color);\par
2289   {\cf18 void} setLabel({\cf17 const} QString &str);\par
2290   {\cf18 void} setLabelPadding({\cf18 int} padding);\par
2291   {\cf18 void} setPadding({\cf18 int} padding);\par
2292   {\cf18 void} setOffset({\cf18 int} offset);\par
2293   {\cf18 void} setSelectedTickLabelFont({\cf17 const} QFont &font);\par
2294   {\cf18 void} setSelectedLabelFont({\cf17 const} QFont &font);\par
2295   {\cf18 void} setSelectedTickLabelColor({\cf17 const} QColor &color);\par
2296   {\cf18 void} setSelectedLabelColor({\cf17 const} QColor &color);\par
2297   {\cf18 void} setSelectedBasePen({\cf17 const} QPen &pen);\par
2298   {\cf18 void} setSelectedTickPen({\cf17 const} QPen &pen);\par
2299   {\cf18 void} setSelectedSubTickPen({\cf17 const} QPen &pen);\par
2300   Q_SLOT {\cf18 void} setSelectableParts({\cf17 const} QCPAxis::SelectableParts &selectableParts);\par
2301   Q_SLOT {\cf18 void} setSelectedParts({\cf17 const} QCPAxis::SelectableParts &selectedParts);\par
2302   {\cf18 void} setLowerEnding({\cf17 const} QCPLineEnding &ending);\par
2303   {\cf18 void} setUpperEnding({\cf17 const} QCPLineEnding &ending);\par
2304   \par
2305   {\cf20 // reimplemented virtual methods:}\par
2306   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
2307   \par
2308   {\cf20 // non-property methods:}\par
2309   Qt::Orientation orientation(){\cf17  const }\{ {\cf19 return} mOrientation; \}\par
2310   {\cf18 int} pixelOrientation(){\cf17  const }\{ {\cf19 return} rangeReversed() != (orientation()==Qt::Vertical) ? -1 : 1; \}\par
2311   {\cf18 void} moveRange({\cf18 double} diff);\par
2312   {\cf18 void} scaleRange({\cf18 double} factor);\par
2313   {\cf18 void} scaleRange({\cf18 double} factor, {\cf18 double} center);\par
2314   {\cf18 void} setScaleRatio({\cf17 const} QCPAxis *otherAxis, {\cf18 double} ratio=1.0);\par
2315   {\cf18 void} rescale({\cf18 bool} onlyVisiblePlottables={\cf17 false});\par
2316   {\cf18 double} pixelToCoord({\cf18 double} value) {\cf17 const};\par
2317   {\cf18 double} coordToPixel({\cf18 double} value) {\cf17 const};\par
2318   SelectablePart getPartAt({\cf17 const} QPointF &pos) {\cf17 const};\par
2319   QList<QCPAbstractPlottable*> plottables() {\cf17 const};\par
2320   QList<QCPGraph*> graphs() {\cf17 const};\par
2321   QList<QCPAbstractItem*> items() {\cf17 const};\par
2322   \par
2323   {\cf17 static} AxisType marginSideToAxisType(QCP::MarginSide side);\par
2324   {\cf17 static} Qt::Orientation orientation(AxisType type) \{ {\cf19 return} type==atBottom || type==atTop ? Qt::Horizontal : Qt::Vertical; \}\par
2325   {\cf17 static} AxisType opposite(AxisType type);\par
2326   \par
2327 signals:\par
2328   {\cf18 void} rangeChanged({\cf17 const} QCPRange &newRange);\par
2329   {\cf18 void} rangeChanged({\cf17 const} QCPRange &newRange, {\cf17 const} QCPRange &oldRange);\par
2330   {\cf18 void} scaleTypeChanged(QCPAxis::ScaleType scaleType);\par
2331   {\cf18 void} selectionChanged({\cf17 const} QCPAxis::SelectableParts &parts);\par
2332   {\cf18 void} selectableChanged({\cf17 const} QCPAxis::SelectableParts &parts);\par
2333 \par
2334 {\cf17 protected}:\par
2335   {\cf20 // property members:}\par
2336   {\cf20 // axis base:}\par
2337   AxisType mAxisType;\par
2338   QCPAxisRect *mAxisRect;\par
2339   {\cf20 //int mOffset; // in QCPAxisPainter}\par
2340   {\cf18 int} mPadding;\par
2341   Qt::Orientation mOrientation;\par
2342   SelectableParts mSelectableParts, mSelectedParts;\par
2343   QPen mBasePen, mSelectedBasePen;\par
2344   {\cf20 //QCPLineEnding mLowerEnding, mUpperEnding; // in QCPAxisPainter}\par
2345   {\cf20 // axis label:}\par
2346   {\cf20 //int mLabelPadding; // in QCPAxisPainter}\par
2347   QString mLabel;\par
2348   QFont mLabelFont, mSelectedLabelFont;\par
2349   QColor mLabelColor, mSelectedLabelColor;\par
2350   {\cf20 // tick labels:}\par
2351   {\cf20 //int mTickLabelPadding; // in QCPAxisPainter}\par
2352   {\cf18 bool} mTickLabels;\par
2353   {\cf20 //double mTickLabelRotation; // in QCPAxisPainter}\par
2354   QFont mTickLabelFont, mSelectedTickLabelFont;\par
2355   QColor mTickLabelColor, mSelectedTickLabelColor;\par
2356   {\cf18 int} mNumberPrecision;\par
2357   QLatin1Char mNumberFormatChar;\par
2358   {\cf18 bool} mNumberBeautifulPowers;\par
2359   {\cf20 //bool mNumberMultiplyCross; // QCPAxisPainter}\par
2360   {\cf20 // ticks and subticks:}\par
2361   {\cf18 bool} mTicks;\par
2362   {\cf18 bool} mSubTicks;\par
2363   {\cf20 //int mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut; // QCPAxisPainter}\par
2364   QPen mTickPen, mSelectedTickPen;\par
2365   QPen mSubTickPen, mSelectedSubTickPen;\par
2366   {\cf20 // scale and range:}\par
2367   QCPRange mRange;\par
2368   {\cf18 bool} mRangeReversed;\par
2369   ScaleType mScaleType;\par
2370   \par
2371   {\cf20 // non-property members:}\par
2372   QCPGrid *mGrid;\par
2373   QCPAxisPainterPrivate *mAxisPainter;\par
2374   QSharedPointer<QCPAxisTicker> mTicker;\par
2375   QVector<double> mTickVector;\par
2376   QVector<QString> mTickVectorLabels;\par
2377   QVector<double> mSubTickVector;\par
2378   {\cf18 bool} mCachedMarginValid;\par
2379   {\cf18 int} mCachedMargin;\par
2380   {\cf18 bool} mDragging;\par
2381   QCPRange mDragStartRange;\par
2382   QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;\par
2383   \par
2384   {\cf20 // introduced virtual methods:}\par
2385   {\cf17 virtual} {\cf18 int} calculateMargin();\par
2386   \par
2387   {\cf20 // reimplemented virtual methods:}\par
2388   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
2389   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
2390   {\cf17 virtual} QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
2391   {\cf20 // events:}\par
2392   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
2393   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
2394   {\cf20 // mouse events:}\par
2395   virtual {\cf18 void} mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;\par
2396   virtual {\cf18 void} mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
2397   virtual {\cf18 void} mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
2398   virtual {\cf18 void} wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\par
2399   \par
2400   {\cf20 // non-virtual methods:}\par
2401   {\cf18 void} setupTickVectors();\par
2402   QPen getBasePen() const;\par
2403   QPen getTickPen() const;\par
2404   QPen getSubTickPen() const;\par
2405   QFont getTickLabelFont() const;\par
2406   QFont getLabelFont() const;\par
2407   QColor getTickLabelColor() const;\par
2408   QColor getLabelColor() const;\par
2409   \par
2410 private:\par
2411   Q_DISABLE_COPY(QCPAxis)\par
2412   \par
2413   friend class QCustomPlot;\par
2414   friend class QCPGrid;\par
2415   friend class QCPAxisRect;\par
2416 \};\par
2417 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPAxis::SelectableParts)\par
2418 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPAxis::AxisTypes)\par
2419 Q_DECLARE_METATYPE(QCPAxis::AxisType)\par
2420 Q_DECLARE_METATYPE(QCPAxis::LabelSide)\par
2421 Q_DECLARE_METATYPE(QCPAxis::ScaleType)\par
2422 Q_DECLARE_METATYPE(QCPAxis::SelectablePart)\par
2423 \par
2424 \par
2425 class QCPAxisPainterPrivate\par
2426 \{\par
2427 {\cf17 public}:\par
2428   {\cf17 explicit} QCPAxisPainterPrivate(QCustomPlot *parentPlot);\par
2429   {\cf17 virtual} ~QCPAxisPainterPrivate();\par
2430   \par
2431   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter);\par
2432   {\cf17 virtual} {\cf18 int} size();\par
2433   {\cf18 void} clearCache();\par
2434   \par
2435   QRect axisSelectionBox(){\cf17  const }\{ {\cf19 return} mAxisSelectionBox; \}\par
2436   QRect tickLabelsSelectionBox(){\cf17  const }\{ {\cf19 return} mTickLabelsSelectionBox; \}\par
2437   QRect labelSelectionBox(){\cf17  const }\{ {\cf19 return} mLabelSelectionBox; \}\par
2438   \par
2439   {\cf20 // public property members:}\par
2440   QCPAxis::AxisType type;\par
2441   QPen basePen;\par
2442   QCPLineEnding lowerEnding, upperEnding; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2443   {\cf18 int} labelPadding; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2444   QFont labelFont;\par
2445   QColor labelColor;\par
2446   QString label;\par
2447   {\cf18 int} tickLabelPadding; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2448   {\cf18 double} tickLabelRotation; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2449   QCPAxis::LabelSide tickLabelSide; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2450   {\cf18 bool} substituteExponent;\par
2451   {\cf18 bool} numberMultiplyCross; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2452   {\cf18 int} tickLengthIn, tickLengthOut, subTickLengthIn, subTickLengthOut; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2453   QPen tickPen, subTickPen;\par
2454   QFont tickLabelFont;\par
2455   QColor tickLabelColor;\par
2456   QRect axisRect, viewportRect;\par
2457   {\cf18 int} offset; {\cf20 // directly accessed by QCPAxis setters/getters}\par
2458   {\cf18 bool} abbreviateDecimalPowers;\par
2459   {\cf18 bool} reversedEndings;\par
2460   \par
2461   QVector<double> subTickPositions;\par
2462   QVector<double> tickPositions;\par
2463   QVector<QString> tickLabels;\par
2464   \par
2465 {\cf17 protected}:\par
2466   {\cf17 struct }CachedLabel\par
2467   \{\par
2468     QPointF offset;\par
2469     QPixmap pixmap;\par
2470   \};\par
2471   {\cf17 struct }TickLabelData\par
2472   \{\par
2473     QString basePart, expPart, suffixPart;\par
2474     QRect baseBounds, expBounds, suffixBounds, totalBounds, rotatedTotalBounds;\par
2475     QFont baseFont, expFont;\par
2476   \};\par
2477   QCustomPlot *mParentPlot;\par
2478   QByteArray mLabelParameterHash; {\cf20 // to determine whether mLabelCache needs to be cleared due to changed parameters}\par
2479   QCache<QString, CachedLabel> mLabelCache;\par
2480   QRect mAxisSelectionBox, mTickLabelsSelectionBox, mLabelSelectionBox;\par
2481   \par
2482   {\cf17 virtual} QByteArray generateLabelParameterHash() {\cf17 const};\par
2483   \par
2484   {\cf17 virtual} {\cf18 void} placeTickLabel(QCPPainter *painter, {\cf18 double} position, {\cf18 int} distanceToAxis, {\cf17 const} QString &text, QSize *tickLabelsSize);\par
2485   {\cf17 virtual} {\cf18 void} drawTickLabel(QCPPainter *painter, {\cf18 double} x, {\cf18 double} y, {\cf17 const} TickLabelData &labelData) {\cf17 const};\par
2486   {\cf17 virtual} TickLabelData getTickLabelData({\cf17 const} QFont &font, {\cf17 const} QString &text) {\cf17 const};\par
2487   {\cf17 virtual} QPointF getTickLabelDrawOffset({\cf17 const} TickLabelData &labelData) {\cf17 const};\par
2488   {\cf17 virtual} {\cf18 void} getMaxTickLabelSize({\cf17 const} QFont &font, {\cf17 const} QString &text, QSize *tickLabelsSize) {\cf17 const};\par
2489 \};\par
2490 \par
2491 {\cf20 /* end of 'src/axis/axis.h' */}\par
2492 \par
2493 \par
2494 {\cf20 /* including file 'src/scatterstyle.h'     */}\par
2495 {\cf20 /* modified 2022-11-06T12:45:56, size 7275 */}\par
2496 \par
2497 {\cf17 class }QCP_LIB_DECL QCPScatterStyle\par
2498 \{\par
2499   Q_GADGET\par
2500 {\cf17 public}:\par
2509   {\cf17 enum} ScatterProperty \{ spNone  = 0x00  \par
2510                          ,spPen   = 0x01  \par
2511                          ,spBrush = 0x02  \par
2512                          ,spSize  = 0x04  \par
2513                          ,spShape = 0x08  \par
2514                          ,spAll   = 0xFF  \par
2515                        \};\par
2516   Q_ENUMS(ScatterProperty)\par
2517   Q_FLAGS(ScatterProperties)\par
2518   Q_DECLARE_FLAGS(ScatterProperties, ScatterProperty)\par
2519 \par
2520   \par
2527   enum ScatterShape \{ ssNone       \par
2528                       ,ssDot       \par
2529                       ,ssCross     \par
2530                       ,ssPlus      \par
2531                       ,ssCircle    \par
2532                       ,ssDisc      \par
2533                       ,ssSquare    \par
2534                       ,ssDiamond   \par
2535                       ,ssStar      \par
2536                       ,ssTriangle  \par
2537                       ,ssTriangleInverted \par
2538                       ,ssCrossSquare      \par
2539                       ,ssPlusSquare       \par
2540                       ,ssCrossCircle      \par
2541                       ,ssPlusCircle       \par
2542                       ,ssPeace     \par
2543                       ,ssPixmap    \par
2544                       ,ssCustom    \par
2545                     \};\par
2546   Q_ENUMS(ScatterShape)\par
2547 \par
2548   QCPScatterStyle();\par
2549   QCPScatterStyle(ScatterShape shape, {\cf18 double} size=6);\par
2550   QCPScatterStyle(ScatterShape shape, const QColor &color, {\cf18 double} size);\par
2551   QCPScatterStyle(ScatterShape shape, const QColor &color, const QColor &fill, {\cf18 double} size);\par
2552   QCPScatterStyle(ScatterShape shape, const QPen &pen, const QBrush &brush, {\cf18 double} size);\par
2553   QCPScatterStyle(const QPixmap &pixmap);\par
2554   QCPScatterStyle(const QPainterPath &customPath, const QPen &pen, const QBrush &brush=Qt::NoBrush, {\cf18 double} size=6);\par
2555   \par
2556   {\cf20 // getters:}\par
2557   {\cf18 double} size(){\cf17  const }\{ {\cf19 return} mSize; \}\par
2558   ScatterShape shape(){\cf17  const }\{ {\cf19 return} mShape; \}\par
2559   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
2560   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
2561   QPixmap pixmap(){\cf17  const }\{ {\cf19 return} mPixmap; \}\par
2562   QPainterPath customPath(){\cf17  const }\{ {\cf19 return} mCustomPath; \}\par
2563 \par
2564   {\cf20 // setters:}\par
2565   {\cf18 void} setFromOther({\cf17 const} QCPScatterStyle &other, ScatterProperties properties);\par
2566   {\cf18 void} setSize({\cf18 double} size);\par
2567   {\cf18 void} setShape(ScatterShape shape);\par
2568   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
2569   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
2570   {\cf18 void} setPixmap({\cf17 const} QPixmap &pixmap);\par
2571   {\cf18 void} setCustomPath({\cf17 const} QPainterPath &customPath);\par
2572 \par
2573   {\cf20 // non-property methods:}\par
2574   {\cf18 bool} isNone(){\cf17  const }\{ {\cf19 return} mShape == ssNone; \}\par
2575   {\cf18 bool} isPenDefined(){\cf17  const }\{ {\cf19 return} mPenDefined; \}\par
2576   {\cf18 void} undefinePen();\par
2577   {\cf18 void} applyTo(QCPPainter *painter, {\cf17 const} QPen &defaultPen) {\cf17 const};\par
2578   {\cf18 void} drawShape(QCPPainter *painter, {\cf17 const} QPointF &pos) {\cf17 const};\par
2579   {\cf18 void} drawShape(QCPPainter *painter, {\cf18 double} x, {\cf18 double} y) {\cf17 const};\par
2580 \par
2581 {\cf17 protected}:\par
2582   {\cf20 // property members:}\par
2583   {\cf18 double} mSize;\par
2584   ScatterShape mShape;\par
2585   QPen mPen;\par
2586   QBrush mBrush;\par
2587   QPixmap mPixmap;\par
2588   QPainterPath mCustomPath;\par
2589   \par
2590   {\cf20 // non-property members:}\par
2591   {\cf18 bool} mPenDefined;\par
2592 \};\par
2593 Q_DECLARE_TYPEINFO(QCPScatterStyle, Q_MOVABLE_TYPE);\par
2594 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPScatterStyle::ScatterProperties)\par
2595 Q_DECLARE_METATYPE(QCPScatterStyle::ScatterProperty)\par
2596 Q_DECLARE_METATYPE(QCPScatterStyle::ScatterShape)\par
2597 \par
2598 {\cf20 /* end of 'src/scatterstyle.h' */}\par
2599 \par
2600 \par
2601 {\cf20 /* including file 'src/datacontainer.h'     */}\par
2602 {\cf20 /* modified 2022-11-06T12:45:56, size 34305 */}\par
2603 \par
2604 \par
2609 {\cf17 template} <{\cf17 class} DataType>\par
2610 {\cf17 inline} {\cf18 bool} qcpLessThanSortKey({\cf17 const} DataType &a, {\cf17 const} DataType &b) \{ {\cf19 return} a.sortKey() < b.sortKey(); \}\par
2611 \par
2612 {\cf17 template} <{\cf17 class} DataType>\par
2613 {\cf17 class }QCPDataContainer {\cf20 // no QCP_LIB_DECL, template class ends up in header (cpp included below)}\par
2614 \{\par
2615 {\cf17 public}:\par
2616   {\cf17 typedef} {\cf17 typename} QVector<DataType>::const_iterator const_iterator;\par
2617   {\cf17 typedef} {\cf17 typename} QVector<DataType>::iterator iterator;\par
2618   \par
2619   QCPDataContainer();\par
2620   \par
2621   {\cf20 // getters:}\par
2622   {\cf18 int} size(){\cf17  const }\{ {\cf19 return} mData.size()-mPreallocSize; \}\par
2623   {\cf18 bool} isEmpty(){\cf17  const }\{ {\cf19 return} size() == 0; \}\par
2624   {\cf18 bool} autoSqueeze(){\cf17  const }\{ {\cf19 return} mAutoSqueeze; \}\par
2625   \par
2626   {\cf20 // setters:}\par
2627   {\cf18 void} setAutoSqueeze({\cf18 bool} enabled);\par
2628   \par
2629   {\cf20 // non-virtual methods:}\par
2630   {\cf18 void} set({\cf17 const} QCPDataContainer<DataType> &data);\par
2631   {\cf18 void} set({\cf17 const} QVector<DataType> &data, {\cf18 bool} alreadySorted={\cf17 false});\par
2632   {\cf18 void} add({\cf17 const} QCPDataContainer<DataType> &data);\par
2633   {\cf18 void} add({\cf17 const} QVector<DataType> &data, {\cf18 bool} alreadySorted={\cf17 false});\par
2634   {\cf18 void} add({\cf17 const} DataType &data);\par
2635   {\cf18 void} removeBefore({\cf18 double} sortKey);\par
2636   {\cf18 void} removeAfter({\cf18 double} sortKey);\par
2637   {\cf18 void} remove({\cf18 double} sortKeyFrom, {\cf18 double} sortKeyTo);\par
2638   {\cf18 void} remove({\cf18 double} sortKey);\par
2639   {\cf18 void} clear();\par
2640   {\cf18 void} sort();\par
2641   {\cf18 void} squeeze({\cf18 bool} preAllocation={\cf17 true}, {\cf18 bool} postAllocation={\cf17 true});\par
2642   \par
2643   const_iterator constBegin(){\cf17  const }\{ {\cf19 return} mData.constBegin()+mPreallocSize; \}\par
2644   const_iterator constEnd(){\cf17  const }\{ {\cf19 return} mData.constEnd(); \}\par
2645   iterator begin() \{ {\cf19 return} mData.begin()+mPreallocSize; \}\par
2646   iterator end() \{ {\cf19 return} mData.end(); \}\par
2647   const_iterator findBegin({\cf18 double} sortKey, {\cf18 bool} expandedRange={\cf17 true}) {\cf17 const};\par
2648   const_iterator findEnd({\cf18 double} sortKey, {\cf18 bool} expandedRange={\cf17 true}) {\cf17 const};\par
2649   const_iterator at({\cf18 int} index){\cf17  const }\{ {\cf19 return} constBegin()+qBound(0, index, size()); \}\par
2650   QCPRange keyRange({\cf18 bool} &foundRange, QCP::SignDomain signDomain=QCP::sdBoth);\par
2651   QCPRange valueRange({\cf18 bool} &foundRange, QCP::SignDomain signDomain=QCP::sdBoth, {\cf17 const} QCPRange &inKeyRange=QCPRange());\par
2652   QCPDataRange dataRange(){\cf17  const }\{ {\cf19 return} QCPDataRange(0, size()); \}\par
2653   {\cf18 void} limitIteratorsToDataRange(const_iterator &begin, const_iterator &end, {\cf17 const} QCPDataRange &dataRange) {\cf17 const};\par
2654   \par
2655 {\cf17 protected}:\par
2656   {\cf20 // property members:}\par
2657   {\cf18 bool} mAutoSqueeze;\par
2658   \par
2659   {\cf20 // non-property memebers:}\par
2660   QVector<DataType> mData;\par
2661   {\cf18 int} mPreallocSize;\par
2662   {\cf18 int} mPreallocIteration;\par
2663   \par
2664   {\cf20 // non-virtual methods:}\par
2665   {\cf18 void} preallocateGrow({\cf18 int} minimumPreallocSize);\par
2666   {\cf18 void} performAutoSqueeze();\par
2667 \};\par
2668 \par
2669 \par
2670 \par
2671 {\cf20 // include implementation in header since it is a class template:}\par
2675 \par
2743 {\cf20 /* start documentation of inline functions */}\par
2744 \par
2799 {\cf20 /* end documentation of inline functions */}\par
2800 \par
2805 {\cf17 template} <{\cf17 class} DataType>\par
2806 QCPDataContainer<DataType>::QCPDataContainer() :\par
2807   mAutoSqueeze(true),\par
2808   mPreallocSize(0),\par
2809   mPreallocIteration(0)\par
2810 \{\par
2811 \}\par
2812 \par
2821 {\cf17 template} <{\cf17 class} DataType>\par
2822 {\cf18 void} QCPDataContainer<DataType>::setAutoSqueeze({\cf18 bool} enabled)\par
2823 \{\par
2824   {\cf19 if} (mAutoSqueeze != enabled)\par
2825   \{\par
2826     mAutoSqueeze = enabled;\par
2827     {\cf19 if} (mAutoSqueeze)\par
2828       performAutoSqueeze();\par
2829   \}\par
2830 \}\par
2831 \par
2838 {\cf17 template} <{\cf17 class} DataType>\par
2839 {\cf18 void} QCPDataContainer<DataType>::set({\cf17 const} QCPDataContainer<DataType> &data)\par
2840 \{\par
2841   clear();\par
2842   add(data);\par
2843 \}\par
2844 \par
2854 {\cf17 template} <{\cf17 class} DataType>\par
2855 {\cf18 void} QCPDataContainer<DataType>::set({\cf17 const} QVector<DataType> &data, {\cf18 bool} alreadySorted)\par
2856 \{\par
2857   mData = data;\par
2858   mPreallocSize = 0;\par
2859   mPreallocIteration = 0;\par
2860   {\cf19 if} (!alreadySorted)\par
2861     sort();\par
2862 \}\par
2863 \par
2870 {\cf17 template} <{\cf17 class} DataType>\par
2871 {\cf18 void} QCPDataContainer<DataType>::add({\cf17 const} QCPDataContainer<DataType> &data)\par
2872 \{\par
2873   {\cf19 if} (data.isEmpty())\par
2874     {\cf19 return};\par
2875   \par
2876   {\cf17 const} {\cf18 int} n = data.size();\par
2877   {\cf17 const} {\cf18 int} oldSize = size();\par
2878   \par
2879   {\cf19 if} (oldSize > 0 && !qcpLessThanSortKey<DataType>(*constBegin(), *(data.constEnd()-1))) {\cf20 // prepend if new data keys are all smaller than or equal to existing ones}\par
2880   \{\par
2881     {\cf19 if} (mPreallocSize < n)\par
2882       preallocateGrow(n);\par
2883     mPreallocSize -= n;\par
2884     std::copy(data.constBegin(), data.constEnd(), begin());\par
2885   \} {\cf19 else} {\cf20 // don't need to prepend, so append and merge if necessary}\par
2886   \{\par
2887     mData.resize(mData.size()+n);\par
2888     std::copy(data.constBegin(), data.constEnd(), end()-n);\par
2889     {\cf19 if} (oldSize > 0 && !qcpLessThanSortKey<DataType>(*(constEnd()-n-1), *(constEnd()-n))) {\cf20 // if appended range keys aren't all greater than existing ones, merge the two partitions}\par
2890       std::inplace_merge(begin(), end()-n, end(), qcpLessThanSortKey<DataType>);\par
2891   \}\par
2892 \}\par
2893 \par
2902 {\cf17 template} <{\cf17 class} DataType>\par
2903 {\cf18 void} QCPDataContainer<DataType>::add({\cf17 const} QVector<DataType> &data, {\cf18 bool} alreadySorted)\par
2904 \{\par
2905   {\cf19 if} (data.isEmpty())\par
2906     {\cf19 return};\par
2907   {\cf19 if} (isEmpty())\par
2908   \{\par
2909     set(data, alreadySorted);\par
2910     {\cf19 return};\par
2911   \}\par
2912   \par
2913   {\cf17 const} {\cf18 int} n = data.size();\par
2914   {\cf17 const} {\cf18 int} oldSize = size();\par
2915   \par
2916   {\cf19 if} (alreadySorted && oldSize > 0 && !qcpLessThanSortKey<DataType>(*constBegin(), *(data.constEnd()-1))) {\cf20 // prepend if new data is sorted and keys are all smaller than or equal to existing ones}\par
2917   \{\par
2918     {\cf19 if} (mPreallocSize < n)\par
2919       preallocateGrow(n);\par
2920     mPreallocSize -= n;\par
2921     std::copy(data.constBegin(), data.constEnd(), begin());\par
2922   \} {\cf19 else} {\cf20 // don't need to prepend, so append and then sort and merge if necessary}\par
2923   \{\par
2924     mData.resize(mData.size()+n);\par
2925     std::copy(data.constBegin(), data.constEnd(), end()-n);\par
2926     {\cf19 if} (!alreadySorted) {\cf20 // sort appended subrange if it wasn't already sorted}\par
2927       std::sort(end()-n, end(), qcpLessThanSortKey<DataType>);\par
2928     {\cf19 if} (oldSize > 0 && !qcpLessThanSortKey<DataType>(*(constEnd()-n-1), *(constEnd()-n))) {\cf20 // if appended range keys aren't all greater than existing ones, merge the two partitions}\par
2929       std::inplace_merge(begin(), end()-n, end(), qcpLessThanSortKey<DataType>);\par
2930   \}\par
2931 \}\par
2932 \par
2939 {\cf17 template} <{\cf17 class} DataType>\par
2940 {\cf18 void} QCPDataContainer<DataType>::add({\cf17 const} DataType &data)\par
2941 \{\par
2942   {\cf19 if} (isEmpty() || !qcpLessThanSortKey<DataType>(data, *(constEnd()-1))) {\cf20 // quickly handle appends if new data key is greater or equal to existing ones}\par
2943   \{\par
2944     mData.append(data);\par
2945   \} {\cf19 else} {\cf19 if} (qcpLessThanSortKey<DataType>(data, *constBegin()))  {\cf20 // quickly handle prepends using preallocated space}\par
2946   \{\par
2947     {\cf19 if} (mPreallocSize < 1)\par
2948       preallocateGrow(1);\par
2949     --mPreallocSize;\par
2950     *begin() = data;\par
2951   \} {\cf19 else} {\cf20 // handle inserts, maintaining sorted keys}\par
2952   \{\par
2953     QCPDataContainer<DataType>::iterator insertionPoint = std::lower_bound(begin(), end(), data, qcpLessThanSortKey<DataType>);\par
2954     mData.insert(insertionPoint, data);\par
2955   \}\par
2956 \}\par
2957 \par
2963 {\cf17 template} <{\cf17 class} DataType>\par
2964 {\cf18 void} QCPDataContainer<DataType>::removeBefore({\cf18 double} sortKey)\par
2965 \{\par
2966   QCPDataContainer<DataType>::iterator it = begin();\par
2967   QCPDataContainer<DataType>::iterator itEnd = std::lower_bound(begin(), end(), DataType::fromSortKey(sortKey), qcpLessThanSortKey<DataType>);\par
2968   mPreallocSize += int(itEnd-it); {\cf20 // don't actually delete, just add it to the preallocated block (if it gets too large, squeeze will take care of it)}\par
2969   {\cf19 if} (mAutoSqueeze)\par
2970     performAutoSqueeze();\par
2971 \}\par
2972 \par
2978 {\cf17 template} <{\cf17 class} DataType>\par
2979 {\cf18 void} QCPDataContainer<DataType>::removeAfter({\cf18 double} sortKey)\par
2980 \{\par
2981   QCPDataContainer<DataType>::iterator it = std::upper_bound(begin(), end(), DataType::fromSortKey(sortKey), qcpLessThanSortKey<DataType>);\par
2982   QCPDataContainer<DataType>::iterator itEnd = end();\par
2983   mData.erase(it, itEnd); {\cf20 // typically adds it to the postallocated block}\par
2984   {\cf19 if} (mAutoSqueeze)\par
2985     performAutoSqueeze();\par
2986 \}\par
2987 \par
2995 {\cf17 template} <{\cf17 class} DataType>\par
2996 {\cf18 void} QCPDataContainer<DataType>::remove({\cf18 double} sortKeyFrom, {\cf18 double} sortKeyTo)\par
2997 \{\par
2998   {\cf19 if} (sortKeyFrom >= sortKeyTo || isEmpty())\par
2999     {\cf19 return};\par
3000   \par
3001   QCPDataContainer<DataType>::iterator it = std::lower_bound(begin(), end(), DataType::fromSortKey(sortKeyFrom), qcpLessThanSortKey<DataType>);\par
3002   QCPDataContainer<DataType>::iterator itEnd = std::upper_bound(it, end(), DataType::fromSortKey(sortKeyTo), qcpLessThanSortKey<DataType>);\par
3003   mData.erase(it, itEnd);\par
3004   {\cf19 if} (mAutoSqueeze)\par
3005     performAutoSqueeze();\par
3006 \}\par
3007 \par
3017 {\cf17 template} <{\cf17 class} DataType>\par
3018 {\cf18 void} QCPDataContainer<DataType>::remove({\cf18 double} sortKey)\par
3019 \{\par
3020   QCPDataContainer::iterator it = std::lower_bound(begin(), end(), DataType::fromSortKey(sortKey), qcpLessThanSortKey<DataType>);\par
3021   {\cf19 if} (it != end() && it->sortKey() == sortKey)\par
3022   \{\par
3023     {\cf19 if} (it == begin())\par
3024       ++mPreallocSize; {\cf20 // don't actually delete, just add it to the preallocated block (if it gets too large, squeeze will take care of it)}\par
3025     {\cf19 else}\par
3026       mData.erase(it);\par
3027   \}\par
3028   {\cf19 if} (mAutoSqueeze)\par
3029     performAutoSqueeze();\par
3030 \}\par
3031 \par
3037 {\cf17 template} <{\cf17 class} DataType>\par
3038 {\cf18 void} QCPDataContainer<DataType>::clear()\par
3039 \{\par
3040   mData.clear();\par
3041   mPreallocIteration = 0;\par
3042   mPreallocSize = 0;\par
3043 \}\par
3044 \par
3056 {\cf17 template} <{\cf17 class} DataType>\par
3057 {\cf18 void} QCPDataContainer<DataType>::sort()\par
3058 \{\par
3059   std::sort(begin(), end(), qcpLessThanSortKey<DataType>);\par
3060 \}\par
3061 \par
3072 {\cf17 template} <{\cf17 class} DataType>\par
3073 {\cf18 void} QCPDataContainer<DataType>::squeeze({\cf18 bool} preAllocation, {\cf18 bool} postAllocation)\par
3074 \{\par
3075   {\cf19 if} (preAllocation)\par
3076   \{\par
3077     {\cf19 if} (mPreallocSize > 0)\par
3078     \{\par
3079       std::copy(begin(), end(), mData.begin());\par
3080       mData.resize(size());\par
3081       mPreallocSize = 0;\par
3082     \}\par
3083     mPreallocIteration = 0;\par
3084   \}\par
3085   {\cf19 if} (postAllocation)\par
3086     mData.squeeze();\par
3087 \}\par
3088 \par
3104 {\cf17 template} <{\cf17 class} DataType>\par
3105 {\cf17 typename} QCPDataContainer<DataType>::const_iterator QCPDataContainer<DataType>::findBegin({\cf18 double} sortKey, {\cf18 bool} expandedRange){\cf17  const}\par
3106 {\cf17 }\{\par
3107   {\cf19 if} (isEmpty())\par
3108     {\cf19 return} constEnd();\par
3109   \par
3110   QCPDataContainer<DataType>::const_iterator it = std::lower_bound(constBegin(), constEnd(), DataType::fromSortKey(sortKey), qcpLessThanSortKey<DataType>);\par
3111   {\cf19 if} (expandedRange && it != constBegin()) {\cf20 // also covers it == constEnd case, and we know --constEnd is valid because mData isn't empty}\par
3112     --it;\par
3113   {\cf19 return} it;\par
3114 \}\par
3115 \par
3131 {\cf17 template} <{\cf17 class} DataType>\par
3132 {\cf17 typename} QCPDataContainer<DataType>::const_iterator QCPDataContainer<DataType>::findEnd({\cf18 double} sortKey, {\cf18 bool} expandedRange){\cf17  const}\par
3133 {\cf17 }\{\par
3134   {\cf19 if} (isEmpty())\par
3135     {\cf19 return} constEnd();\par
3136   \par
3137   QCPDataContainer<DataType>::const_iterator it = std::upper_bound(constBegin(), constEnd(), DataType::fromSortKey(sortKey), qcpLessThanSortKey<DataType>);\par
3138   {\cf19 if} (expandedRange && it != constEnd())\par
3139     ++it;\par
3140   {\cf19 return} it;\par
3141 \}\par
3142 \par
3158 {\cf17 template} <{\cf17 class} DataType>\par
3159 QCPRange QCPDataContainer<DataType>::keyRange({\cf18 bool} &foundRange, QCP::SignDomain signDomain)\par
3160 \{\par
3161   {\cf19 if} (isEmpty())\par
3162   \{\par
3163     foundRange = {\cf17 false};\par
3164     {\cf19 return} QCPRange();\par
3165   \}\par
3166   QCPRange range;\par
3167   {\cf18 bool} haveLower = {\cf17 false};\par
3168   {\cf18 bool} haveUpper = {\cf17 false};\par
3169   {\cf18 double} current;\par
3170   \par
3171   QCPDataContainer<DataType>::const_iterator it = constBegin();\par
3172   QCPDataContainer<DataType>::const_iterator itEnd = constEnd();\par
3173   {\cf19 if} (signDomain == QCP::sdBoth) {\cf20 // range may be anywhere}\par
3174   \{\par
3175     {\cf19 if} (DataType::sortKeyIsMainKey()) {\cf20 // if DataType is sorted by main key (e.g. QCPGraph, but not QCPCurve), use faster algorithm by finding just first and last key with non-NaN value}\par
3176     \{\par
3177       {\cf19 while} (it != itEnd) {\cf20 // find first non-nan going up from left}\par
3178       \{\par
3179         {\cf19 if} (!qIsNaN(it->mainValue()))\par
3180         \{\par
3181           range.lower = it->mainKey();\par
3182           haveLower = {\cf17 true};\par
3183           {\cf19 break};\par
3184         \}\par
3185         ++it;\par
3186       \}\par
3187       it = itEnd;\par
3188       {\cf19 while} (it != constBegin()) {\cf20 // find first non-nan going down from right}\par
3189       \{\par
3190         --it;\par
3191         {\cf19 if} (!qIsNaN(it->mainValue()))\par
3192         \{\par
3193           range.upper = it->mainKey();\par
3194           haveUpper = {\cf17 true};\par
3195           {\cf19 break};\par
3196         \}\par
3197       \}\par
3198     \} {\cf19 else} {\cf20 // DataType is not sorted by main key, go through all data points and accordingly expand range}\par
3199     \{\par
3200       {\cf19 while} (it != itEnd)\par
3201       \{\par
3202         {\cf19 if} (!qIsNaN(it->mainValue()))\par
3203         \{\par
3204           current = it->mainKey();\par
3205           {\cf19 if} (current < range.lower || !haveLower)\par
3206           \{\par
3207             range.lower = current;\par
3208             haveLower = {\cf17 true};\par
3209           \}\par
3210           {\cf19 if} (current > range.upper || !haveUpper)\par
3211           \{\par
3212             range.upper = current;\par
3213             haveUpper = {\cf17 true};\par
3214           \}\par
3215         \}\par
3216         ++it;\par
3217       \}\par
3218     \}\par
3219   \} {\cf19 else} {\cf19 if} (signDomain == QCP::sdNegative) {\cf20 // range may only be in the negative sign domain}\par
3220   \{\par
3221     {\cf19 while} (it != itEnd)\par
3222     \{\par
3223       {\cf19 if} (!qIsNaN(it->mainValue()))\par
3224       \{\par
3225         current = it->mainKey();\par
3226         {\cf19 if} ((current < range.lower || !haveLower) && current < 0)\par
3227         \{\par
3228           range.lower = current;\par
3229           haveLower = {\cf17 true};\par
3230         \}\par
3231         {\cf19 if} ((current > range.upper || !haveUpper) && current < 0)\par
3232         \{\par
3233           range.upper = current;\par
3234           haveUpper = {\cf17 true};\par
3235         \}\par
3236       \}\par
3237       ++it;\par
3238     \}\par
3239   \} {\cf19 else} {\cf19 if} (signDomain == QCP::sdPositive) {\cf20 // range may only be in the positive sign domain}\par
3240   \{\par
3241     {\cf19 while} (it != itEnd)\par
3242     \{\par
3243       {\cf19 if} (!qIsNaN(it->mainValue()))\par
3244       \{\par
3245         current = it->mainKey();\par
3246         {\cf19 if} ((current < range.lower || !haveLower) && current > 0)\par
3247         \{\par
3248           range.lower = current;\par
3249           haveLower = {\cf17 true};\par
3250         \}\par
3251         {\cf19 if} ((current > range.upper || !haveUpper) && current > 0)\par
3252         \{\par
3253           range.upper = current;\par
3254           haveUpper = {\cf17 true};\par
3255         \}\par
3256       \}\par
3257       ++it;\par
3258     \}\par
3259   \}\par
3260   \par
3261   foundRange = haveLower && haveUpper;\par
3262   {\cf19 return} range;\par
3263 \}\par
3264 \par
3283 {\cf17 template} <{\cf17 class} DataType>\par
3284 QCPRange QCPDataContainer<DataType>::valueRange({\cf18 bool} &foundRange, QCP::SignDomain signDomain, {\cf17 const} QCPRange &inKeyRange)\par
3285 \{\par
3286   {\cf19 if} (isEmpty())\par
3287   \{\par
3288     foundRange = {\cf17 false};\par
3289     {\cf19 return} QCPRange();\par
3290   \}\par
3291   QCPRange range;\par
3292   {\cf17 const} {\cf18 bool} restrictKeyRange = inKeyRange != QCPRange();\par
3293   {\cf18 bool} haveLower = {\cf17 false};\par
3294   {\cf18 bool} haveUpper = {\cf17 false};\par
3295   QCPRange current;\par
3296   QCPDataContainer<DataType>::const_iterator itBegin = constBegin();\par
3297   QCPDataContainer<DataType>::const_iterator itEnd = constEnd();\par
3298   {\cf19 if} (DataType::sortKeyIsMainKey() && restrictKeyRange)\par
3299   \{\par
3300     itBegin = findBegin(inKeyRange.lower, {\cf17 false});\par
3301     itEnd = findEnd(inKeyRange.upper, {\cf17 false});\par
3302   \}\par
3303   {\cf19 if} (signDomain == QCP::sdBoth) {\cf20 // range may be anywhere}\par
3304   \{\par
3305     {\cf19 for} (QCPDataContainer<DataType>::const_iterator it = itBegin; it != itEnd; ++it)\par
3306     \{\par
3307       {\cf19 if} (restrictKeyRange && (it->mainKey() < inKeyRange.lower || it->mainKey() > inKeyRange.upper))\par
3308         {\cf19 continue};\par
3309       current = it->valueRange();\par
3310       {\cf19 if} ((current.lower < range.lower || !haveLower) && !qIsNaN(current.lower) && std::isfinite(current.lower))\par
3311       \{\par
3312         range.lower = current.lower;\par
3313         haveLower = {\cf17 true};\par
3314       \}\par
3315       {\cf19 if} ((current.upper > range.upper || !haveUpper) && !qIsNaN(current.upper) && std::isfinite(current.upper))\par
3316       \{\par
3317         range.upper = current.upper;\par
3318         haveUpper = {\cf17 true};\par
3319       \}\par
3320     \}\par
3321   \} {\cf19 else} {\cf19 if} (signDomain == QCP::sdNegative) {\cf20 // range may only be in the negative sign domain}\par
3322   \{\par
3323     {\cf19 for} (QCPDataContainer<DataType>::const_iterator it = itBegin; it != itEnd; ++it)\par
3324     \{\par
3325       {\cf19 if} (restrictKeyRange && (it->mainKey() < inKeyRange.lower || it->mainKey() > inKeyRange.upper))\par
3326         {\cf19 continue};\par
3327       current = it->valueRange();\par
3328       {\cf19 if} ((current.lower < range.lower || !haveLower) && current.lower < 0 && !qIsNaN(current.lower) && std::isfinite(current.lower))\par
3329       \{\par
3330         range.lower = current.lower;\par
3331         haveLower = {\cf17 true};\par
3332       \}\par
3333       {\cf19 if} ((current.upper > range.upper || !haveUpper) && current.upper < 0 && !qIsNaN(current.upper) && std::isfinite(current.upper))\par
3334       \{\par
3335         range.upper = current.upper;\par
3336         haveUpper = {\cf17 true};\par
3337       \}\par
3338     \}\par
3339   \} {\cf19 else} {\cf19 if} (signDomain == QCP::sdPositive) {\cf20 // range may only be in the positive sign domain}\par
3340   \{\par
3341     {\cf19 for} (QCPDataContainer<DataType>::const_iterator it = itBegin; it != itEnd; ++it)\par
3342     \{\par
3343       {\cf19 if} (restrictKeyRange && (it->mainKey() < inKeyRange.lower || it->mainKey() > inKeyRange.upper))\par
3344         {\cf19 continue};\par
3345       current = it->valueRange();\par
3346       {\cf19 if} ((current.lower < range.lower || !haveLower) && current.lower > 0 && !qIsNaN(current.lower) && std::isfinite(current.lower))\par
3347       \{\par
3348         range.lower = current.lower;\par
3349         haveLower = {\cf17 true};\par
3350       \}\par
3351       {\cf19 if} ((current.upper > range.upper || !haveUpper) && current.upper > 0 && !qIsNaN(current.upper) && std::isfinite(current.upper))\par
3352       \{\par
3353         range.upper = current.upper;\par
3354         haveUpper = {\cf17 true};\par
3355       \}\par
3356     \}\par
3357   \}\par
3358   \par
3359   foundRange = haveLower && haveUpper;\par
3360   {\cf19 return} range;\par
3361 \}\par
3362 \par
3371 {\cf17 template} <{\cf17 class} DataType>\par
3372 {\cf18 void} QCPDataContainer<DataType>::limitIteratorsToDataRange(const_iterator &begin, const_iterator &end, {\cf17 const} QCPDataRange &dataRange){\cf17  const}\par
3373 {\cf17 }\{\par
3374   QCPDataRange iteratorRange({\cf18 int}(begin-constBegin()), {\cf18 int}(end-constBegin()));\par
3375   iteratorRange = iteratorRange.bounded(dataRange.bounded(this->dataRange()));\par
3376   begin = constBegin()+iteratorRange.begin();\par
3377   end = constBegin()+iteratorRange.end();\par
3378 \}\par
3379 \par
3389 {\cf17 template} <{\cf17 class} DataType>\par
3390 {\cf18 void} QCPDataContainer<DataType>::preallocateGrow({\cf18 int} minimumPreallocSize)\par
3391 \{\par
3392   {\cf19 if} (minimumPreallocSize <= mPreallocSize)\par
3393     {\cf19 return};\par
3394   \par
3395   {\cf18 int} newPreallocSize = minimumPreallocSize;\par
3396   newPreallocSize += (1u<<qBound(4, mPreallocIteration+4, 15)) - 12; {\cf20 // do 4 up to 32768-12 preallocation, doubling in each intermediate iteration}\par
3397   ++mPreallocIteration;\par
3398   \par
3399   {\cf18 int} sizeDifference = newPreallocSize-mPreallocSize;\par
3400   mData.resize(mData.size()+sizeDifference);\par
3401   std::copy_backward(mData.begin()+mPreallocSize, mData.end()-sizeDifference, mData.end());\par
3402   mPreallocSize = newPreallocSize;\par
3403 \}\par
3404 \par
3419 {\cf17 template} <{\cf17 class} DataType>\par
3420 {\cf18 void} QCPDataContainer<DataType>::performAutoSqueeze()\par
3421 \{\par
3422   {\cf17 const} {\cf18 int} totalAlloc = mData.capacity();\par
3423   {\cf17 const} {\cf18 int} postAllocSize = totalAlloc-mData.size();\par
3424   {\cf17 const} {\cf18 int} usedSize = size();\par
3425   {\cf18 bool} shrinkPostAllocation = {\cf17 false};\par
3426   {\cf18 bool} shrinkPreAllocation = {\cf17 false};\par
3427   {\cf19 if} (totalAlloc > 650000) {\cf20 // if allocation is larger, shrink earlier with respect to total used size}\par
3428   \{\par
3429     shrinkPostAllocation = postAllocSize > usedSize*1.5; {\cf20 // QVector grow strategy is 2^n for static data. Watch out not to oscillate!}\par
3430     shrinkPreAllocation = mPreallocSize*10 > usedSize;\par
3431   \} {\cf19 else} {\cf19 if} (totalAlloc > 1000) {\cf20 // below 10 MiB raw data be generous with preallocated memory, below 1k points don't even bother}\par
3432   \{\par
3433     shrinkPostAllocation = postAllocSize > usedSize*5;\par
3434     shrinkPreAllocation = mPreallocSize > usedSize*1.5; {\cf20 // preallocation can grow into postallocation, so can be smaller}\par
3435   \}\par
3436   \par
3437   {\cf19 if} (shrinkPreAllocation || shrinkPostAllocation)\par
3438     squeeze(shrinkPreAllocation, shrinkPostAllocation);\par
3439 \}\par
3440 \par
3441 \par
3442 {\cf20 /* end of 'src/datacontainer.h' */}\par
3443 \par
3444 \par
3445 {\cf20 /* including file 'src/plottable.h'        */}\par
3446 {\cf20 /* modified 2022-11-06T12:45:56, size 8461 */}\par
3447 \par
3448 {\cf17 class }QCP_LIB_DECL QCPSelectionDecorator\par
3449 \{\par
3450   Q_GADGET\par
3451 {\cf17 public}:\par
3452   QCPSelectionDecorator();\par
3453   {\cf17 virtual} ~QCPSelectionDecorator();\par
3454   \par
3455   {\cf20 // getters:}\par
3456   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
3457   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
3458   QCPScatterStyle scatterStyle(){\cf17  const }\{ {\cf19 return} mScatterStyle; \}\par
3459   QCPScatterStyle::ScatterProperties usedScatterProperties(){\cf17  const }\{ {\cf19 return} mUsedScatterProperties; \}\par
3460   \par
3461   {\cf20 // setters:}\par
3462   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
3463   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
3464   {\cf18 void} setScatterStyle({\cf17 const} QCPScatterStyle &scatterStyle, QCPScatterStyle::ScatterProperties usedProperties=QCPScatterStyle::spPen);\par
3465   {\cf18 void} setUsedScatterProperties({\cf17 const} QCPScatterStyle::ScatterProperties &properties);\par
3466   \par
3467   {\cf20 // non-virtual methods:}\par
3468   {\cf18 void} applyPen(QCPPainter *painter) {\cf17 const};\par
3469   {\cf18 void} applyBrush(QCPPainter *painter) {\cf17 const};\par
3470   QCPScatterStyle getFinalScatterStyle({\cf17 const} QCPScatterStyle &unselectedStyle) {\cf17 const};\par
3471   \par
3472   {\cf20 // introduced virtual methods:}\par
3473   {\cf17 virtual} {\cf18 void} copyFrom({\cf17 const} QCPSelectionDecorator *other);\par
3474   {\cf17 virtual} {\cf18 void} drawDecoration(QCPPainter *painter, QCPDataSelection selection);\par
3475   \par
3476 {\cf17 protected}:\par
3477   {\cf20 // property members:}\par
3478   QPen mPen;\par
3479   QBrush mBrush;\par
3480   QCPScatterStyle mScatterStyle;\par
3481   QCPScatterStyle::ScatterProperties mUsedScatterProperties;\par
3482   {\cf20 // non-property members:}\par
3483   QCPAbstractPlottable *mPlottable;\par
3484   \par
3485   {\cf20 // introduced virtual methods:}\par
3486   {\cf17 virtual} {\cf18 bool} registerWithPlottable(QCPAbstractPlottable *plottable);\par
3487   \par
3488 {\cf17 private}:\par
3489   Q_DISABLE_COPY(QCPSelectionDecorator)\par
3490   friend class QCPAbstractPlottable;\par
3491 \};\par
3492 Q_DECLARE_METATYPE(QCPSelectionDecorator*)\par
3493 \par
3494 \par
3495 class QCP_LIB_DECL QCPAbstractPlottable : public QCPLayerable\par
3496 \{\par
3497   Q_OBJECT\par
3499   Q_PROPERTY(QString name READ name WRITE setName)\par
3500   Q_PROPERTY({\cf18 bool} antialiasedFill READ antialiasedFill WRITE setAntialiasedFill)\par
3501   Q_PROPERTY({\cf18 bool} antialiasedScatters READ antialiasedScatters WRITE setAntialiasedScatters)\par
3502   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
3503   Q_PROPERTY(QBrush brush READ brush WRITE setBrush)\par
3504   Q_PROPERTY(QCPAxis* keyAxis READ keyAxis WRITE setKeyAxis)\par
3505   Q_PROPERTY(QCPAxis* valueAxis READ valueAxis WRITE setValueAxis)\par
3506   Q_PROPERTY(QCP::SelectionType selectable READ selectable WRITE setSelectable NOTIFY selectableChanged)\par
3507   Q_PROPERTY(QCPDataSelection selection READ selection WRITE setSelection NOTIFY selectionChanged)\par
3508   Q_PROPERTY(QCPSelectionDecorator* selectionDecorator READ selectionDecorator WRITE setSelectionDecorator)\par
3510 {\cf17 public}:\par
3511   QCPAbstractPlottable(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
3512   {\cf17 virtual} ~QCPAbstractPlottable() Q_DECL_OVERRIDE;\par
3513   \par
3514   {\cf20 // getters:}\par
3515   QString name(){\cf17  const }\{ {\cf19 return} mName; \}\par
3516   {\cf18 bool} antialiasedFill(){\cf17  const }\{ {\cf19 return} mAntialiasedFill; \}\par
3517   {\cf18 bool} antialiasedScatters(){\cf17  const }\{ {\cf19 return} mAntialiasedScatters; \}\par
3518   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
3519   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
3520   QCPAxis *keyAxis(){\cf17  const }\{ {\cf19 return} mKeyAxis.data(); \}\par
3521   QCPAxis *valueAxis(){\cf17  const }\{ {\cf19 return} mValueAxis.data(); \}\par
3522   QCP::SelectionType selectable(){\cf17  const }\{ {\cf19 return} mSelectable; \}\par
3523   {\cf18 bool} selected(){\cf17  const }\{ {\cf19 return} !mSelection.isEmpty(); \}\par
3524   QCPDataSelection selection(){\cf17  const }\{ {\cf19 return} mSelection; \}\par
3525   QCPSelectionDecorator *selectionDecorator(){\cf17  const }\{ {\cf19 return} mSelectionDecorator; \}\par
3526   \par
3527   {\cf20 // setters:}\par
3528   {\cf18 void} setName({\cf17 const} QString &name);\par
3529   {\cf18 void} setAntialiasedFill({\cf18 bool} enabled);\par
3530   {\cf18 void} setAntialiasedScatters({\cf18 bool} enabled);\par
3531   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
3532   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
3533   {\cf18 void} setKeyAxis(QCPAxis *axis);\par
3534   {\cf18 void} setValueAxis(QCPAxis *axis);\par
3535   Q_SLOT {\cf18 void} setSelectable(QCP::SelectionType selectable);\par
3536   Q_SLOT {\cf18 void} setSelection(QCPDataSelection selection);\par
3537   {\cf18 void} setSelectionDecorator(QCPSelectionDecorator *decorator);\par
3538 \par
3539   {\cf20 // introduced virtual methods:}\par
3540   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE = 0; {\cf20 // actually introduced in QCPLayerable as non-pure, but we want to force reimplementation for plottables}\par
3541   virtual QCPPlottableInterface1D *interface1D() \{ {\cf19 return} {\cf17 nullptr}; \}\par
3542   {\cf17 virtual} QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) {\cf17 const} = 0;\par
3543   {\cf17 virtual} QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, {\cf17 const} QCPRange &inKeyRange=QCPRange()) {\cf17 const} = 0;\par
3544   \par
3545   {\cf20 // non-property methods:}\par
3546   {\cf18 void} coordsToPixels({\cf18 double} key, {\cf18 double} value, {\cf18 double} &x, {\cf18 double} &y) {\cf17 const};\par
3547   {\cf17 const} QPointF coordsToPixels({\cf18 double} key, {\cf18 double} value) {\cf17 const};\par
3548   {\cf18 void} pixelsToCoords({\cf18 double} x, {\cf18 double} y, {\cf18 double} &key, {\cf18 double} &value) {\cf17 const};\par
3549   {\cf18 void} pixelsToCoords({\cf17 const} QPointF &pixelPos, {\cf18 double} &key, {\cf18 double} &value) {\cf17 const};\par
3550   {\cf18 void} rescaleAxes({\cf18 bool} onlyEnlarge={\cf17 false}) {\cf17 const};\par
3551   {\cf18 void} rescaleKeyAxis({\cf18 bool} onlyEnlarge={\cf17 false}) {\cf17 const};\par
3552   {\cf18 void} rescaleValueAxis({\cf18 bool} onlyEnlarge={\cf17 false}, {\cf18 bool} inKeyRange={\cf17 false}) {\cf17 const};\par
3553   {\cf18 bool} addToLegend(QCPLegend *legend);\par
3554   {\cf18 bool} addToLegend();\par
3555   {\cf18 bool} removeFromLegend(QCPLegend *legend) {\cf17 const};\par
3556   {\cf18 bool} removeFromLegend() {\cf17 const};\par
3557   \par
3558 signals:\par
3559   {\cf18 void} selectionChanged({\cf18 bool} selected);\par
3560   {\cf18 void} selectionChanged({\cf17 const} QCPDataSelection &selection);\par
3561   {\cf18 void} selectableChanged(QCP::SelectionType selectable);\par
3562   \par
3563 {\cf17 protected}:\par
3564   {\cf20 // property members:}\par
3565   QString mName;\par
3566   {\cf18 bool} mAntialiasedFill, mAntialiasedScatters;\par
3567   QPen mPen;\par
3568   QBrush mBrush;\par
3569   QPointer<QCPAxis> mKeyAxis, mValueAxis;\par
3570   QCP::SelectionType mSelectable;\par
3571   QCPDataSelection mSelection;\par
3572   QCPSelectionDecorator *mSelectionDecorator;\par
3573   \par
3574   {\cf20 // reimplemented virtual methods:}\par
3575   {\cf17 virtual} QRect clipRect() const Q_DECL_OVERRIDE;\par
3576   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE = 0;\par
3577   virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
3578   {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
3579   {\cf20 // events:}\par
3580   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
3581   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
3582   \par
3583   {\cf20 // introduced virtual methods:}\par
3584   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const = 0;\par
3585   \par
3586   {\cf20 // non-virtual methods:}\par
3587   {\cf18 void} applyFillAntialiasingHint(QCPPainter *painter) const;\par
3588   {\cf18 void} applyScattersAntialiasingHint(QCPPainter *painter) const;\par
3589 \par
3590 private:\par
3591   Q_DISABLE_COPY(QCPAbstractPlottable)\par
3592   \par
3593   friend class QCustomPlot;\par
3594   friend class QCPAxis;\par
3595   friend class QCPPlottableLegendItem;\par
3596 \};\par
3597 \par
3598 \par
3599 {\cf20 /* end of 'src/plottable.h' */}\par
3600 \par
3601 \par
3602 {\cf20 /* including file 'src/item.h'             */}\par
3603 {\cf20 /* modified 2022-11-06T12:45:56, size 9425 */}\par
3604 \par
3605 class QCP_LIB_DECL QCPItemAnchor\par
3606 \{\par
3607   Q_GADGET\par
3608 {\cf17 public}:\par
3609   QCPItemAnchor(QCustomPlot *parentPlot, QCPAbstractItem *parentItem, {\cf17 const} QString &name, {\cf18 int} anchorId=-1);\par
3610   {\cf17 virtual} ~QCPItemAnchor();\par
3611   \par
3612   {\cf20 // getters:}\par
3613   QString name(){\cf17  const }\{ {\cf19 return} mName; \}\par
3614   {\cf17 virtual} QPointF pixelPosition() {\cf17 const};\par
3615   \par
3616 {\cf17 protected}:\par
3617   {\cf20 // property members:}\par
3618   QString mName;\par
3619   \par
3620   {\cf20 // non-property members:}\par
3621   QCustomPlot *mParentPlot;\par
3622   QCPAbstractItem *mParentItem;\par
3623   {\cf18 int} mAnchorId;\par
3624   QSet<QCPItemPosition*> mChildrenX, mChildrenY;\par
3625   \par
3626   {\cf20 // introduced virtual methods:}\par
3627   {\cf17 virtual} QCPItemPosition *toQCPItemPosition() \{ {\cf19 return} {\cf17 nullptr}; \}\par
3628   \par
3629   {\cf20 // non-virtual methods:}\par
3630   {\cf18 void} addChildX(QCPItemPosition* pos); {\cf20 // called from pos when this anchor is set as parent}\par
3631   {\cf18 void} removeChildX(QCPItemPosition *pos); {\cf20 // called from pos when its parent anchor is reset or pos deleted}\par
3632   {\cf18 void} addChildY(QCPItemPosition* pos); {\cf20 // called from pos when this anchor is set as parent}\par
3633   {\cf18 void} removeChildY(QCPItemPosition *pos); {\cf20 // called from pos when its parent anchor is reset or pos deleted}\par
3634   \par
3635 {\cf17 private}:\par
3636   Q_DISABLE_COPY(QCPItemAnchor)\par
3637   \par
3638   friend class QCPItemPosition;\par
3639 \};\par
3640 \par
3641 \par
3642 \par
3643 class QCP_LIB_DECL QCPItemPosition : public QCPItemAnchor\par
3644 \{\par
3645   Q_GADGET\par
3646 {\cf17 public}:\par
3653   {\cf17 enum} PositionType \{ ptAbsolute        \par
3654                       ,ptViewportRatio  \par
3657                       ,ptAxisRectRatio  \par
3660                       ,ptPlotCoords     \par
3661                     \};\par
3662   Q_ENUMS(PositionType)\par
3663   \par
3664   QCPItemPosition(QCustomPlot *parentPlot, QCPAbstractItem *parentItem, const QString &name);\par
3665   virtual ~QCPItemPosition() Q_DECL_OVERRIDE;\par
3666   \par
3667   {\cf20 // getters:}\par
3668   PositionType type(){\cf17  const }\{ {\cf19 return} typeX(); \}\par
3669   PositionType typeX(){\cf17  const }\{ {\cf19 return} mPositionTypeX; \}\par
3670   PositionType typeY(){\cf17  const }\{ {\cf19 return} mPositionTypeY; \}\par
3671   QCPItemAnchor *parentAnchor(){\cf17  const }\{ {\cf19 return} parentAnchorX(); \}\par
3672   QCPItemAnchor *parentAnchorX(){\cf17  const }\{ {\cf19 return} mParentAnchorX; \}\par
3673   QCPItemAnchor *parentAnchorY(){\cf17  const }\{ {\cf19 return} mParentAnchorY; \}\par
3674   {\cf18 double} key(){\cf17  const }\{ {\cf19 return} mKey; \}\par
3675   {\cf18 double} value(){\cf17  const }\{ {\cf19 return} mValue; \}\par
3676   QPointF coords(){\cf17  const }\{ {\cf19 return} QPointF(mKey, mValue); \}\par
3677   QCPAxis *keyAxis(){\cf17  const }\{ {\cf19 return} mKeyAxis.data(); \}\par
3678   QCPAxis *valueAxis(){\cf17  const }\{ {\cf19 return} mValueAxis.data(); \}\par
3679   QCPAxisRect *axisRect() {\cf17 const};\par
3680   {\cf17 virtual} QPointF pixelPosition() const Q_DECL_OVERRIDE;\par
3681   \par
3682   {\cf20 // setters:}\par
3683   {\cf18 void} setType(PositionType type);\par
3684   {\cf18 void} setTypeX(PositionType type);\par
3685   {\cf18 void} setTypeY(PositionType type);\par
3686   {\cf18 bool} setParentAnchor(QCPItemAnchor *parentAnchor, {\cf18 bool} keepPixelPosition=false);\par
3687   {\cf18 bool} setParentAnchorX(QCPItemAnchor *parentAnchor, {\cf18 bool} keepPixelPosition=false);\par
3688   {\cf18 bool} setParentAnchorY(QCPItemAnchor *parentAnchor, {\cf18 bool} keepPixelPosition=false);\par
3689   {\cf18 void} setCoords({\cf18 double} key, {\cf18 double} value);\par
3690   {\cf18 void} setCoords(const QPointF &pos);\par
3691   {\cf18 void} setAxes(QCPAxis* keyAxis, QCPAxis* valueAxis);\par
3692   {\cf18 void} setAxisRect(QCPAxisRect *axisRect);\par
3693   {\cf18 void} setPixelPosition(const QPointF &pixelPosition);\par
3694   \par
3695 protected:\par
3696   {\cf20 // property members:}\par
3697   PositionType mPositionTypeX, mPositionTypeY;\par
3698   QPointer<QCPAxis> mKeyAxis, mValueAxis;\par
3699   QPointer<QCPAxisRect> mAxisRect;\par
3700   {\cf18 double} mKey, mValue;\par
3701   QCPItemAnchor *mParentAnchorX, *mParentAnchorY;\par
3702   \par
3703   {\cf20 // reimplemented virtual methods:}\par
3704   virtual QCPItemPosition *toQCPItemPosition() Q_DECL_OVERRIDE \{ {\cf19 return} {\cf17 this}; \}\par
3705   \par
3706 {\cf17 private}:\par
3707   Q_DISABLE_COPY(QCPItemPosition)\par
3708   \par
3709 \};\par
3710 Q_DECLARE_METATYPE(QCPItemPosition::PositionType)\par
3711 \par
3712 \par
3713 class QCP_LIB_DECL QCPAbstractItem : public QCPLayerable\par
3714 \{\par
3715   Q_OBJECT\par
3717   Q_PROPERTY({\cf18 bool} clipToAxisRect READ clipToAxisRect WRITE setClipToAxisRect)\par
3718   Q_PROPERTY(QCPAxisRect* clipAxisRect READ clipAxisRect WRITE setClipAxisRect)\par
3719   Q_PROPERTY({\cf18 bool} selectable READ selectable WRITE setSelectable NOTIFY selectableChanged)\par
3720   Q_PROPERTY({\cf18 bool} selected READ selected WRITE setSelected NOTIFY selectionChanged)\par
3722 {\cf17 public}:\par
3723   {\cf17 explicit} QCPAbstractItem(QCustomPlot *parentPlot);\par
3724   {\cf17 virtual} ~QCPAbstractItem() Q_DECL_OVERRIDE;\par
3725   \par
3726   {\cf20 // getters:}\par
3727   {\cf18 bool} clipToAxisRect(){\cf17  const }\{ {\cf19 return} mClipToAxisRect; \}\par
3728   QCPAxisRect *clipAxisRect() {\cf17 const};\par
3729   {\cf18 bool} selectable(){\cf17  const }\{ {\cf19 return} mSelectable; \}\par
3730   {\cf18 bool} selected(){\cf17  const }\{ {\cf19 return} mSelected; \}\par
3731   \par
3732   {\cf20 // setters:}\par
3733   {\cf18 void} setClipToAxisRect({\cf18 bool} clip);\par
3734   {\cf18 void} setClipAxisRect(QCPAxisRect *rect);\par
3735   Q_SLOT {\cf18 void} setSelectable({\cf18 bool} selectable);\par
3736   Q_SLOT {\cf18 void} setSelected({\cf18 bool} selected);\par
3737   \par
3738   {\cf20 // reimplemented virtual methods:}\par
3739   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE = 0;\par
3740   \par
3741   {\cf20 // non-virtual methods:}\par
3742   QList<QCPItemPosition*> positions(){\cf17  const }\{ {\cf19 return} mPositions; \}\par
3743   QList<QCPItemAnchor*> anchors(){\cf17  const }\{ {\cf19 return} mAnchors; \}\par
3744   QCPItemPosition *position({\cf17 const} QString &name) {\cf17 const};\par
3745   QCPItemAnchor *anchor({\cf17 const} QString &name) {\cf17 const};\par
3746   {\cf18 bool} hasAnchor({\cf17 const} QString &name) {\cf17 const};\par
3747   \par
3748 signals:\par
3749   {\cf18 void} selectionChanged({\cf18 bool} selected);\par
3750   {\cf18 void} selectableChanged({\cf18 bool} selectable);\par
3751   \par
3752 {\cf17 protected}:\par
3753   {\cf20 // property members:}\par
3754   {\cf18 bool} mClipToAxisRect;\par
3755   QPointer<QCPAxisRect> mClipAxisRect;\par
3756   QList<QCPItemPosition*> mPositions;\par
3757   QList<QCPItemAnchor*> mAnchors;\par
3758   {\cf18 bool} mSelectable, mSelected;\par
3759   \par
3760   {\cf20 // reimplemented virtual methods:}\par
3761   {\cf17 virtual} QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
3762   virtual QRect clipRect() const Q_DECL_OVERRIDE;\par
3763   virtual {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
3764   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE = 0;\par
3765   {\cf20 // events:}\par
3766   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
3767   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
3768   \par
3769   {\cf20 // introduced virtual methods:}\par
3770   virtual QPointF anchorPixelPosition({\cf18 int} anchorId) const;\par
3771   \par
3772   {\cf20 // non-virtual methods:}\par
3773   {\cf18 double} rectDistance(const QRectF &rect, const QPointF &pos, {\cf18 bool} filledRect) const;\par
3774   QCPItemPosition *createPosition(const QString &name);\par
3775   QCPItemAnchor *createAnchor(const QString &name, {\cf18 int} anchorId);\par
3776   \par
3777 private:\par
3778   Q_DISABLE_COPY(QCPAbstractItem)\par
3779   \par
3780   friend class QCustomPlot;\par
3781   friend class QCPItemAnchor;\par
3782 \};\par
3783 \par
3784 {\cf20 /* end of 'src/item.h' */}\par
3785 \par
3786 \par
3787 {\cf20 /* including file 'src/core.h'              */}\par
3788 {\cf20 /* modified 2022-11-06T12:45:56, size 19304 */}\par
3789 \par
3790 class QCP_LIB_DECL QCustomPlot : public QWidget\par
3791 \{\par
3792   Q_OBJECT\par
3794   Q_PROPERTY(QRect viewport READ viewport WRITE setViewport)\par
3795   Q_PROPERTY(QPixmap background READ background WRITE setBackground)\par
3796   Q_PROPERTY({\cf18 bool} backgroundScaled READ backgroundScaled WRITE setBackgroundScaled)\par
3797   Q_PROPERTY(Qt::AspectRatioMode backgroundScaledMode READ backgroundScaledMode WRITE setBackgroundScaledMode)\par
3798   Q_PROPERTY(QCPLayoutGrid* plotLayout READ plotLayout)\par
3799   Q_PROPERTY({\cf18 bool} autoAddPlottableToLegend READ autoAddPlottableToLegend WRITE setAutoAddPlottableToLegend)\par
3800   Q_PROPERTY({\cf18 int} selectionTolerance READ selectionTolerance WRITE setSelectionTolerance)\par
3801   Q_PROPERTY({\cf18 bool} noAntialiasingOnDrag READ noAntialiasingOnDrag WRITE setNoAntialiasingOnDrag)\par
3802   Q_PROPERTY(Qt::KeyboardModifier multiSelectModifier READ multiSelectModifier WRITE setMultiSelectModifier)\par
3803   Q_PROPERTY({\cf18 bool} openGl READ openGl WRITE setOpenGl)\par
3805 {\cf17 public}:\par
3811   {\cf17 enum} LayerInsertMode \{ limBelow  \par
3812                          ,limAbove \par
3813                        \};\par
3814   Q_ENUMS(LayerInsertMode)\par
3815   \par
3816   \par
3821   enum RefreshPriority \{ rpImmediateRefresh \par
3822                          ,rpQueuedRefresh   \par
3823                          ,rpRefreshHint     \par
3824                          ,rpQueuedReplot    \par
3825                        \};\par
3826   Q_ENUMS(RefreshPriority)\par
3827   \par
3828   explicit QCustomPlot(QWidget *parent = {\cf18 nullptr});\par
3829   virtual ~QCustomPlot() Q_DECL_OVERRIDE;\par
3830   \par
3831   {\cf20 // getters:}\par
3832   QRect viewport(){\cf17  const }\{ {\cf19 return} mViewport; \}\par
3833   {\cf18 double} bufferDevicePixelRatio(){\cf17  const }\{ {\cf19 return} mBufferDevicePixelRatio; \}\par
3834   QPixmap background(){\cf17  const }\{ {\cf19 return} mBackgroundPixmap; \}\par
3835   {\cf18 bool} backgroundScaled(){\cf17  const }\{ {\cf19 return} mBackgroundScaled; \}\par
3836   Qt::AspectRatioMode backgroundScaledMode(){\cf17  const }\{ {\cf19 return} mBackgroundScaledMode; \}\par
3837   QCPLayoutGrid *plotLayout(){\cf17  const }\{ {\cf19 return} mPlotLayout; \}\par
3838   QCP::AntialiasedElements antialiasedElements(){\cf17  const }\{ {\cf19 return} mAntialiasedElements; \}\par
3839   QCP::AntialiasedElements notAntialiasedElements(){\cf17  const }\{ {\cf19 return} mNotAntialiasedElements; \}\par
3840   {\cf18 bool} autoAddPlottableToLegend(){\cf17  const }\{ {\cf19 return} mAutoAddPlottableToLegend; \}\par
3841   {\cf17 const} QCP::Interactions interactions(){\cf17  const }\{ {\cf19 return} mInteractions; \}\par
3842   {\cf18 int} selectionTolerance(){\cf17  const }\{ {\cf19 return} mSelectionTolerance; \}\par
3843   {\cf18 bool} noAntialiasingOnDrag(){\cf17  const }\{ {\cf19 return} mNoAntialiasingOnDrag; \}\par
3844   QCP::PlottingHints plottingHints(){\cf17  const }\{ {\cf19 return} mPlottingHints; \}\par
3845   Qt::KeyboardModifier multiSelectModifier(){\cf17  const }\{ {\cf19 return} mMultiSelectModifier; \}\par
3846   QCP::SelectionRectMode selectionRectMode(){\cf17  const }\{ {\cf19 return} mSelectionRectMode; \}\par
3847   QCPSelectionRect *selectionRect(){\cf17  const }\{ {\cf19 return} mSelectionRect; \}\par
3848   {\cf18 bool} openGl(){\cf17  const }\{ {\cf19 return} mOpenGl; \}\par
3849   \par
3850   {\cf20 // setters:}\par
3851   {\cf18 void} setViewport({\cf17 const} QRect &rect);\par
3852   {\cf18 void} setBufferDevicePixelRatio({\cf18 double} ratio);\par
3853   {\cf18 void} setBackground({\cf17 const} QPixmap &pm);\par
3854   {\cf18 void} setBackground({\cf17 const} QPixmap &pm, {\cf18 bool} scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding);\par
3855   {\cf18 void} setBackground({\cf17 const} QBrush &brush);\par
3856   {\cf18 void} setBackgroundScaled({\cf18 bool} scaled);\par
3857   {\cf18 void} setBackgroundScaledMode(Qt::AspectRatioMode mode);\par
3858   {\cf18 void} setAntialiasedElements({\cf17 const} QCP::AntialiasedElements &antialiasedElements);\par
3859   {\cf18 void} setAntialiasedElement(QCP::AntialiasedElement antialiasedElement, {\cf18 bool} enabled={\cf17 true});\par
3860   {\cf18 void} setNotAntialiasedElements({\cf17 const} QCP::AntialiasedElements &notAntialiasedElements);\par
3861   {\cf18 void} setNotAntialiasedElement(QCP::AntialiasedElement notAntialiasedElement, {\cf18 bool} enabled={\cf17 true});\par
3862   {\cf18 void} setAutoAddPlottableToLegend({\cf18 bool} on);\par
3863   {\cf18 void} setInteractions({\cf17 const} QCP::Interactions &interactions);\par
3864   {\cf18 void} setInteraction({\cf17 const} QCP::Interaction &interaction, {\cf18 bool} enabled={\cf17 true});\par
3865   {\cf18 void} setSelectionTolerance({\cf18 int} pixels);\par
3866   {\cf18 void} setNoAntialiasingOnDrag({\cf18 bool} enabled);\par
3867   {\cf18 void} setPlottingHints({\cf17 const} QCP::PlottingHints &hints);\par
3868   {\cf18 void} setPlottingHint(QCP::PlottingHint hint, {\cf18 bool} enabled={\cf17 true});\par
3869   {\cf18 void} setMultiSelectModifier(Qt::KeyboardModifier modifier);\par
3870   {\cf18 void} setSelectionRectMode(QCP::SelectionRectMode mode);\par
3871   {\cf18 void} setSelectionRect(QCPSelectionRect *selectionRect);\par
3872   {\cf18 void} setOpenGl({\cf18 bool} enabled, {\cf18 int} multisampling=16);\par
3873   \par
3874   {\cf20 // non-property methods:}\par
3875   {\cf20 // plottable interface:}\par
3876   QCPAbstractPlottable *plottable({\cf18 int} index);\par
3877   QCPAbstractPlottable *plottable();\par
3878   {\cf18 bool} removePlottable(QCPAbstractPlottable *plottable);\par
3879   {\cf18 bool} removePlottable({\cf18 int} index);\par
3880   {\cf18 int} clearPlottables();\par
3881   {\cf18 int} plottableCount() {\cf17 const};\par
3882   QList<QCPAbstractPlottable*> selectedPlottables() {\cf17 const};\par
3883   {\cf17 template}<{\cf17 class} PlottableType>\par
3884   PlottableType *plottableAt({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable={\cf17 false}, {\cf18 int} *dataIndex={\cf17 nullptr}) {\cf17 const};\par
3885   QCPAbstractPlottable *plottableAt({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable={\cf17 false}, {\cf18 int} *dataIndex={\cf17 nullptr}) {\cf17 const};\par
3886   {\cf18 bool} hasPlottable(QCPAbstractPlottable *plottable) {\cf17 const};\par
3887  \par
3888   {\cf20 // specialized interface for QCPGraph:}\par
3889   QCPGraph *graph({\cf18 int} index) {\cf17 const};\par
3890   QCPGraph *graph() {\cf17 const};\par
3891   QCPGraph *addGraph(QCPAxis *keyAxis={\cf17 nullptr}, QCPAxis *valueAxis={\cf17 nullptr});\par
3892   {\cf18 bool} removeGraph(QCPGraph *graph);\par
3893   {\cf18 bool} removeGraph({\cf18 int} index);\par
3894   {\cf18 int} clearGraphs();\par
3895   {\cf18 int} graphCount() {\cf17 const};\par
3896   QList<QCPGraph*> selectedGraphs() {\cf17 const};\par
3897 \par
3898   {\cf20 // item interface:}\par
3899   QCPAbstractItem *item({\cf18 int} index) {\cf17 const};\par
3900   QCPAbstractItem *item() {\cf17 const};\par
3901   {\cf18 bool} removeItem(QCPAbstractItem *item);\par
3902   {\cf18 bool} removeItem({\cf18 int} index);\par
3903   {\cf18 int} clearItems();\par
3904   {\cf18 int} itemCount() {\cf17 const};\par
3905   QList<QCPAbstractItem*> selectedItems() {\cf17 const};\par
3906   {\cf17 template}<{\cf17 class} ItemType>\par
3907   ItemType *itemAt({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable={\cf17 false}) {\cf17 const};\par
3908   QCPAbstractItem *itemAt({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable={\cf17 false}) {\cf17 const};\par
3909   {\cf18 bool} hasItem(QCPAbstractItem *item) {\cf17 const};\par
3910   \par
3911   {\cf20 // layer interface:}\par
3912   QCPLayer *layer({\cf17 const} QString &name) {\cf17 const};\par
3913   QCPLayer *layer({\cf18 int} index) {\cf17 const};\par
3914   QCPLayer *currentLayer() {\cf17 const};\par
3915   {\cf18 bool} setCurrentLayer({\cf17 const} QString &name);\par
3916   {\cf18 bool} setCurrentLayer(QCPLayer *layer);\par
3917   {\cf18 int} layerCount() {\cf17 const};\par
3918   {\cf18 bool} addLayer({\cf17 const} QString &name, QCPLayer *otherLayer={\cf17 nullptr}, LayerInsertMode insertMode=limAbove);\par
3919   {\cf18 bool} removeLayer(QCPLayer *layer);\par
3920   {\cf18 bool} moveLayer(QCPLayer *layer, QCPLayer *otherLayer, LayerInsertMode insertMode=limAbove);\par
3921   \par
3922   {\cf20 // axis rect/layout interface:}\par
3923   {\cf18 int} axisRectCount() {\cf17 const};\par
3924   QCPAxisRect* axisRect({\cf18 int} index=0) {\cf17 const};\par
3925   QList<QCPAxisRect*> axisRects() {\cf17 const};\par
3926   QCPLayoutElement* layoutElementAt({\cf17 const} QPointF &pos) {\cf17 const};\par
3927   QCPAxisRect* axisRectAt({\cf17 const} QPointF &pos) {\cf17 const};\par
3928   Q_SLOT {\cf18 void} rescaleAxes({\cf18 bool} onlyVisiblePlottables={\cf17 false});\par
3929   \par
3930   QList<QCPAxis*> selectedAxes() {\cf17 const};\par
3931   QList<QCPLegend*> selectedLegends() {\cf17 const};\par
3932   Q_SLOT {\cf18 void} deselectAll();\par
3933   \par
3934   {\cf18 bool} savePdf({\cf17 const} QString &fileName, {\cf18 int} width=0, {\cf18 int} height=0, QCP::ExportPen exportPen=QCP::epAllowCosmetic, {\cf17 const} QString &pdfCreator=QString(), {\cf17 const} QString &pdfTitle=QString());\par
3935   {\cf18 bool} savePng({\cf17 const} QString &fileName, {\cf18 int} width=0, {\cf18 int} height=0, {\cf18 double} scale=1.0, {\cf18 int} quality=-1, {\cf18 int} resolution=96, QCP::ResolutionUnit resolutionUnit=QCP::ruDotsPerInch);\par
3936   {\cf18 bool} saveJpg({\cf17 const} QString &fileName, {\cf18 int} width=0, {\cf18 int} height=0, {\cf18 double} scale=1.0, {\cf18 int} quality=-1, {\cf18 int} resolution=96, QCP::ResolutionUnit resolutionUnit=QCP::ruDotsPerInch);\par
3937   {\cf18 bool} saveBmp({\cf17 const} QString &fileName, {\cf18 int} width=0, {\cf18 int} height=0, {\cf18 double} scale=1.0, {\cf18 int} resolution=96, QCP::ResolutionUnit resolutionUnit=QCP::ruDotsPerInch);\par
3938   {\cf18 bool} saveRastered({\cf17 const} QString &fileName, {\cf18 int} width, {\cf18 int} height, {\cf18 double} scale, {\cf17 const} {\cf18 char} *format, {\cf18 int} quality=-1, {\cf18 int} resolution=96, QCP::ResolutionUnit resolutionUnit=QCP::ruDotsPerInch);\par
3939   QPixmap toPixmap({\cf18 int} width=0, {\cf18 int} height=0, {\cf18 double} scale=1.0);\par
3940   {\cf18 void} toPainter(QCPPainter *painter, {\cf18 int} width=0, {\cf18 int} height=0);\par
3941   Q_SLOT {\cf18 void} replot(QCustomPlot::RefreshPriority refreshPriority=QCustomPlot::rpRefreshHint);\par
3942   {\cf18 double} replotTime({\cf18 bool} average={\cf17 false}) {\cf17 const};\par
3943   \par
3944   QCPAxis *xAxis, *yAxis, *xAxis2, *yAxis2;\par
3945   QCPLegend *legend;\par
3946   \par
3947 signals:\par
3948   {\cf18 void} mouseDoubleClick(QMouseEvent *event);\par
3949   {\cf18 void} mousePress(QMouseEvent *event);\par
3950   {\cf18 void} mouseMove(QMouseEvent *event);\par
3951   {\cf18 void} mouseRelease(QMouseEvent *event);\par
3952   {\cf18 void} mouseWheel(QWheelEvent *event);\par
3953   \par
3954   {\cf18 void} plottableClick(QCPAbstractPlottable *plottable, {\cf18 int} dataIndex, QMouseEvent *event);\par
3955   {\cf18 void} plottableDoubleClick(QCPAbstractPlottable *plottable, {\cf18 int} dataIndex, QMouseEvent *event);\par
3956   {\cf18 void} itemClick(QCPAbstractItem *item, QMouseEvent *event);\par
3957   {\cf18 void} itemDoubleClick(QCPAbstractItem *item, QMouseEvent *event);\par
3958   {\cf18 void} axisClick(QCPAxis *axis, QCPAxis::SelectablePart part, QMouseEvent *event);\par
3959   {\cf18 void} axisDoubleClick(QCPAxis *axis, QCPAxis::SelectablePart part, QMouseEvent *event);\par
3960   {\cf18 void} legendClick(QCPLegend *legend, QCPAbstractLegendItem *item, QMouseEvent *event);\par
3961   {\cf18 void} legendDoubleClick(QCPLegend *legend,  QCPAbstractLegendItem *item, QMouseEvent *event);\par
3962   \par
3963   {\cf18 void} selectionChangedByUser();\par
3964   {\cf18 void} beforeReplot();\par
3965   {\cf18 void} afterLayout();\par
3966   {\cf18 void} afterReplot();\par
3967   \par
3968 {\cf17 protected}:\par
3969   {\cf20 // property members:}\par
3970   QRect mViewport;\par
3971   {\cf18 double} mBufferDevicePixelRatio;\par
3972   QCPLayoutGrid *mPlotLayout;\par
3973   {\cf18 bool} mAutoAddPlottableToLegend;\par
3974   QList<QCPAbstractPlottable*> mPlottables;\par
3975   QList<QCPGraph*> mGraphs; {\cf20 // extra list of plottables also in mPlottables that are of type QCPGraph}\par
3976   QList<QCPAbstractItem*> mItems;\par
3977   QList<QCPLayer*> mLayers;\par
3978   QCP::AntialiasedElements mAntialiasedElements, mNotAntialiasedElements;\par
3979   QCP::Interactions mInteractions;\par
3980   {\cf18 int} mSelectionTolerance;\par
3981   {\cf18 bool} mNoAntialiasingOnDrag;\par
3982   QBrush mBackgroundBrush;\par
3983   QPixmap mBackgroundPixmap;\par
3984   QPixmap mScaledBackgroundPixmap;\par
3985   {\cf18 bool} mBackgroundScaled;\par
3986   Qt::AspectRatioMode mBackgroundScaledMode;\par
3987   QCPLayer *mCurrentLayer;\par
3988   QCP::PlottingHints mPlottingHints;\par
3989   Qt::KeyboardModifier mMultiSelectModifier;\par
3990   QCP::SelectionRectMode mSelectionRectMode;\par
3991   QCPSelectionRect *mSelectionRect;\par
3992   {\cf18 bool} mOpenGl;\par
3993   \par
3994   {\cf20 // non-property members:}\par
3995   QList<QSharedPointer<QCPAbstractPaintBuffer> > mPaintBuffers;\par
3996   QPoint mMousePressPos;\par
3997   {\cf18 bool} mMouseHasMoved;\par
3998   QPointer<QCPLayerable> mMouseEventLayerable;\par
3999   QPointer<QCPLayerable> mMouseSignalLayerable;\par
4000   QVariant mMouseEventLayerableDetails;\par
4001   QVariant mMouseSignalLayerableDetails;\par
4002   {\cf18 bool} mReplotting;\par
4003   {\cf18 bool} mReplotQueued;\par
4004   {\cf18 double} mReplotTime, mReplotTimeAverage;\par
4005   {\cf18 int} mOpenGlMultisamples;\par
4006   QCP::AntialiasedElements mOpenGlAntialiasedElementsBackup;\par
4007   {\cf18 bool} mOpenGlCacheLabelsBackup;\par
4008 {\cf21 #ifdef QCP_OPENGL_FBO}\par
4009   QSharedPointer<QOpenGLContext> mGlContext;\par
4010   QSharedPointer<QSurface> mGlSurface;\par
4011   QSharedPointer<QOpenGLPaintDevice> mGlPaintDevice;\par
4012 {\cf21 #endif}\par
4013   \par
4014   {\cf20 // reimplemented virtual methods:}\par
4015   {\cf17 virtual} QSize minimumSizeHint() const Q_DECL_OVERRIDE;\par
4016   virtual QSize sizeHint() const Q_DECL_OVERRIDE;\par
4017   virtual {\cf18 void} paintEvent(QPaintEvent *event) Q_DECL_OVERRIDE;\par
4018   virtual {\cf18 void} resizeEvent(QResizeEvent *event) Q_DECL_OVERRIDE;\par
4019   virtual {\cf18 void} mouseDoubleClickEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\par
4020   virtual {\cf18 void} mousePressEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\par
4021   virtual {\cf18 void} mouseMoveEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\par
4022   virtual {\cf18 void} mouseReleaseEvent(QMouseEvent *event) Q_DECL_OVERRIDE;\par
4023   virtual {\cf18 void} wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\par
4024   \par
4025   {\cf20 // introduced virtual methods:}\par
4026   virtual {\cf18 void} draw(QCPPainter *painter);\par
4027   virtual {\cf18 void} updateLayout();\par
4028   virtual {\cf18 void} axisRemoved(QCPAxis *axis);\par
4029   virtual {\cf18 void} legendRemoved(QCPLegend *legend);\par
4030   Q_SLOT virtual {\cf18 void} processRectSelection(QRect rect, QMouseEvent *event);\par
4031   Q_SLOT virtual {\cf18 void} processRectZoom(QRect rect, QMouseEvent *event);\par
4032   Q_SLOT virtual {\cf18 void} processPointSelection(QMouseEvent *event);\par
4033   \par
4034   {\cf20 // non-virtual methods:}\par
4035   {\cf18 bool} registerPlottable(QCPAbstractPlottable *plottable);\par
4036   {\cf18 bool} registerGraph(QCPGraph *graph);\par
4037   {\cf18 bool} registerItem(QCPAbstractItem* item);\par
4038   {\cf18 void} updateLayerIndices() const;\par
4039   QCPLayerable *layerableAt(const QPointF &pos, {\cf18 bool} onlySelectable, QVariant *selectionDetails={\cf18 nullptr}) const;\par
4040   QList<QCPLayerable*> layerableListAt(const QPointF &pos, {\cf18 bool} onlySelectable, QList<QVariant> *selectionDetails={\cf18 nullptr}) const;\par
4041   {\cf18 void} drawBackground(QCPPainter *painter);\par
4042   {\cf18 void} setupPaintBuffers();\par
4043   QCPAbstractPaintBuffer *createPaintBuffer();\par
4044   {\cf18 bool} hasInvalidatedPaintBuffers();\par
4045   {\cf18 bool} setupOpenGl();\par
4046   {\cf18 void} freeOpenGl();\par
4047   \par
4048   friend class QCPLegend;\par
4049   friend class QCPAxis;\par
4050   friend class QCPLayer;\par
4051   friend class QCPAxisRect;\par
4052   friend class QCPAbstractPlottable;\par
4053   friend class QCPGraph;\par
4054   friend class QCPAbstractItem;\par
4055 \};\par
4056 Q_DECLARE_METATYPE(QCustomPlot::LayerInsertMode)\par
4057 Q_DECLARE_METATYPE(QCustomPlot::RefreshPriority)\par
4058 \par
4059 \par
4060 {\cf20 // implementation of template functions:}\par
4061 \par
4080 template<class PlottableType>\par
4081 PlottableType *QCustomPlot::plottableAt(const QPointF &pos, {\cf18 bool} onlySelectable, {\cf18 int} *dataIndex){\cf17  const}\par
4082 {\cf17 }\{\par
4083   PlottableType *resultPlottable = 0;\par
4084   QVariant resultDetails;\par
4085   {\cf18 double} resultDistance = mSelectionTolerance; {\cf20 // only regard clicks with distances smaller than mSelectionTolerance as selections, so initialize with that value}\par
4086   \par
4087   {\cf19 foreach} (QCPAbstractPlottable *plottable, mPlottables)\par
4088   \{\par
4089     PlottableType *currentPlottable = qobject_cast<PlottableType*>(plottable);\par
4090     {\cf19 if} (!currentPlottable || (onlySelectable && !currentPlottable->selectable())) {\cf20 // we could have also passed onlySelectable to the selectTest function, but checking here is faster, because we have access to QCPAbstractPlottable::selectable}\par
4091       {\cf19 continue};\par
4092     {\cf19 if} (currentPlottable->clipRect().contains(pos.toPoint())) {\cf20 // only consider clicks where the plottable is actually visible}\par
4093     \{\par
4094       QVariant details;\par
4095       {\cf18 double} currentDistance = currentPlottable->selectTest(pos, {\cf17 false}, dataIndex ? &details : {\cf17 nullptr});\par
4096       {\cf19 if} (currentDistance >= 0 && currentDistance < resultDistance)\par
4097       \{\par
4098         resultPlottable = currentPlottable;\par
4099         resultDetails = details;\par
4100         resultDistance = currentDistance;\par
4101       \}\par
4102     \}\par
4103   \}\par
4104   \par
4105   {\cf19 if} (resultPlottable && dataIndex)\par
4106   \{\par
4107     QCPDataSelection sel = resultDetails.value<QCPDataSelection>();\par
4108     {\cf19 if} (!sel.isEmpty())\par
4109       *dataIndex = sel.dataRange(0).begin();\par
4110   \}\par
4111   {\cf19 return} resultPlottable;\par
4112 \}\par
4113 \par
4127 {\cf17 template}<{\cf17 class} ItemType>\par
4128 ItemType *QCustomPlot::itemAt({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable){\cf17  const}\par
4129 {\cf17 }\{\par
4130   ItemType *resultItem = 0;\par
4131   {\cf18 double} resultDistance = mSelectionTolerance; {\cf20 // only regard clicks with distances smaller than mSelectionTolerance as selections, so initialize with that value}\par
4132   \par
4133   {\cf19 foreach} (QCPAbstractItem *item, mItems)\par
4134   \{\par
4135     ItemType *currentItem = qobject_cast<ItemType*>(item);\par
4136     {\cf19 if} (!currentItem || (onlySelectable && !currentItem->selectable())) {\cf20 // we could have also passed onlySelectable to the selectTest function, but checking here is faster, because we have access to QCPAbstractItem::selectable}\par
4137       {\cf19 continue};\par
4138     {\cf19 if} (!currentItem->clipToAxisRect() || currentItem->clipRect().contains(pos.toPoint())) {\cf20 // only consider clicks inside axis cliprect of the item if actually clipped to it}\par
4139     \{\par
4140       {\cf18 double} currentDistance = currentItem->selectTest(pos, {\cf17 false});\par
4141       {\cf19 if} (currentDistance >= 0 && currentDistance < resultDistance)\par
4142       \{\par
4143         resultItem = currentItem;\par
4144         resultDistance = currentDistance;\par
4145       \}\par
4146     \}\par
4147   \}\par
4148   \par
4149   {\cf19 return} resultItem;\par
4150 \}\par
4151 \par
4152 \par
4153 \par
4154 {\cf20 /* end of 'src/core.h' */}\par
4155 \par
4156 \par
4157 {\cf20 /* including file 'src/plottable1d.h'       */}\par
4158 {\cf20 /* modified 2022-11-06T12:45:56, size 25638 */}\par
4159 \par
4160 {\cf17 class }QCPPlottableInterface1D\par
4161 \{\par
4162 {\cf17 public}:\par
4163   {\cf17 virtual} ~QCPPlottableInterface1D() = {\cf19 default};\par
4164   {\cf20 // introduced pure virtual methods:}\par
4165   {\cf17 virtual} {\cf18 int} dataCount() {\cf17 const} = 0;\par
4166   {\cf17 virtual} {\cf18 double} dataMainKey({\cf18 int} index) {\cf17 const} = 0;\par
4167   {\cf17 virtual} {\cf18 double} dataSortKey({\cf18 int} index) {\cf17 const} = 0;\par
4168   {\cf17 virtual} {\cf18 double} dataMainValue({\cf18 int} index) {\cf17 const} = 0;\par
4169   {\cf17 virtual} QCPRange dataValueRange({\cf18 int} index) {\cf17 const} = 0;\par
4170   {\cf17 virtual} QPointF dataPixelPosition({\cf18 int} index) {\cf17 const} = 0;\par
4171   {\cf17 virtual} {\cf18 bool} sortKeyIsMainKey() {\cf17 const} = 0;\par
4172   {\cf17 virtual} QCPDataSelection selectTestRect({\cf17 const} QRectF &rect, {\cf18 bool} onlySelectable) {\cf17 const} = 0;\par
4173   {\cf17 virtual} {\cf18 int} findBegin({\cf18 double} sortKey, {\cf18 bool} expandedRange={\cf17 true}) {\cf17 const} = 0;\par
4174   {\cf17 virtual} {\cf18 int} findEnd({\cf18 double} sortKey, {\cf18 bool} expandedRange={\cf17 true}) {\cf17 const} = 0;\par
4175 \};\par
4176 \par
4177 {\cf17 template} <{\cf17 class} DataType>\par
4178 {\cf17 class }QCPAbstractPlottable1D : {\cf17 public} QCPAbstractPlottable, {\cf17 public} QCPPlottableInterface1D {\cf20 // no QCP_LIB_DECL, template class ends up in header (cpp included below)}\par
4179 \{\par
4180   {\cf20 // No Q_OBJECT macro due to template class}\par
4181   \par
4182 {\cf17 public}:\par
4183   QCPAbstractPlottable1D(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
4184   {\cf17 virtual} ~QCPAbstractPlottable1D() Q_DECL_OVERRIDE;\par
4185   \par
4186   {\cf20 // virtual methods of 1d plottable interface:}\par
4187   virtual {\cf18 int} dataCount() const Q_DECL_OVERRIDE;\par
4188   virtual {\cf18 double} dataMainKey({\cf18 int} index) const Q_DECL_OVERRIDE;\par
4189   virtual {\cf18 double} dataSortKey({\cf18 int} index) const Q_DECL_OVERRIDE;\par
4190   virtual {\cf18 double} dataMainValue({\cf18 int} index) const Q_DECL_OVERRIDE;\par
4191   virtual QCPRange dataValueRange({\cf18 int} index) const Q_DECL_OVERRIDE;\par
4192   virtual QPointF dataPixelPosition({\cf18 int} index) const Q_DECL_OVERRIDE;\par
4193   virtual {\cf18 bool} sortKeyIsMainKey() const Q_DECL_OVERRIDE;\par
4194   virtual QCPDataSelection selectTestRect(const QRectF &rect, {\cf18 bool} onlySelectable) const Q_DECL_OVERRIDE;\par
4195   virtual {\cf18 int} findBegin({\cf18 double} sortKey, {\cf18 bool} expandedRange=true) const Q_DECL_OVERRIDE;\par
4196   virtual {\cf18 int} findEnd({\cf18 double} sortKey, {\cf18 bool} expandedRange=true) const Q_DECL_OVERRIDE;\par
4197   \par
4198   {\cf20 // reimplemented virtual methods:}\par
4199   virtual {\cf18 double} selectTest(const QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf18 nullptr}) const Q_DECL_OVERRIDE;\par
4200   virtual QCPPlottableInterface1D *interface1D() Q_DECL_OVERRIDE \{ {\cf19 return} {\cf17 this}; \}\par
4201   \par
4202 {\cf17 protected}:\par
4203   {\cf20 // property members:}\par
4204   QSharedPointer<QCPDataContainer<DataType> > mDataContainer;\par
4205   \par
4206   {\cf20 // helpers for subclasses:}\par
4207   {\cf18 void} getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments) {\cf17 const};\par
4208   {\cf18 void} drawPolyline(QCPPainter *painter, {\cf17 const} QVector<QPointF> &lineData) {\cf17 const};\par
4209 \par
4210 {\cf17 private}:\par
4211   Q_DISABLE_COPY(QCPAbstractPlottable1D)\par
4212   \par
4213 \};\par
4214 \par
4215 \par
4216 \par
4217 {\cf20 // include implementation in header since it is a class template:}\par
4221 \par
4245 {\cf20 /* start documentation of pure virtual functions */}\par
4246 \par
4356 {\cf20 /* end documentation of pure virtual functions */}\par
4357 \par
4358 \par
4362 \par
4387 {\cf20 /* start documentation of inline functions */}\par
4388 \par
4397 {\cf20 /* end documentation of inline functions */}\par
4398 \par
4403 {\cf17 template} <{\cf17 class} DataType>\par
4404 QCPAbstractPlottable1D<DataType>::QCPAbstractPlottable1D(QCPAxis *keyAxis, QCPAxis *valueAxis) :\par
4405   QCPAbstractPlottable(keyAxis, valueAxis),\par
4406   mDataContainer(new QCPDataContainer<DataType>)\par
4407 \{\par
4408 \}\par
4409 \par
4410 {\cf17 template} <{\cf17 class} DataType>\par
4411 QCPAbstractPlottable1D<DataType>::~QCPAbstractPlottable1D()\par
4412 \{\par
4413 \}\par
4414 \par
4418 {\cf17 template} <{\cf17 class} DataType>\par
4419 {\cf18 int} QCPAbstractPlottable1D<DataType>::dataCount(){\cf17  const}\par
4420 {\cf17 }\{\par
4421   {\cf19 return} mDataContainer->size();\par
4422 \}\par
4423 \par
4427 {\cf17 template} <{\cf17 class} DataType>\par
4428 {\cf18 double} QCPAbstractPlottable1D<DataType>::dataMainKey({\cf18 int} index){\cf17  const}\par
4429 {\cf17 }\{\par
4430   {\cf19 if} (index >= 0 && index < mDataContainer->size())\par
4431   \{\par
4432     {\cf19 return} (mDataContainer->constBegin()+index)->mainKey();\par
4433   \} {\cf19 else}\par
4434   \{\par
4435     qDebug() << Q_FUNC_INFO << {\cf22 "Index out of bounds"} << index;\par
4436     {\cf19 return} 0;\par
4437   \}\par
4438 \}\par
4439 \par
4443 {\cf17 template} <{\cf17 class} DataType>\par
4444 {\cf18 double} QCPAbstractPlottable1D<DataType>::dataSortKey({\cf18 int} index){\cf17  const}\par
4445 {\cf17 }\{\par
4446   {\cf19 if} (index >= 0 && index < mDataContainer->size())\par
4447   \{\par
4448     {\cf19 return} (mDataContainer->constBegin()+index)->sortKey();\par
4449   \} {\cf19 else}\par
4450   \{\par
4451     qDebug() << Q_FUNC_INFO << {\cf22 "Index out of bounds"} << index;\par
4452     {\cf19 return} 0;\par
4453   \}\par
4454 \}\par
4455 \par
4459 {\cf17 template} <{\cf17 class} DataType>\par
4460 {\cf18 double} QCPAbstractPlottable1D<DataType>::dataMainValue({\cf18 int} index){\cf17  const}\par
4461 {\cf17 }\{\par
4462   {\cf19 if} (index >= 0 && index < mDataContainer->size())\par
4463   \{\par
4464     {\cf19 return} (mDataContainer->constBegin()+index)->mainValue();\par
4465   \} {\cf19 else}\par
4466   \{\par
4467     qDebug() << Q_FUNC_INFO << {\cf22 "Index out of bounds"} << index;\par
4468     {\cf19 return} 0;\par
4469   \}\par
4470 \}\par
4471 \par
4475 {\cf17 template} <{\cf17 class} DataType>\par
4476 QCPRange QCPAbstractPlottable1D<DataType>::dataValueRange({\cf18 int} index){\cf17  const}\par
4477 {\cf17 }\{\par
4478   {\cf19 if} (index >= 0 && index < mDataContainer->size())\par
4479   \{\par
4480     {\cf19 return} (mDataContainer->constBegin()+index)->valueRange();\par
4481   \} {\cf19 else}\par
4482   \{\par
4483     qDebug() << Q_FUNC_INFO << {\cf22 "Index out of bounds"} << index;\par
4484     {\cf19 return} QCPRange(0, 0);\par
4485   \}\par
4486 \}\par
4487 \par
4491 {\cf17 template} <{\cf17 class} DataType>\par
4492 QPointF QCPAbstractPlottable1D<DataType>::dataPixelPosition({\cf18 int} index){\cf17  const}\par
4493 {\cf17 }\{\par
4494   {\cf19 if} (index >= 0 && index < mDataContainer->size())\par
4495   \{\par
4496     {\cf17 const} {\cf17 typename} QCPDataContainer<DataType>::const_iterator it = mDataContainer->constBegin()+index;\par
4497     {\cf19 return} coordsToPixels(it->mainKey(), it->mainValue());\par
4498   \} {\cf19 else}\par
4499   \{\par
4500     qDebug() << Q_FUNC_INFO << {\cf22 "Index out of bounds"} << index;\par
4501     {\cf19 return} QPointF();\par
4502   \}\par
4503 \}\par
4504 \par
4508 {\cf17 template} <{\cf17 class} DataType>\par
4509 {\cf18 bool} QCPAbstractPlottable1D<DataType>::sortKeyIsMainKey(){\cf17  const}\par
4510 {\cf17 }\{\par
4511   {\cf19 return} DataType::sortKeyIsMainKey();\par
4512 \}\par
4513 \par
4521 {\cf17 template} <{\cf17 class} DataType>\par
4522 QCPDataSelection QCPAbstractPlottable1D<DataType>::selectTestRect({\cf17 const} QRectF &rect, {\cf18 bool} onlySelectable){\cf17  const}\par
4523 {\cf17 }\{\par
4524   QCPDataSelection result;\par
4525   {\cf19 if} ((onlySelectable && mSelectable == QCP::stNone) || mDataContainer->isEmpty())\par
4526     {\cf19 return} result;\par
4527   {\cf19 if} (!mKeyAxis || !mValueAxis)\par
4528     {\cf19 return} result;\par
4529   \par
4530   {\cf20 // convert rect given in pixels to ranges given in plot coordinates:}\par
4531   {\cf18 double} key1, value1, key2, value2;\par
4532   pixelsToCoords(rect.topLeft(), key1, value1);\par
4533   pixelsToCoords(rect.bottomRight(), key2, value2);\par
4534   QCPRange keyRange(key1, key2); {\cf20 // QCPRange normalizes internally so we don't have to care about whether key1 < key2}\par
4535   QCPRange valueRange(value1, value2);\par
4536   {\cf17 typename} QCPDataContainer<DataType>::const_iterator begin = mDataContainer->constBegin();\par
4537   {\cf17 typename} QCPDataContainer<DataType>::const_iterator end = mDataContainer->constEnd();\par
4538   {\cf19 if} (DataType::sortKeyIsMainKey()) {\cf20 // we can assume that data is sorted by main key, so can reduce the searched key interval:}\par
4539   \{\par
4540     begin = mDataContainer->findBegin(keyRange.lower, {\cf17 false});\par
4541     end = mDataContainer->findEnd(keyRange.upper, {\cf17 false});\par
4542   \}\par
4543   {\cf19 if} (begin == end)\par
4544     {\cf19 return} result;\par
4545   \par
4546   {\cf18 int} currentSegmentBegin = -1; {\cf20 // -1 means we're currently not in a segment that's contained in rect}\par
4547   {\cf19 for} ({\cf17 typename} QCPDataContainer<DataType>::const_iterator it=begin; it!=end; ++it)\par
4548   \{\par
4549     {\cf19 if} (currentSegmentBegin == -1)\par
4550     \{\par
4551       {\cf19 if} (valueRange.contains(it->mainValue()) && keyRange.contains(it->mainKey())) {\cf20 // start segment}\par
4552         currentSegmentBegin = int(it-mDataContainer->constBegin());\par
4553     \} {\cf19 else} {\cf19 if} (!valueRange.contains(it->mainValue()) || !keyRange.contains(it->mainKey())) {\cf20 // segment just ended}\par
4554     \{\par
4555       result.addDataRange(QCPDataRange(currentSegmentBegin, {\cf18 int}(it-mDataContainer->constBegin())), {\cf17 false});\par
4556       currentSegmentBegin = -1;\par
4557     \}\par
4558   \}\par
4559   {\cf20 // process potential last segment:}\par
4560   {\cf19 if} (currentSegmentBegin != -1)\par
4561     result.addDataRange(QCPDataRange(currentSegmentBegin, {\cf18 int}(end-mDataContainer->constBegin())), {\cf17 false});\par
4562   \par
4563   result.simplify();\par
4564   {\cf19 return} result;\par
4565 \}\par
4566 \par
4570 {\cf17 template} <{\cf17 class} DataType>\par
4571 {\cf18 int} QCPAbstractPlottable1D<DataType>::findBegin({\cf18 double} sortKey, {\cf18 bool} expandedRange){\cf17  const}\par
4572 {\cf17 }\{\par
4573   {\cf19 return} int(mDataContainer->findBegin(sortKey, expandedRange)-mDataContainer->constBegin());\par
4574 \}\par
4575 \par
4579 {\cf17 template} <{\cf17 class} DataType>\par
4580 {\cf18 int} QCPAbstractPlottable1D<DataType>::findEnd({\cf18 double} sortKey, {\cf18 bool} expandedRange){\cf17  const}\par
4581 {\cf17 }\{\par
4582   {\cf19 return} int(mDataContainer->findEnd(sortKey, expandedRange)-mDataContainer->constBegin());\par
4583 \}\par
4584 \par
4595 {\cf17 template} <{\cf17 class} DataType>\par
4596 {\cf18 double} QCPAbstractPlottable1D<DataType>::selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details){\cf17  const}\par
4597 {\cf17 }\{\par
4598   {\cf19 if} ((onlySelectable && mSelectable == QCP::stNone) || mDataContainer->isEmpty())\par
4599     {\cf19 return} -1;\par
4600   {\cf19 if} (!mKeyAxis || !mValueAxis)\par
4601     {\cf19 return} -1;\par
4602   \par
4603   QCPDataSelection selectionResult;\par
4604   {\cf18 double} minDistSqr = (std::numeric_limits<double>::max)();\par
4605   {\cf18 int} minDistIndex = mDataContainer->size();\par
4606   \par
4607   {\cf17 typename} QCPDataContainer<DataType>::const_iterator begin = mDataContainer->constBegin();\par
4608   {\cf17 typename} QCPDataContainer<DataType>::const_iterator end = mDataContainer->constEnd();\par
4609   {\cf19 if} (DataType::sortKeyIsMainKey()) {\cf20 // we can assume that data is sorted by main key, so can reduce the searched key interval:}\par
4610   \{\par
4611     {\cf20 // determine which key range comes into question, taking selection tolerance around pos into account:}\par
4612     {\cf18 double} posKeyMin, posKeyMax, dummy;\par
4613     pixelsToCoords(pos-QPointF(mParentPlot->selectionTolerance(), mParentPlot->selectionTolerance()), posKeyMin, dummy);\par
4614     pixelsToCoords(pos+QPointF(mParentPlot->selectionTolerance(), mParentPlot->selectionTolerance()), posKeyMax, dummy);\par
4615     {\cf19 if} (posKeyMin > posKeyMax)\par
4616       qSwap(posKeyMin, posKeyMax);\par
4617     begin = mDataContainer->findBegin(posKeyMin, {\cf17 true});\par
4618     end = mDataContainer->findEnd(posKeyMax, {\cf17 true});\par
4619   \}\par
4620   {\cf19 if} (begin == end)\par
4621     {\cf19 return} -1;\par
4622   QCPRange keyRange(mKeyAxis->range());\par
4623   QCPRange valueRange(mValueAxis->range());\par
4624   {\cf19 for} ({\cf17 typename} QCPDataContainer<DataType>::const_iterator it=begin; it!=end; ++it)\par
4625   \{\par
4626     {\cf17 const} {\cf18 double} mainKey = it->mainKey();\par
4627     {\cf17 const} {\cf18 double} mainValue = it->mainValue();\par
4628     {\cf19 if} (keyRange.contains(mainKey) && valueRange.contains(mainValue)) {\cf20 // make sure data point is inside visible range, for speedup in cases where sort key isn't main key and we iterate over all points}\par
4629     \{\par
4630       {\cf17 const} {\cf18 double} currentDistSqr = QCPVector2D(coordsToPixels(mainKey, mainValue)-pos).lengthSquared();\par
4631       {\cf19 if} (currentDistSqr < minDistSqr)\par
4632       \{\par
4633         minDistSqr = currentDistSqr;\par
4634         minDistIndex = int(it-mDataContainer->constBegin());\par
4635       \}\par
4636     \}\par
4637   \}\par
4638   {\cf19 if} (minDistIndex != mDataContainer->size())\par
4639     selectionResult.addDataRange(QCPDataRange(minDistIndex, minDistIndex+1), {\cf17 false});\par
4640   \par
4641   selectionResult.simplify();\par
4642   {\cf19 if} (details)\par
4643     details->setValue(selectionResult);\par
4644   {\cf19 return} qSqrt(minDistSqr);\par
4645 \}\par
4646 \par
4657 {\cf17 template} <{\cf17 class} DataType>\par
4658 {\cf18 void} QCPAbstractPlottable1D<DataType>::getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments){\cf17  const}\par
4659 {\cf17 }\{\par
4660   selectedSegments.clear();\par
4661   unselectedSegments.clear();\par
4662   {\cf19 if} (mSelectable == QCP::stWhole) {\cf20 // stWhole selection type draws the entire plottable with selected style if mSelection isn't empty}\par
4663   \{\par
4664     {\cf19 if} (selected())\par
4665       selectedSegments << QCPDataRange(0, dataCount());\par
4666     {\cf19 else}\par
4667       unselectedSegments << QCPDataRange(0, dataCount());\par
4668   \} {\cf19 else}\par
4669   \{\par
4670     QCPDataSelection sel(selection());\par
4671     sel.simplify();\par
4672     selectedSegments = sel.dataRanges();\par
4673     unselectedSegments = sel.inverse(QCPDataRange(0, dataCount())).dataRanges();\par
4674   \}\par
4675 \}\par
4676 \par
4687 {\cf17 template} <{\cf17 class} DataType>\par
4688 {\cf18 void} QCPAbstractPlottable1D<DataType>::drawPolyline(QCPPainter *painter, {\cf17 const} QVector<QPointF> &lineData){\cf17  const}\par
4689 {\cf17 }\{\par
4690   {\cf20 // if drawing lines in plot (instead of PDF), reduce 1px lines to cosmetic, because at least in}\par
4691   {\cf20 // Qt6 drawing of "1px" width lines is much slower even though it has same appearance apart from}\par
4692   {\cf20 // High-DPI. In High-DPI cases people must set a pen width slightly larger than 1.0 to get}\par
4693   {\cf20 // correct DPI scaling of width, but of course with performance penalty.}\par
4694   {\cf19 if} (!painter->modes().testFlag(QCPPainter::pmVectorized) &&\par
4695       qFuzzyCompare(painter->pen().widthF(), 1.0))\par
4696   \{\par
4697     QPen newPen = painter->pen();\par
4698     newPen.setWidth(0);\par
4699     painter->setPen(newPen);\par
4700   \}\par
4701 \par
4702   {\cf20 // if drawing solid line and not in PDF, use much faster line drawing instead of polyline:}\par
4703   {\cf19 if} (mParentPlot->plottingHints().testFlag(QCP::phFastPolylines) &&\par
4704       painter->pen().style() == Qt::SolidLine &&\par
4705       !painter->modes().testFlag(QCPPainter::pmVectorized) &&\par
4706       !painter->modes().testFlag(QCPPainter::pmNoCaching))\par
4707   \{\par
4708     {\cf18 int} i = 0;\par
4709     {\cf18 bool} lastIsNan = {\cf17 false};\par
4710     {\cf17 const} {\cf18 int} lineDataSize = lineData.size();\par
4711     {\cf19 while} (i < lineDataSize && (qIsNaN(lineData.at(i).y()) || qIsNaN(lineData.at(i).x()))) {\cf20 // make sure first point is not NaN}\par
4712       ++i;\par
4713     ++i; {\cf20 // because drawing works in 1 point retrospect}\par
4714     {\cf19 while} (i < lineDataSize)\par
4715     \{\par
4716       {\cf19 if} (!qIsNaN(lineData.at(i).y()) && !qIsNaN(lineData.at(i).x())) {\cf20 // NaNs create a gap in the line}\par
4717       \{\par
4718         {\cf19 if} (!lastIsNan)\par
4719           painter->drawLine(lineData.at(i-1), lineData.at(i));\par
4720         {\cf19 else}\par
4721           lastIsNan = {\cf17 false};\par
4722       \} {\cf19 else}\par
4723         lastIsNan = {\cf17 true};\par
4724       ++i;\par
4725     \}\par
4726   \} {\cf19 else}\par
4727   \{\par
4728     {\cf18 int} segmentStart = 0;\par
4729     {\cf18 int} i = 0;\par
4730     {\cf17 const} {\cf18 int} lineDataSize = lineData.size();\par
4731     {\cf19 while} (i < lineDataSize)\par
4732     \{\par
4733       {\cf19 if} (qIsNaN(lineData.at(i).y()) || qIsNaN(lineData.at(i).x()) || qIsInf(lineData.at(i).y())) {\cf20 // NaNs create a gap in the line. Also filter Infs which make drawPolyline block}\par
4734       \{\par
4735         painter->drawPolyline(lineData.constData()+segmentStart, i-segmentStart); {\cf20 // i, because we don't want to include the current NaN point}\par
4736         segmentStart = i+1;\par
4737       \}\par
4738       ++i;\par
4739     \}\par
4740     {\cf20 // draw last segment:}\par
4741     painter->drawPolyline(lineData.constData()+segmentStart, lineDataSize-segmentStart);\par
4742   \}\par
4743 \}\par
4744 \par
4745 \par
4746 {\cf20 /* end of 'src/plottable1d.h' */}\par
4747 \par
4748 \par
4749 {\cf20 /* including file 'src/colorgradient.h'    */}\par
4750 {\cf20 /* modified 2022-11-06T12:45:56, size 7262 */}\par
4751 \par
4752 {\cf17 class }QCP_LIB_DECL QCPColorGradient\par
4753 \{\par
4754   Q_GADGET\par
4755 {\cf17 public}:\par
4761   {\cf17 enum} ColorInterpolation \{ ciRGB  \par
4762                             ,ciHSV \par
4763                           \};\par
4764   Q_ENUMS(ColorInterpolation)\par
4765   \par
4766   \par
4771   enum NanHandling \{ nhNone \par
4772                      ,nhLowestColor  \par
4773                      ,nhHighestColor \par
4774                      ,nhTransparent \par
4775                      ,nhNanColor \par
4776                    \};\par
4777   Q_ENUMS(NanHandling)\par
4778   \par
4779   \par
4783   enum GradientPreset \{ gpGrayscale  \par
4784                         ,gpHot       \par
4785                         ,gpCold      \par
4786                         ,gpNight     \par
4787                         ,gpCandy     \par
4788                         ,gpGeography \par
4789                         ,gpIon       \par
4790                         ,gpThermal   \par
4791                         ,gpPolar     \par
4792                         ,gpSpectrum  \par
4793                         ,gpJet       \par
4794                         ,gpHues      \par
4795                       \};\par
4796   Q_ENUMS(GradientPreset)\par
4797   \par
4798   QCPColorGradient();\par
4799   QCPColorGradient(GradientPreset preset);\par
4800   {\cf18 bool} operator==(const QCPColorGradient &other) const;\par
4801   {\cf18 bool} operator!=(const QCPColorGradient &other){\cf17  const }\{ {\cf19 return} !(*{\cf17 this} == other); \}\par
4802   \par
4803   {\cf20 // getters:}\par
4804   {\cf18 int} levelCount(){\cf17  const }\{ {\cf19 return} mLevelCount; \}\par
4805   QMap<double, QColor> colorStops(){\cf17  const }\{ {\cf19 return} mColorStops; \}\par
4806   ColorInterpolation colorInterpolation(){\cf17  const }\{ {\cf19 return} mColorInterpolation; \}\par
4807   NanHandling nanHandling(){\cf17  const }\{ {\cf19 return} mNanHandling; \}\par
4808   QColor nanColor(){\cf17  const }\{ {\cf19 return} mNanColor; \}\par
4809   {\cf18 bool} periodic(){\cf17  const }\{ {\cf19 return} mPeriodic; \}\par
4810   \par
4811   {\cf20 // setters:}\par
4812   {\cf18 void} setLevelCount({\cf18 int} n);\par
4813   {\cf18 void} setColorStops({\cf17 const} QMap<double, QColor> &colorStops);\par
4814   {\cf18 void} setColorStopAt({\cf18 double} position, {\cf17 const} QColor &color);\par
4815   {\cf18 void} setColorInterpolation(ColorInterpolation interpolation);\par
4816   {\cf18 void} setNanHandling(NanHandling handling);\par
4817   {\cf18 void} setNanColor({\cf17 const} QColor &color);\par
4818   {\cf18 void} setPeriodic({\cf18 bool} enabled);\par
4819   \par
4820   {\cf20 // non-property methods:}\par
4821   {\cf18 void} colorize({\cf17 const} {\cf18 double} *data, {\cf17 const} QCPRange &range, QRgb *scanLine, {\cf18 int} n, {\cf18 int} dataIndexFactor=1, {\cf18 bool} logarithmic={\cf17 false});\par
4822   {\cf18 void} colorize({\cf17 const} {\cf18 double} *data, {\cf17 const} {\cf18 unsigned} {\cf18 char} *alpha, {\cf17 const} QCPRange &range, QRgb *scanLine, {\cf18 int} n, {\cf18 int} dataIndexFactor=1, {\cf18 bool} logarithmic={\cf17 false});\par
4823   QRgb color({\cf18 double} position, {\cf17 const} QCPRange &range, {\cf18 bool} logarithmic={\cf17 false});\par
4824   {\cf18 void} loadPreset(GradientPreset preset);\par
4825   {\cf18 void} clearColorStops();\par
4826   QCPColorGradient inverted() {\cf17 const};\par
4827   \par
4828 {\cf17 protected}:\par
4829   {\cf20 // property members:}\par
4830   {\cf18 int} mLevelCount;\par
4831   QMap<double, QColor> mColorStops;\par
4832   ColorInterpolation mColorInterpolation;\par
4833   NanHandling mNanHandling;\par
4834   QColor mNanColor;\par
4835   {\cf18 bool} mPeriodic;\par
4836   \par
4837   {\cf20 // non-property members:}\par
4838   QVector<QRgb> mColorBuffer; {\cf20 // have colors premultiplied with alpha (for usage with QImage::Format_ARGB32_Premultiplied)}\par
4839   {\cf18 bool} mColorBufferInvalidated;\par
4840   \par
4841   {\cf20 // non-virtual methods:}\par
4842   {\cf18 bool} stopsUseAlpha() {\cf17 const};\par
4843   {\cf18 void} updateColorBuffer();\par
4844 \};\par
4845 Q_DECLARE_METATYPE(QCPColorGradient::ColorInterpolation)\par
4846 Q_DECLARE_METATYPE(QCPColorGradient::NanHandling)\par
4847 Q_DECLARE_METATYPE(QCPColorGradient::GradientPreset)\par
4848 \par
4849 {\cf20 /* end of 'src/colorgradient.h' */}\par
4850 \par
4851 \par
4852 {\cf20 /* including file 'src/selectiondecorator-bracket.h' */}\par
4853 {\cf20 /* modified 2022-11-06T12:45:56, size 4458           */}\par
4854 \par
4855 class QCP_LIB_DECL QCPSelectionDecoratorBracket : public QCPSelectionDecorator\par
4856 \{\par
4857   Q_GADGET\par
4858 {\cf17 public}:\par
4859   \par
4866   {\cf17 enum} BracketStyle \{ bsSquareBracket \par
4867                       ,bsHalfEllipse   \par
4868                       ,bsEllipse       \par
4869                       ,bsPlus         \par
4870                       ,bsUserStyle    \par
4871   \};\par
4872   Q_ENUMS(BracketStyle)\par
4873   \par
4874   QCPSelectionDecoratorBracket();\par
4875   virtual ~QCPSelectionDecoratorBracket() Q_DECL_OVERRIDE;\par
4876   \par
4877   {\cf20 // getters:}\par
4878   QPen bracketPen(){\cf17  const }\{ {\cf19 return} mBracketPen; \}\par
4879   QBrush bracketBrush(){\cf17  const }\{ {\cf19 return} mBracketBrush; \}\par
4880   {\cf18 int} bracketWidth(){\cf17  const }\{ {\cf19 return} mBracketWidth; \}\par
4881   {\cf18 int} bracketHeight(){\cf17  const }\{ {\cf19 return} mBracketHeight; \}\par
4882   BracketStyle bracketStyle(){\cf17  const }\{ {\cf19 return} mBracketStyle; \}\par
4883   {\cf18 bool} tangentToData(){\cf17  const }\{ {\cf19 return} mTangentToData; \}\par
4884   {\cf18 int} tangentAverage(){\cf17  const }\{ {\cf19 return} mTangentAverage; \}\par
4885   \par
4886   {\cf20 // setters:}\par
4887   {\cf18 void} setBracketPen({\cf17 const} QPen &pen);\par
4888   {\cf18 void} setBracketBrush({\cf17 const} QBrush &brush);\par
4889   {\cf18 void} setBracketWidth({\cf18 int} width);\par
4890   {\cf18 void} setBracketHeight({\cf18 int} height);\par
4891   {\cf18 void} setBracketStyle(BracketStyle style);\par
4892   {\cf18 void} setTangentToData({\cf18 bool} enabled);\par
4893   {\cf18 void} setTangentAverage({\cf18 int} pointCount);\par
4894   \par
4895   {\cf20 // introduced virtual methods:}\par
4896   {\cf17 virtual} {\cf18 void} drawBracket(QCPPainter *painter, {\cf18 int} direction) {\cf17 const};\par
4897   \par
4898   {\cf20 // virtual methods:}\par
4899   {\cf17 virtual} {\cf18 void} drawDecoration(QCPPainter *painter, QCPDataSelection selection) Q_DECL_OVERRIDE;\par
4900   \par
4901 {\cf17 protected}:\par
4902   {\cf20 // property members:}\par
4903   QPen mBracketPen;\par
4904   QBrush mBracketBrush;\par
4905   {\cf18 int} mBracketWidth;\par
4906   {\cf18 int} mBracketHeight;\par
4907   BracketStyle mBracketStyle;\par
4908   {\cf18 bool} mTangentToData;\par
4909   {\cf18 int} mTangentAverage;\par
4910   \par
4911   {\cf20 // non-virtual methods:}\par
4912   {\cf18 double} getTangentAngle({\cf17 const} QCPPlottableInterface1D *interface1d, {\cf18 int} dataIndex, {\cf18 int} direction) {\cf17 const};\par
4913   QPointF getPixelCoordinates({\cf17 const} QCPPlottableInterface1D *interface1d, {\cf18 int} dataIndex) {\cf17 const};\par
4914   \par
4915 \};\par
4916 Q_DECLARE_METATYPE(QCPSelectionDecoratorBracket::BracketStyle)\par
4917 \par
4918 {\cf20 /* end of 'src/selectiondecorator-bracket.h' */}\par
4919 \par
4920 \par
4921 {\cf20 /* including file 'src/layoutelements/layoutelement-axisrect.h' */}\par
4922 {\cf20 /* modified 2022-11-06T12:45:56, size 7529                      */}\par
4923 \par
4924 class QCP_LIB_DECL QCPAxisRect : public QCPLayoutElement\par
4925 \{\par
4926   Q_OBJECT\par
4928   Q_PROPERTY(QPixmap background READ background WRITE setBackground)\par
4929   Q_PROPERTY({\cf18 bool} backgroundScaled READ backgroundScaled WRITE setBackgroundScaled)\par
4930   Q_PROPERTY(Qt::AspectRatioMode backgroundScaledMode READ backgroundScaledMode WRITE setBackgroundScaledMode)\par
4931   Q_PROPERTY(Qt::Orientations rangeDrag READ rangeDrag WRITE setRangeDrag)\par
4932   Q_PROPERTY(Qt::Orientations rangeZoom READ rangeZoom WRITE setRangeZoom)\par
4934 {\cf17 public}:\par
4935   {\cf17 explicit} QCPAxisRect(QCustomPlot *parentPlot, {\cf18 bool} setupDefaultAxes={\cf17 true});\par
4936   {\cf17 virtual} ~QCPAxisRect() Q_DECL_OVERRIDE;\par
4937   \par
4938   {\cf20 // getters:}\par
4939   QPixmap background(){\cf17  const }\{ {\cf19 return} mBackgroundPixmap; \}\par
4940   QBrush backgroundBrush(){\cf17  const }\{ {\cf19 return} mBackgroundBrush; \}\par
4941   {\cf18 bool} backgroundScaled(){\cf17  const }\{ {\cf19 return} mBackgroundScaled; \}\par
4942   Qt::AspectRatioMode backgroundScaledMode(){\cf17  const }\{ {\cf19 return} mBackgroundScaledMode; \}\par
4943   Qt::Orientations rangeDrag(){\cf17  const }\{ {\cf19 return} mRangeDrag; \}\par
4944   Qt::Orientations rangeZoom(){\cf17  const }\{ {\cf19 return} mRangeZoom; \}\par
4945   QCPAxis *rangeDragAxis(Qt::Orientation orientation);\par
4946   QCPAxis *rangeZoomAxis(Qt::Orientation orientation);\par
4947   QList<QCPAxis*> rangeDragAxes(Qt::Orientation orientation);\par
4948   QList<QCPAxis*> rangeZoomAxes(Qt::Orientation orientation);\par
4949   {\cf18 double} rangeZoomFactor(Qt::Orientation orientation);\par
4950   \par
4951   {\cf20 // setters:}\par
4952   {\cf18 void} setBackground({\cf17 const} QPixmap &pm);\par
4953   {\cf18 void} setBackground({\cf17 const} QPixmap &pm, {\cf18 bool} scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding);\par
4954   {\cf18 void} setBackground({\cf17 const} QBrush &brush);\par
4955   {\cf18 void} setBackgroundScaled({\cf18 bool} scaled);\par
4956   {\cf18 void} setBackgroundScaledMode(Qt::AspectRatioMode mode);\par
4957   {\cf18 void} setRangeDrag(Qt::Orientations orientations);\par
4958   {\cf18 void} setRangeZoom(Qt::Orientations orientations);\par
4959   {\cf18 void} setRangeDragAxes(QCPAxis *horizontal, QCPAxis *vertical);\par
4960   {\cf18 void} setRangeDragAxes(QList<QCPAxis*> axes);\par
4961   {\cf18 void} setRangeDragAxes(QList<QCPAxis*> horizontal, QList<QCPAxis*> vertical);\par
4962   {\cf18 void} setRangeZoomAxes(QCPAxis *horizontal, QCPAxis *vertical);\par
4963   {\cf18 void} setRangeZoomAxes(QList<QCPAxis*> axes);\par
4964   {\cf18 void} setRangeZoomAxes(QList<QCPAxis*> horizontal, QList<QCPAxis*> vertical);\par
4965   {\cf18 void} setRangeZoomFactor({\cf18 double} horizontalFactor, {\cf18 double} verticalFactor);\par
4966   {\cf18 void} setRangeZoomFactor({\cf18 double} factor);\par
4967   \par
4968   {\cf20 // non-property methods:}\par
4969   {\cf18 int} axisCount(QCPAxis::AxisType type) {\cf17 const};\par
4970   QCPAxis *axis(QCPAxis::AxisType type, {\cf18 int} index=0) {\cf17 const};\par
4971   QList<QCPAxis*> axes(QCPAxis::AxisTypes types) {\cf17 const};\par
4972   QList<QCPAxis*> axes() {\cf17 const};\par
4973   QCPAxis *addAxis(QCPAxis::AxisType type, QCPAxis *axis={\cf17 nullptr});\par
4974   QList<QCPAxis*> addAxes(QCPAxis::AxisTypes types);\par
4975   {\cf18 bool} removeAxis(QCPAxis *axis);\par
4976   QCPLayoutInset *insetLayout(){\cf17  const }\{ {\cf19 return} mInsetLayout; \}\par
4977   \par
4978   {\cf18 void} zoom({\cf17 const} QRectF &pixelRect);\par
4979   {\cf18 void} zoom({\cf17 const} QRectF &pixelRect, {\cf17 const} QList<QCPAxis*> &affectedAxes);\par
4980   {\cf18 void} setupFullAxesBox({\cf18 bool} connectRanges={\cf17 false});\par
4981   QList<QCPAbstractPlottable*> plottables() {\cf17 const};\par
4982   QList<QCPGraph*> graphs() {\cf17 const};\par
4983   QList<QCPAbstractItem*> items() {\cf17 const};\par
4984   \par
4985   {\cf20 // read-only interface imitating a QRect:}\par
4986   {\cf18 int} left(){\cf17  const }\{ {\cf19 return} mRect.left(); \}\par
4987   {\cf18 int} right(){\cf17  const }\{ {\cf19 return} mRect.right(); \}\par
4988   {\cf18 int} top(){\cf17  const }\{ {\cf19 return} mRect.top(); \}\par
4989   {\cf18 int} bottom(){\cf17  const }\{ {\cf19 return} mRect.bottom(); \}\par
4990   {\cf18 int} width(){\cf17  const }\{ {\cf19 return} mRect.width(); \}\par
4991   {\cf18 int} height(){\cf17  const }\{ {\cf19 return} mRect.height(); \}\par
4992   QSize size(){\cf17  const }\{ {\cf19 return} mRect.size(); \}\par
4993   QPoint topLeft(){\cf17  const }\{ {\cf19 return} mRect.topLeft(); \}\par
4994   QPoint topRight(){\cf17  const }\{ {\cf19 return} mRect.topRight(); \}\par
4995   QPoint bottomLeft(){\cf17  const }\{ {\cf19 return} mRect.bottomLeft(); \}\par
4996   QPoint bottomRight(){\cf17  const }\{ {\cf19 return} mRect.bottomRight(); \}\par
4997   QPoint center(){\cf17  const }\{ {\cf19 return} mRect.center(); \}\par
4998   \par
4999   {\cf20 // reimplemented virtual methods:}\par
5000   {\cf17 virtual} {\cf18 void} update(UpdatePhase phase) Q_DECL_OVERRIDE;\par
5001   {\cf17 virtual} QList<QCPLayoutElement*> elements({\cf18 bool} recursive) {\cf17 const} Q_DECL_OVERRIDE;\par
5002 \par
5003 {\cf17 protected}:\par
5004   {\cf20 // property members:}\par
5005   QBrush mBackgroundBrush;\par
5006   QPixmap mBackgroundPixmap;\par
5007   QPixmap mScaledBackgroundPixmap;\par
5008   {\cf18 bool} mBackgroundScaled;\par
5009   Qt::AspectRatioMode mBackgroundScaledMode;\par
5010   QCPLayoutInset *mInsetLayout;\par
5011   Qt::Orientations mRangeDrag, mRangeZoom;\par
5012   QList<QPointer<QCPAxis> > mRangeDragHorzAxis, mRangeDragVertAxis;\par
5013   QList<QPointer<QCPAxis> > mRangeZoomHorzAxis, mRangeZoomVertAxis;\par
5014   {\cf18 double} mRangeZoomFactorHorz, mRangeZoomFactorVert;\par
5015   \par
5016   {\cf20 // non-property members:}\par
5017   QList<QCPRange> mDragStartHorzRange, mDragStartVertRange;\par
5018   QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;\par
5019   {\cf18 bool} mDragging;\par
5020   QHash<QCPAxis::AxisType, QList<QCPAxis*> > mAxes;\par
5021   \par
5022   {\cf20 // reimplemented virtual methods:}\par
5023   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
5024   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5025   {\cf17 virtual} {\cf18 int} calculateAutoMargin(QCP::MarginSide side) Q_DECL_OVERRIDE;\par
5026   {\cf17 virtual} {\cf18 void} layoutChanged() Q_DECL_OVERRIDE;\par
5027   {\cf20 // events:}\par
5028   virtual {\cf18 void} mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;\par
5029   virtual {\cf18 void} mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
5030   virtual {\cf18 void} mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
5031   virtual {\cf18 void} wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\par
5032   \par
5033   {\cf20 // non-property methods:}\par
5034   {\cf18 void} drawBackground(QCPPainter *painter);\par
5035   {\cf18 void} updateAxesOffset(QCPAxis::AxisType type);\par
5036   \par
5037 private:\par
5038   Q_DISABLE_COPY(QCPAxisRect)\par
5039   \par
5040   friend class QCustomPlot;\par
5041 \};\par
5042 \par
5043 \par
5044 {\cf20 /* end of 'src/layoutelements/layoutelement-axisrect.h' */}\par
5045 \par
5046 \par
5047 {\cf20 /* including file 'src/layoutelements/layoutelement-legend.h' */}\par
5048 {\cf20 /* modified 2022-11-06T12:45:56, size 10425                   */}\par
5049 \par
5050 class QCP_LIB_DECL QCPAbstractLegendItem : public QCPLayoutElement\par
5051 \{\par
5052   Q_OBJECT\par
5054   Q_PROPERTY(QCPLegend* parentLegend READ parentLegend)\par
5055   Q_PROPERTY(QFont font READ font WRITE setFont)\par
5056   Q_PROPERTY(QColor textColor READ textColor WRITE setTextColor)\par
5057   Q_PROPERTY(QFont selectedFont READ selectedFont WRITE setSelectedFont)\par
5058   Q_PROPERTY(QColor selectedTextColor READ selectedTextColor WRITE setSelectedTextColor)\par
5059   Q_PROPERTY({\cf18 bool} selectable READ selectable WRITE setSelectable NOTIFY selectionChanged)\par
5060   Q_PROPERTY({\cf18 bool} selected READ selected WRITE setSelected NOTIFY selectableChanged)\par
5062 {\cf17 public}:\par
5063   {\cf17 explicit} QCPAbstractLegendItem(QCPLegend *parent);\par
5064   \par
5065   {\cf20 // getters:}\par
5066   QCPLegend *parentLegend(){\cf17  const }\{ {\cf19 return} mParentLegend; \}\par
5067   QFont font(){\cf17  const }\{ {\cf19 return} mFont; \}\par
5068   QColor textColor(){\cf17  const }\{ {\cf19 return} mTextColor; \}\par
5069   QFont selectedFont(){\cf17  const }\{ {\cf19 return} mSelectedFont; \}\par
5070   QColor selectedTextColor(){\cf17  const }\{ {\cf19 return} mSelectedTextColor; \}\par
5071   {\cf18 bool} selectable(){\cf17  const }\{ {\cf19 return} mSelectable; \}\par
5072   {\cf18 bool} selected(){\cf17  const }\{ {\cf19 return} mSelected; \}\par
5073   \par
5074   {\cf20 // setters:}\par
5075   {\cf18 void} setFont({\cf17 const} QFont &font);\par
5076   {\cf18 void} setTextColor({\cf17 const} QColor &color);\par
5077   {\cf18 void} setSelectedFont({\cf17 const} QFont &font);\par
5078   {\cf18 void} setSelectedTextColor({\cf17 const} QColor &color);\par
5079   Q_SLOT {\cf18 void} setSelectable({\cf18 bool} selectable);\par
5080   Q_SLOT {\cf18 void} setSelected({\cf18 bool} selected);\par
5081   \par
5082   {\cf20 // reimplemented virtual methods:}\par
5083   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5084   \par
5085 signals:\par
5086   {\cf18 void} selectionChanged({\cf18 bool} selected);\par
5087   {\cf18 void} selectableChanged({\cf18 bool} selectable);\par
5088   \par
5089 protected:\par
5090   {\cf20 // property members:}\par
5091   QCPLegend *mParentLegend;\par
5092   QFont mFont;\par
5093   QColor mTextColor;\par
5094   QFont mSelectedFont;\par
5095   QColor mSelectedTextColor;\par
5096   {\cf18 bool} mSelectable, mSelected;\par
5097   \par
5098   {\cf20 // reimplemented virtual methods:}\par
5099   virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
5100   virtual {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
5101   virtual QRect clipRect() const Q_DECL_OVERRIDE;\par
5102   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE = 0;\par
5103   {\cf20 // events:}\par
5104   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
5105   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
5106   \par
5107 private:\par
5108   Q_DISABLE_COPY(QCPAbstractLegendItem)\par
5109   \par
5110   friend class QCPLegend;\par
5111 \};\par
5112 \par
5113 \par
5114 class QCP_LIB_DECL QCPPlottableLegendItem : public QCPAbstractLegendItem\par
5115 \{\par
5116   Q_OBJECT\par
5117 {\cf17 public}:\par
5118   QCPPlottableLegendItem(QCPLegend *parent, QCPAbstractPlottable *plottable);\par
5119   \par
5120   {\cf20 // getters:}\par
5121   QCPAbstractPlottable *plottable() \{ {\cf19 return} mPlottable; \}\par
5122   \par
5123 {\cf17 protected}:\par
5124   {\cf20 // property members:}\par
5125   QCPAbstractPlottable *mPlottable;\par
5126   \par
5127   {\cf20 // reimplemented virtual methods:}\par
5128   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5129   {\cf17 virtual} QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;\par
5130   \par
5131   {\cf20 // non-virtual methods:}\par
5132   QPen getIconBorderPen() const;\par
5133   QColor getTextColor() const;\par
5134   QFont getFont() const;\par
5135 \};\par
5136 \par
5137 \par
5138 class QCP_LIB_DECL QCPLegend : public QCPLayoutGrid\par
5139 \{\par
5140   Q_OBJECT\par
5142   Q_PROPERTY(QPen borderPen READ borderPen WRITE setBorderPen)\par
5143   Q_PROPERTY(QBrush brush READ brush WRITE setBrush)\par
5144   Q_PROPERTY(QFont font READ font WRITE setFont)\par
5145   Q_PROPERTY(QColor textColor READ textColor WRITE setTextColor)\par
5146   Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)\par
5147   Q_PROPERTY({\cf18 int} iconTextPadding READ iconTextPadding WRITE setIconTextPadding)\par
5148   Q_PROPERTY(QPen iconBorderPen READ iconBorderPen WRITE setIconBorderPen)\par
5149   Q_PROPERTY(SelectableParts selectableParts READ selectableParts WRITE setSelectableParts NOTIFY selectionChanged)\par
5150   Q_PROPERTY(SelectableParts selectedParts READ selectedParts WRITE setSelectedParts NOTIFY selectableChanged)\par
5151   Q_PROPERTY(QPen selectedBorderPen READ selectedBorderPen WRITE setSelectedBorderPen)\par
5152   Q_PROPERTY(QPen selectedIconBorderPen READ selectedIconBorderPen WRITE setSelectedIconBorderPen)\par
5153   Q_PROPERTY(QBrush selectedBrush READ selectedBrush WRITE setSelectedBrush)\par
5154   Q_PROPERTY(QFont selectedFont READ selectedFont WRITE setSelectedFont)\par
5155   Q_PROPERTY(QColor selectedTextColor READ selectedTextColor WRITE setSelectedTextColor)\par
5157 {\cf17 public}:\par
5163   {\cf17 enum} SelectablePart \{ spNone        = 0x000 \par
5164                         ,spLegendBox  = 0x001 \par
5165                         ,spItems      = 0x002 \par
5166                       \};\par
5167   Q_ENUMS(SelectablePart)\par
5168   Q_FLAGS(SelectableParts)\par
5169   Q_DECLARE_FLAGS(SelectableParts, SelectablePart)\par
5170   \par
5171   explicit QCPLegend();\par
5172   virtual ~QCPLegend() Q_DECL_OVERRIDE;\par
5173   \par
5174   {\cf20 // getters:}\par
5175   QPen borderPen(){\cf17  const }\{ {\cf19 return} mBorderPen; \}\par
5176   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
5177   QFont font(){\cf17  const }\{ {\cf19 return} mFont; \}\par
5178   QColor textColor(){\cf17  const }\{ {\cf19 return} mTextColor; \}\par
5179   QSize iconSize(){\cf17  const }\{ {\cf19 return} mIconSize; \}\par
5180   {\cf18 int} iconTextPadding(){\cf17  const }\{ {\cf19 return} mIconTextPadding; \}\par
5181   QPen iconBorderPen(){\cf17  const }\{ {\cf19 return} mIconBorderPen; \}\par
5182   SelectableParts selectableParts(){\cf17  const }\{ {\cf19 return} mSelectableParts; \}\par
5183   SelectableParts selectedParts() {\cf17 const};\par
5184   QPen selectedBorderPen(){\cf17  const }\{ {\cf19 return} mSelectedBorderPen; \}\par
5185   QPen selectedIconBorderPen(){\cf17  const }\{ {\cf19 return} mSelectedIconBorderPen; \}\par
5186   QBrush selectedBrush(){\cf17  const }\{ {\cf19 return} mSelectedBrush; \}\par
5187   QFont selectedFont(){\cf17  const }\{ {\cf19 return} mSelectedFont; \}\par
5188   QColor selectedTextColor(){\cf17  const }\{ {\cf19 return} mSelectedTextColor; \}\par
5189   \par
5190   {\cf20 // setters:}\par
5191   {\cf18 void} setBorderPen({\cf17 const} QPen &pen);\par
5192   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
5193   {\cf18 void} setFont({\cf17 const} QFont &font);\par
5194   {\cf18 void} setTextColor({\cf17 const} QColor &color);\par
5195   {\cf18 void} setIconSize({\cf17 const} QSize &size);\par
5196   {\cf18 void} setIconSize({\cf18 int} width, {\cf18 int} height);\par
5197   {\cf18 void} setIconTextPadding({\cf18 int} padding);\par
5198   {\cf18 void} setIconBorderPen({\cf17 const} QPen &pen);\par
5199   Q_SLOT {\cf18 void} setSelectableParts({\cf17 const} SelectableParts &selectableParts);\par
5200   Q_SLOT {\cf18 void} setSelectedParts({\cf17 const} SelectableParts &selectedParts);\par
5201   {\cf18 void} setSelectedBorderPen({\cf17 const} QPen &pen);\par
5202   {\cf18 void} setSelectedIconBorderPen({\cf17 const} QPen &pen);\par
5203   {\cf18 void} setSelectedBrush({\cf17 const} QBrush &brush);\par
5204   {\cf18 void} setSelectedFont({\cf17 const} QFont &font);\par
5205   {\cf18 void} setSelectedTextColor({\cf17 const} QColor &color);\par
5206   \par
5207   {\cf20 // reimplemented virtual methods:}\par
5208   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5209   \par
5210   {\cf20 // non-virtual methods:}\par
5211   QCPAbstractLegendItem *item({\cf18 int} index) const;\par
5212   QCPPlottableLegendItem *itemWithPlottable(const QCPAbstractPlottable *plottable) const;\par
5213   {\cf18 int} itemCount() const;\par
5214   {\cf18 bool} hasItem(QCPAbstractLegendItem *item) const;\par
5215   {\cf18 bool} hasItemWithPlottable(const QCPAbstractPlottable *plottable) const;\par
5216   {\cf18 bool} addItem(QCPAbstractLegendItem *item);\par
5217   {\cf18 bool} removeItem({\cf18 int} index);\par
5218   {\cf18 bool} removeItem(QCPAbstractLegendItem *item);\par
5219   {\cf18 void} clearItems();\par
5220   QList<QCPAbstractLegendItem*> selectedItems() const;\par
5221   \par
5222 signals:\par
5223   {\cf18 void} selectionChanged(QCPLegend::SelectableParts parts);\par
5224   {\cf18 void} selectableChanged(QCPLegend::SelectableParts parts);\par
5225   \par
5226 protected:\par
5227   {\cf20 // property members:}\par
5228   QPen mBorderPen, mIconBorderPen;\par
5229   QBrush mBrush;\par
5230   QFont mFont;\par
5231   QColor mTextColor;\par
5232   QSize mIconSize;\par
5233   {\cf18 int} mIconTextPadding;\par
5234   SelectableParts mSelectedParts, mSelectableParts;\par
5235   QPen mSelectedBorderPen, mSelectedIconBorderPen;\par
5236   QBrush mSelectedBrush;\par
5237   QFont mSelectedFont;\par
5238   QColor mSelectedTextColor;\par
5239   \par
5240   {\cf20 // reimplemented virtual methods:}\par
5241   virtual {\cf18 void} parentPlotInitialized(QCustomPlot *parentPlot) Q_DECL_OVERRIDE;\par
5242   virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
5243   virtual {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
5244   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5245   {\cf20 // events:}\par
5246   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
5247   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
5248   \par
5249   {\cf20 // non-virtual methods:}\par
5250   QPen getBorderPen() const;\par
5251   QBrush getBrush() const;\par
5252   \par
5253 private:\par
5254   Q_DISABLE_COPY(QCPLegend)\par
5255   \par
5256   friend class QCustomPlot;\par
5257   friend class QCPAbstractLegendItem;\par
5258 \};\par
5259 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPLegend::SelectableParts)\par
5260 Q_DECLARE_METATYPE(QCPLegend::SelectablePart)\par
5261 \par
5262 {\cf20 /* end of 'src/layoutelements/layoutelement-legend.h' */}\par
5263 \par
5264 \par
5265 {\cf20 /* including file 'src/layoutelements/layoutelement-textelement.h' */}\par
5266 {\cf20 /* modified 2022-11-06T12:45:56, size 5359                         */}\par
5267 \par
5268 class QCP_LIB_DECL QCPTextElement : public QCPLayoutElement\par
5269 \{\par
5270   Q_OBJECT\par
5272   Q_PROPERTY(QString text READ text WRITE setText)\par
5273   Q_PROPERTY(QFont font READ font WRITE setFont)\par
5274   Q_PROPERTY(QColor textColor READ textColor WRITE setTextColor)\par
5275   Q_PROPERTY(QFont selectedFont READ selectedFont WRITE setSelectedFont)\par
5276   Q_PROPERTY(QColor selectedTextColor READ selectedTextColor WRITE setSelectedTextColor)\par
5277   Q_PROPERTY({\cf18 bool} selectable READ selectable WRITE setSelectable NOTIFY selectableChanged)\par
5278   Q_PROPERTY({\cf18 bool} selected READ selected WRITE setSelected NOTIFY selectionChanged)\par
5280 {\cf17 public}:\par
5281   {\cf17 explicit} QCPTextElement(QCustomPlot *parentPlot);\par
5282   QCPTextElement(QCustomPlot *parentPlot, {\cf17 const} QString &text);\par
5283   QCPTextElement(QCustomPlot *parentPlot, {\cf17 const} QString &text, {\cf18 double} pointSize);\par
5284   QCPTextElement(QCustomPlot *parentPlot, {\cf17 const} QString &text, {\cf17 const} QString &fontFamily, {\cf18 double} pointSize);\par
5285   QCPTextElement(QCustomPlot *parentPlot, {\cf17 const} QString &text, {\cf17 const} QFont &font);\par
5286   \par
5287   {\cf20 // getters:}\par
5288   QString text(){\cf17  const }\{ {\cf19 return} mText; \}\par
5289   {\cf18 int} textFlags(){\cf17  const }\{ {\cf19 return} mTextFlags; \}\par
5290   QFont font(){\cf17  const }\{ {\cf19 return} mFont; \}\par
5291   QColor textColor(){\cf17  const }\{ {\cf19 return} mTextColor; \}\par
5292   QFont selectedFont(){\cf17  const }\{ {\cf19 return} mSelectedFont; \}\par
5293   QColor selectedTextColor(){\cf17  const }\{ {\cf19 return} mSelectedTextColor; \}\par
5294   {\cf18 bool} selectable(){\cf17  const }\{ {\cf19 return} mSelectable; \}\par
5295   {\cf18 bool} selected(){\cf17  const }\{ {\cf19 return} mSelected; \}\par
5296   \par
5297   {\cf20 // setters:}\par
5298   {\cf18 void} setText({\cf17 const} QString &text);\par
5299   {\cf18 void} setTextFlags({\cf18 int} flags);\par
5300   {\cf18 void} setFont({\cf17 const} QFont &font);\par
5301   {\cf18 void} setTextColor({\cf17 const} QColor &color);\par
5302   {\cf18 void} setSelectedFont({\cf17 const} QFont &font);\par
5303   {\cf18 void} setSelectedTextColor({\cf17 const} QColor &color);\par
5304   Q_SLOT {\cf18 void} setSelectable({\cf18 bool} selectable);\par
5305   Q_SLOT {\cf18 void} setSelected({\cf18 bool} selected);\par
5306   \par
5307   {\cf20 // reimplemented virtual methods:}\par
5308   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5309   virtual {\cf18 void} mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;\par
5310   virtual {\cf18 void} mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
5311   virtual {\cf18 void} mouseDoubleClickEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;\par
5312   \par
5313 signals:\par
5314   {\cf18 void} selectionChanged({\cf18 bool} selected);\par
5315   {\cf18 void} selectableChanged({\cf18 bool} selectable);\par
5316   {\cf18 void} clicked(QMouseEvent *event);\par
5317   {\cf18 void} doubleClicked(QMouseEvent *event);\par
5318   \par
5319 protected:\par
5320   {\cf20 // property members:}\par
5321   QString mText;\par
5322   {\cf18 int} mTextFlags;\par
5323   QFont mFont;\par
5324   QColor mTextColor;\par
5325   QFont mSelectedFont;\par
5326   QColor mSelectedTextColor;\par
5327   QRect mTextBoundingRect;\par
5328   {\cf18 bool} mSelectable, mSelected;\par
5329   \par
5330   {\cf20 // reimplemented virtual methods:}\par
5331   virtual {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
5332   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5333   virtual QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;\par
5334   virtual QSize maximumOuterSizeHint() const Q_DECL_OVERRIDE;\par
5335   {\cf20 // events:}\par
5336   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
5337   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
5338   \par
5339   {\cf20 // non-virtual methods:}\par
5340   QFont mainFont() const;\par
5341   QColor mainTextColor() const;\par
5342   \par
5343 private:\par
5344   Q_DISABLE_COPY(QCPTextElement)\par
5345 \};\par
5346 \par
5347 \par
5348 \par
5349 {\cf20 /* end of 'src/layoutelements/layoutelement-textelement.h' */}\par
5350 \par
5351 \par
5352 {\cf20 /* including file 'src/layoutelements/layoutelement-colorscale.h' */}\par
5353 {\cf20 /* modified 2022-11-06T12:45:56, size 5939                        */}\par
5354 \par
5355 \par
5356 class QCPColorScaleAxisRectPrivate : public QCPAxisRect\par
5357 \{\par
5358   Q_OBJECT\par
5359 {\cf17 public}:\par
5360   {\cf17 explicit} QCPColorScaleAxisRectPrivate(QCPColorScale *parentColorScale);\par
5361 {\cf17 protected}:\par
5362   QCPColorScale *mParentColorScale;\par
5363   QImage mGradientImage;\par
5364   {\cf18 bool} mGradientImageInvalidated;\par
5365   {\cf20 // re-using some methods of QCPAxisRect to make them available to friend class QCPColorScale}\par
5366   {\cf17 using }QCPAxisRect::calculateAutoMargin;\par
5367   {\cf17 using }QCPAxisRect::mousePressEvent;\par
5368   {\cf17 using }QCPAxisRect::mouseMoveEvent;\par
5369   {\cf17 using }QCPAxisRect::mouseReleaseEvent;\par
5370   {\cf17 using }QCPAxisRect::wheelEvent;\par
5371   {\cf17 using }QCPAxisRect::update;\par
5372   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5373   {\cf18 void} updateGradientImage();\par
5374   Q_SLOT {\cf18 void} axisSelectionChanged(QCPAxis::SelectableParts selectedParts);\par
5375   Q_SLOT {\cf18 void} axisSelectableChanged(QCPAxis::SelectableParts selectableParts);\par
5376   {\cf17 friend} {\cf17 class }QCPColorScale;\par
5377 \};\par
5378 \par
5379 \par
5380 {\cf17 class }QCP_LIB_DECL QCPColorScale : {\cf17 public} QCPLayoutElement\par
5381 \{\par
5382   Q_OBJECT\par
5384   Q_PROPERTY(QCPAxis::AxisType type READ type WRITE setType)\par
5385   Q_PROPERTY(QCPRange dataRange READ dataRange WRITE setDataRange NOTIFY dataRangeChanged)\par
5386   Q_PROPERTY(QCPAxis::ScaleType dataScaleType READ dataScaleType WRITE setDataScaleType NOTIFY dataScaleTypeChanged)\par
5387   Q_PROPERTY(QCPColorGradient gradient READ gradient WRITE setGradient NOTIFY gradientChanged)\par
5388   Q_PROPERTY(QString label READ label WRITE setLabel)\par
5389   Q_PROPERTY({\cf18 int} barWidth READ barWidth WRITE setBarWidth)\par
5390   Q_PROPERTY({\cf18 bool} rangeDrag READ rangeDrag WRITE setRangeDrag)\par
5391   Q_PROPERTY({\cf18 bool} rangeZoom READ rangeZoom WRITE setRangeZoom)\par
5393 {\cf17 public}:\par
5394   {\cf17 explicit} QCPColorScale(QCustomPlot *parentPlot);\par
5395   {\cf17 virtual} ~QCPColorScale() Q_DECL_OVERRIDE;\par
5396   \par
5397   {\cf20 // getters:}\par
5398   QCPAxis *axis(){\cf17  const }\{ {\cf19 return} mColorAxis.data(); \}\par
5399   QCPAxis::AxisType type(){\cf17  const }\{ {\cf19 return} mType; \}\par
5400   QCPRange dataRange(){\cf17  const }\{ {\cf19 return} mDataRange; \}\par
5401   QCPAxis::ScaleType dataScaleType(){\cf17  const }\{ {\cf19 return} mDataScaleType; \}\par
5402   QCPColorGradient gradient(){\cf17  const }\{ {\cf19 return} mGradient; \}\par
5403   QString label() {\cf17 const};\par
5404   {\cf18 int} barWidth (){\cf17  const }\{ {\cf19 return} mBarWidth; \}\par
5405   {\cf18 bool} rangeDrag() {\cf17 const};\par
5406   {\cf18 bool} rangeZoom() {\cf17 const};\par
5407   \par
5408   {\cf20 // setters:}\par
5409   {\cf18 void} setType(QCPAxis::AxisType type);\par
5410   Q_SLOT {\cf18 void} setDataRange({\cf17 const} QCPRange &dataRange);\par
5411   Q_SLOT {\cf18 void} setDataScaleType(QCPAxis::ScaleType scaleType);\par
5412   Q_SLOT {\cf18 void} setGradient({\cf17 const} QCPColorGradient &gradient);\par
5413   {\cf18 void} setLabel({\cf17 const} QString &str);\par
5414   {\cf18 void} setBarWidth({\cf18 int} width);\par
5415   {\cf18 void} setRangeDrag({\cf18 bool} enabled);\par
5416   {\cf18 void} setRangeZoom({\cf18 bool} enabled);\par
5417   \par
5418   {\cf20 // non-property methods:}\par
5419   QList<QCPColorMap*> colorMaps() {\cf17 const};\par
5420   {\cf18 void} rescaleDataRange({\cf18 bool} onlyVisibleMaps);\par
5421   \par
5422   {\cf20 // reimplemented virtual methods:}\par
5423   {\cf17 virtual} {\cf18 void} update(UpdatePhase phase) Q_DECL_OVERRIDE;\par
5424   \par
5425 signals:\par
5426   {\cf18 void} dataRangeChanged({\cf17 const} QCPRange &newRange);\par
5427   {\cf18 void} dataScaleTypeChanged(QCPAxis::ScaleType scaleType);\par
5428   {\cf18 void} gradientChanged({\cf17 const} QCPColorGradient &newGradient);\par
5429 \par
5430 {\cf17 protected}:\par
5431   {\cf20 // property members:}\par
5432   QCPAxis::AxisType mType;\par
5433   QCPRange mDataRange;\par
5434   QCPAxis::ScaleType mDataScaleType;\par
5435   QCPColorGradient mGradient;\par
5436   {\cf18 int} mBarWidth;\par
5437   \par
5438   {\cf20 // non-property members:}\par
5439   QPointer<QCPColorScaleAxisRectPrivate> mAxisRect;\par
5440   QPointer<QCPAxis> mColorAxis;\par
5441   \par
5442   {\cf20 // reimplemented virtual methods:}\par
5443   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
5444   {\cf20 // events:}\par
5445   {\cf17 virtual} {\cf18 void} mousePressEvent(QMouseEvent *event, {\cf17 const} QVariant &details) Q_DECL_OVERRIDE;\par
5446   {\cf17 virtual} {\cf18 void} mouseMoveEvent(QMouseEvent *event, {\cf17 const} QPointF &startPos) Q_DECL_OVERRIDE;\par
5447   {\cf17 virtual} {\cf18 void} mouseReleaseEvent(QMouseEvent *event, {\cf17 const} QPointF &startPos) Q_DECL_OVERRIDE;\par
5448   {\cf17 virtual} {\cf18 void} wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\par
5449   \par
5450 {\cf17 private}:\par
5451   Q_DISABLE_COPY(QCPColorScale)\par
5452   \par
5453   friend class QCPColorScaleAxisRectPrivate;\par
5454 \};\par
5455 \par
5456 \par
5457 {\cf20 /* end of 'src/layoutelements/layoutelement-colorscale.h' */}\par
5458 \par
5459 \par
5460 {\cf20 /* including file 'src/plottables/plottable-graph.h' */}\par
5461 {\cf20 /* modified 2022-11-06T12:45:56, size 9316           */}\par
5462 \par
5463 class QCP_LIB_DECL QCPGraphData\par
5464 \{\par
5465 {\cf17 public}:\par
5466   QCPGraphData();\par
5467   QCPGraphData({\cf18 double} key, {\cf18 double} value);\par
5468   \par
5469   {\cf17 inline} {\cf18 double} sortKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5470   {\cf17 inline} {\cf17 static} QCPGraphData fromSortKey({\cf18 double} sortKey) \{ {\cf19 return} QCPGraphData(sortKey, 0); \}\par
5471   {\cf17 inline} {\cf17 static} {\cf18 bool} sortKeyIsMainKey() \{ {\cf19 return} {\cf17 true}; \}\par
5472   \par
5473   {\cf17 inline} {\cf18 double} mainKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5474   {\cf17 inline} {\cf18 double} mainValue(){\cf17  const }\{ {\cf19 return} value; \}\par
5475   \par
5476   {\cf17 inline} QCPRange valueRange(){\cf17  const }\{ {\cf19 return} QCPRange(value, value); \}\par
5477   \par
5478   {\cf18 double} key, value;\par
5479 \};\par
5480 Q_DECLARE_TYPEINFO(QCPGraphData, Q_PRIMITIVE_TYPE);\par
5481 \par
5482 \par
5492 {\cf17 typedef} QCPDataContainer<QCPGraphData> QCPGraphDataContainer;\par
5493 \par
5494 {\cf17 class }QCP_LIB_DECL QCPGraph : {\cf17 public} QCPAbstractPlottable1D<QCPGraphData>\par
5495 \{\par
5496   Q_OBJECT\par
5498   Q_PROPERTY(LineStyle lineStyle READ lineStyle WRITE setLineStyle)\par
5499   Q_PROPERTY(QCPScatterStyle scatterStyle READ scatterStyle WRITE setScatterStyle)\par
5500   Q_PROPERTY({\cf18 int} scatterSkip READ scatterSkip WRITE setScatterSkip)\par
5501   Q_PROPERTY(QCPGraph* channelFillGraph READ channelFillGraph WRITE setChannelFillGraph)\par
5502   Q_PROPERTY({\cf18 bool} adaptiveSampling READ adaptiveSampling WRITE setAdaptiveSampling)\par
5504 {\cf17 public}:\par
5510   {\cf17 enum} LineStyle \{ lsNone        \par
5512                    ,lsLine       \par
5513                    ,lsStepLeft   \par
5514                    ,lsStepRight  \par
5515                    ,lsStepCenter \par
5516                    ,lsImpulse    \par
5517                  \};\par
5518   Q_ENUMS(LineStyle)\par
5519   \par
5520   explicit QCPGraph(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
5521   virtual ~QCPGraph() Q_DECL_OVERRIDE;\par
5522   \par
5523   {\cf20 // getters:}\par
5524   QSharedPointer<QCPGraphDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
5525   LineStyle lineStyle(){\cf17  const }\{ {\cf19 return} mLineStyle; \}\par
5526   QCPScatterStyle scatterStyle(){\cf17  const }\{ {\cf19 return} mScatterStyle; \}\par
5527   {\cf18 int} scatterSkip(){\cf17  const }\{ {\cf19 return} mScatterSkip; \}\par
5528   QCPGraph *channelFillGraph(){\cf17  const }\{ {\cf19 return} mChannelFillGraph.data(); \}\par
5529   {\cf18 bool} adaptiveSampling(){\cf17  const }\{ {\cf19 return} mAdaptiveSampling; \}\par
5530   \par
5531   {\cf20 // setters:}\par
5532   {\cf18 void} setData(QSharedPointer<QCPGraphDataContainer> data);\par
5533   {\cf18 void} setData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
5534   {\cf18 void} setLineStyle(LineStyle ls);\par
5535   {\cf18 void} setScatterStyle({\cf17 const} QCPScatterStyle &style);\par
5536   {\cf18 void} setScatterSkip({\cf18 int} skip);\par
5537   {\cf18 void} setChannelFillGraph(QCPGraph *targetGraph);\par
5538   {\cf18 void} setAdaptiveSampling({\cf18 bool} enabled);\par
5539   \par
5540   {\cf20 // non-property methods:}\par
5541   {\cf18 void} addData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
5542   {\cf18 void} addData({\cf18 double} key, {\cf18 double} value);\par
5543   \par
5544   {\cf20 // reimplemented virtual methods:}\par
5545   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5546   virtual QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;\par
5547   virtual QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
5548   \par
5549 protected:\par
5550   {\cf20 // property members:}\par
5551   LineStyle mLineStyle;\par
5552   QCPScatterStyle mScatterStyle;\par
5553   {\cf18 int} mScatterSkip;\par
5554   QPointer<QCPGraph> mChannelFillGraph;\par
5555   {\cf18 bool} mAdaptiveSampling;\par
5556   \par
5557   {\cf20 // reimplemented virtual methods:}\par
5558   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5559   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;\par
5560   \par
5561   {\cf20 // introduced virtual methods:}\par
5562   virtual {\cf18 void} drawFill(QCPPainter *painter, QVector<QPointF> *lines) const;\par
5563   virtual {\cf18 void} drawScatterPlot(QCPPainter *painter, const QVector<QPointF> &scatters, const QCPScatterStyle &style) const;\par
5564   virtual {\cf18 void} drawLinePlot(QCPPainter *painter, const QVector<QPointF> &lines) const;\par
5565   virtual {\cf18 void} drawImpulsePlot(QCPPainter *painter, const QVector<QPointF> &lines) const;\par
5566   \par
5567   virtual {\cf18 void} getOptimizedLineData(QVector<QCPGraphData> *lineData, const QCPGraphDataContainer::const_iterator &begin, const QCPGraphDataContainer::const_iterator &end) const;\par
5568   virtual {\cf18 void} getOptimizedScatterData(QVector<QCPGraphData> *scatterData, QCPGraphDataContainer::const_iterator begin, QCPGraphDataContainer::const_iterator end) const;\par
5569   \par
5570   {\cf20 // non-virtual methods:}\par
5571   {\cf18 void} getVisibleDataBounds(QCPGraphDataContainer::const_iterator &begin, QCPGraphDataContainer::const_iterator &end, const QCPDataRange &rangeRestriction) const;\par
5572   {\cf18 void} getLines(QVector<QPointF> *lines, const QCPDataRange &dataRange) const;\par
5573   {\cf18 void} getScatters(QVector<QPointF> *scatters, const QCPDataRange &dataRange) const;\par
5574   QVector<QPointF> dataToLines(const QVector<QCPGraphData> &data) const;\par
5575   QVector<QPointF> dataToStepLeftLines(const QVector<QCPGraphData> &data) const;\par
5576   QVector<QPointF> dataToStepRightLines(const QVector<QCPGraphData> &data) const;\par
5577   QVector<QPointF> dataToStepCenterLines(const QVector<QCPGraphData> &data) const;\par
5578   QVector<QPointF> dataToImpulseLines(const QVector<QCPGraphData> &data) const;\par
5579   QVector<QCPDataRange> getNonNanSegments(const QVector<QPointF> *lineData, Qt::Orientation keyOrientation) const;\par
5580   QVector<QPair<QCPDataRange, QCPDataRange> > getOverlappingSegments(QVector<QCPDataRange> thisSegments, const QVector<QPointF> *thisData, QVector<QCPDataRange> otherSegments, const QVector<QPointF> *otherData) const;\par
5581   {\cf18 bool} segmentsIntersect({\cf18 double} aLower, {\cf18 double} aUpper, {\cf18 double} bLower, {\cf18 double} bUpper, {\cf18 int} &bPrecedence) const;\par
5582   QPointF getFillBasePoint(QPointF matchingDataPoint) const;\par
5583   const QPolygonF getFillPolygon(const QVector<QPointF> *lineData, QCPDataRange segment) const;\par
5584   const QPolygonF getChannelFillPolygon(const QVector<QPointF> *thisData, QCPDataRange thisSegment, const QVector<QPointF> *otherData, QCPDataRange otherSegment) const;\par
5585   {\cf18 int} findIndexBelowX(const QVector<QPointF> *data, {\cf18 double} x) const;\par
5586   {\cf18 int} findIndexAboveX(const QVector<QPointF> *data, {\cf18 double} x) const;\par
5587   {\cf18 int} findIndexBelowY(const QVector<QPointF> *data, {\cf18 double} y) const;\par
5588   {\cf18 int} findIndexAboveY(const QVector<QPointF> *data, {\cf18 double} y) const;\par
5589   {\cf18 double} pointDistance(const QPointF &pixelPoint, QCPGraphDataContainer::const_iterator &closestData) const;\par
5590   \par
5591   friend class QCustomPlot;\par
5592   friend class QCPLegend;\par
5593 \};\par
5594 Q_DECLARE_METATYPE(QCPGraph::LineStyle)\par
5595 \par
5596 {\cf20 /* end of 'src/plottables/plottable-graph.h' */}\par
5597 \par
5598 \par
5599 {\cf20 /* including file 'src/plottables/plottable-curve.h' */}\par
5600 {\cf20 /* modified 2022-11-06T12:45:56, size 7434           */}\par
5601 \par
5602 class QCP_LIB_DECL QCPCurveData\par
5603 \{\par
5604 {\cf17 public}:\par
5605   QCPCurveData();\par
5606   QCPCurveData({\cf18 double} t, {\cf18 double} key, {\cf18 double} value);\par
5607   \par
5608   {\cf17 inline} {\cf18 double} sortKey(){\cf17  const }\{ {\cf19 return} t; \}\par
5609   {\cf17 inline} {\cf17 static} QCPCurveData fromSortKey({\cf18 double} sortKey) \{ {\cf19 return} QCPCurveData(sortKey, 0, 0); \}\par
5610   {\cf17 inline} {\cf17 static} {\cf18 bool} sortKeyIsMainKey() \{ {\cf19 return} {\cf17 false}; \}\par
5611   \par
5612   {\cf17 inline} {\cf18 double} mainKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5613   {\cf17 inline} {\cf18 double} mainValue(){\cf17  const }\{ {\cf19 return} value; \}\par
5614   \par
5615   {\cf17 inline} QCPRange valueRange(){\cf17  const }\{ {\cf19 return} QCPRange(value, value); \}\par
5616   \par
5617   {\cf18 double} t, key, value;\par
5618 \};\par
5619 Q_DECLARE_TYPEINFO(QCPCurveData, Q_PRIMITIVE_TYPE);\par
5620 \par
5621 \par
5632 {\cf17 typedef} QCPDataContainer<QCPCurveData> QCPCurveDataContainer;\par
5633 \par
5634 {\cf17 class }QCP_LIB_DECL QCPCurve : {\cf17 public} QCPAbstractPlottable1D<QCPCurveData>\par
5635 \{\par
5636   Q_OBJECT\par
5638   Q_PROPERTY(QCPScatterStyle scatterStyle READ scatterStyle WRITE setScatterStyle)\par
5639   Q_PROPERTY({\cf18 int} scatterSkip READ scatterSkip WRITE setScatterSkip)\par
5640   Q_PROPERTY(LineStyle lineStyle READ lineStyle WRITE setLineStyle)\par
5642 {\cf17 public}:\par
5648   {\cf17 enum} LineStyle \{ lsNone  \par
5649                    ,lsLine \par
5650                  \};\par
5651   Q_ENUMS(LineStyle)\par
5652   \par
5653   explicit QCPCurve(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
5654   virtual ~QCPCurve() Q_DECL_OVERRIDE;\par
5655   \par
5656   {\cf20 // getters:}\par
5657   QSharedPointer<QCPCurveDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
5658   QCPScatterStyle scatterStyle(){\cf17  const }\{ {\cf19 return} mScatterStyle; \}\par
5659   {\cf18 int} scatterSkip(){\cf17  const }\{ {\cf19 return} mScatterSkip; \}\par
5660   LineStyle lineStyle(){\cf17  const }\{ {\cf19 return} mLineStyle; \}\par
5661   \par
5662   {\cf20 // setters:}\par
5663   {\cf18 void} setData(QSharedPointer<QCPCurveDataContainer> data);\par
5664   {\cf18 void} setData({\cf17 const} QVector<double> &t, {\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
5665   {\cf18 void} setData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values);\par
5666   {\cf18 void} setScatterStyle({\cf17 const} QCPScatterStyle &style);\par
5667   {\cf18 void} setScatterSkip({\cf18 int} skip);\par
5668   {\cf18 void} setLineStyle(LineStyle style);\par
5669   \par
5670   {\cf20 // non-property methods:}\par
5671   {\cf18 void} addData({\cf17 const} QVector<double> &t, {\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
5672   {\cf18 void} addData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values);\par
5673   {\cf18 void} addData({\cf18 double} t, {\cf18 double} key, {\cf18 double} value);\par
5674   {\cf18 void} addData({\cf18 double} key, {\cf18 double} value);\par
5675   \par
5676   {\cf20 // reimplemented virtual methods:}\par
5677   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5678   virtual QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;\par
5679   virtual QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
5680   \par
5681 protected:\par
5682   {\cf20 // property members:}\par
5683   QCPScatterStyle mScatterStyle;\par
5684   {\cf18 int} mScatterSkip;\par
5685   LineStyle mLineStyle;\par
5686   \par
5687   {\cf20 // reimplemented virtual methods:}\par
5688   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5689   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;\par
5690   \par
5691   {\cf20 // introduced virtual methods:}\par
5692   virtual {\cf18 void} drawCurveLine(QCPPainter *painter, const QVector<QPointF> &lines) const;\par
5693   virtual {\cf18 void} drawScatterPlot(QCPPainter *painter, const QVector<QPointF> &points, const QCPScatterStyle &style) const;\par
5694   \par
5695   {\cf20 // non-virtual methods:}\par
5696   {\cf18 void} getCurveLines(QVector<QPointF> *lines, const QCPDataRange &dataRange, {\cf18 double} penWidth) const;\par
5697   {\cf18 void} getScatters(QVector<QPointF> *scatters, const QCPDataRange &dataRange, {\cf18 double} scatterWidth) const;\par
5698   {\cf18 int} getRegion({\cf18 double} key, {\cf18 double} value, {\cf18 double} keyMin, {\cf18 double} valueMax, {\cf18 double} keyMax, {\cf18 double} valueMin) const;\par
5699   QPointF getOptimizedPoint({\cf18 int} otherRegion, {\cf18 double} otherKey, {\cf18 double} otherValue, {\cf18 double} key, {\cf18 double} value, {\cf18 double} keyMin, {\cf18 double} valueMax, {\cf18 double} keyMax, {\cf18 double} valueMin) const;\par
5700   QVector<QPointF> getOptimizedCornerPoints({\cf18 int} prevRegion, {\cf18 int} currentRegion, {\cf18 double} prevKey, {\cf18 double} prevValue, {\cf18 double} key, {\cf18 double} value, {\cf18 double} keyMin, {\cf18 double} valueMax, {\cf18 double} keyMax, {\cf18 double} valueMin) const;\par
5701   {\cf18 bool} mayTraverse({\cf18 int} prevRegion, {\cf18 int} currentRegion) const;\par
5702   {\cf18 bool} getTraverse({\cf18 double} prevKey, {\cf18 double} prevValue, {\cf18 double} key, {\cf18 double} value, {\cf18 double} keyMin, {\cf18 double} valueMax, {\cf18 double} keyMax, {\cf18 double} valueMin, QPointF &crossA, QPointF &crossB) const;\par
5703   {\cf18 void} getTraverseCornerPoints({\cf18 int} prevRegion, {\cf18 int} currentRegion, {\cf18 double} keyMin, {\cf18 double} valueMax, {\cf18 double} keyMax, {\cf18 double} valueMin, QVector<QPointF> &beforeTraverse, QVector<QPointF> &afterTraverse) const;\par
5704   {\cf18 double} pointDistance(const QPointF &pixelPoint, QCPCurveDataContainer::const_iterator &closestData) const;\par
5705   \par
5706   friend class QCustomPlot;\par
5707   friend class QCPLegend;\par
5708 \};\par
5709 Q_DECLARE_METATYPE(QCPCurve::LineStyle)\par
5710 \par
5711 {\cf20 /* end of 'src/plottables/plottable-curve.h' */}\par
5712 \par
5713 \par
5714 {\cf20 /* including file 'src/plottables/plottable-bars.h' */}\par
5715 {\cf20 /* modified 2022-11-06T12:45:56, size 8955          */}\par
5716 \par
5717 class QCP_LIB_DECL QCPBarsGroup : public QObject\par
5718 \{\par
5719   Q_OBJECT\par
5721   Q_PROPERTY(SpacingType spacingType READ spacingType WRITE setSpacingType)\par
5722   Q_PROPERTY({\cf18 double} spacing READ spacing WRITE setSpacing)\par
5724 {\cf17 public}:\par
5731   {\cf17 enum} SpacingType \{ stAbsolute       \par
5732                      ,stAxisRectRatio \par
5733                      ,stPlotCoords    \par
5734                    \};\par
5735   Q_ENUMS(SpacingType)\par
5736   \par
5737   explicit QCPBarsGroup(QCustomPlot *parentPlot);\par
5738   virtual ~QCPBarsGroup();\par
5739   \par
5740   {\cf20 // getters:}\par
5741   SpacingType spacingType(){\cf17  const }\{ {\cf19 return} mSpacingType; \}\par
5742   {\cf18 double} spacing(){\cf17  const }\{ {\cf19 return} mSpacing; \}\par
5743   \par
5744   {\cf20 // setters:}\par
5745   {\cf18 void} setSpacingType(SpacingType spacingType);\par
5746   {\cf18 void} setSpacing({\cf18 double} spacing);\par
5747   \par
5748   {\cf20 // non-virtual methods:}\par
5749   QList<QCPBars*> bars(){\cf17  const }\{ {\cf19 return} mBars; \}\par
5750   QCPBars* bars({\cf18 int} index) {\cf17 const};\par
5751   {\cf18 int} size(){\cf17  const }\{ {\cf19 return} mBars.size(); \}\par
5752   {\cf18 bool} isEmpty(){\cf17  const }\{ {\cf19 return} mBars.isEmpty(); \}\par
5753   {\cf18 void} clear();\par
5754   {\cf18 bool} contains(QCPBars *bars){\cf17  const }\{ {\cf19 return} mBars.contains(bars); \}\par
5755   {\cf18 void} append(QCPBars *bars);\par
5756   {\cf18 void} insert({\cf18 int} i, QCPBars *bars);\par
5757   {\cf18 void} remove(QCPBars *bars);\par
5758   \par
5759 {\cf17 protected}:\par
5760   {\cf20 // non-property members:}\par
5761   QCustomPlot *mParentPlot;\par
5762   SpacingType mSpacingType;\par
5763   {\cf18 double} mSpacing;\par
5764   QList<QCPBars*> mBars;\par
5765   \par
5766   {\cf20 // non-virtual methods:}\par
5767   {\cf18 void} registerBars(QCPBars *bars);\par
5768   {\cf18 void} unregisterBars(QCPBars *bars);\par
5769   \par
5770   {\cf20 // virtual methods:}\par
5771   {\cf18 double} keyPixelOffset({\cf17 const} QCPBars *bars, {\cf18 double} keyCoord);\par
5772   {\cf18 double} getPixelSpacing({\cf17 const} QCPBars *bars, {\cf18 double} keyCoord);\par
5773   \par
5774 {\cf17 private}:\par
5775   Q_DISABLE_COPY(QCPBarsGroup)\par
5776   \par
5777   friend class QCPBars;\par
5778 \};\par
5779 Q_DECLARE_METATYPE(QCPBarsGroup::SpacingType)\par
5780 \par
5781 \par
5782 class QCP_LIB_DECL QCPBarsData\par
5783 \{\par
5784 {\cf17 public}:\par
5785   QCPBarsData();\par
5786   QCPBarsData({\cf18 double} key, {\cf18 double} value);\par
5787   \par
5788   {\cf17 inline} {\cf18 double} sortKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5789   {\cf17 inline} {\cf17 static} QCPBarsData fromSortKey({\cf18 double} sortKey) \{ {\cf19 return} QCPBarsData(sortKey, 0); \}\par
5790   {\cf17 inline} {\cf17 static} {\cf18 bool} sortKeyIsMainKey() \{ {\cf19 return} {\cf17 true}; \} \par
5791   \par
5792   {\cf17 inline} {\cf18 double} mainKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5793   {\cf17 inline} {\cf18 double} mainValue(){\cf17  const }\{ {\cf19 return} value; \}\par
5794   \par
5795   {\cf17 inline} QCPRange valueRange(){\cf17  const }\{ {\cf19 return} QCPRange(value, value); \} {\cf20 // note that bar base value isn't held in each QCPBarsData and thus can't/shouldn't be returned here}\par
5796   \par
5797   {\cf18 double} key, value;\par
5798 \};\par
5799 Q_DECLARE_TYPEINFO(QCPBarsData, Q_PRIMITIVE_TYPE);\par
5800 \par
5801 \par
5811 {\cf17 typedef} QCPDataContainer<QCPBarsData> QCPBarsDataContainer;\par
5812 \par
5813 {\cf17 class }QCP_LIB_DECL QCPBars : {\cf17 public} QCPAbstractPlottable1D<QCPBarsData>\par
5814 \{\par
5815   Q_OBJECT\par
5817   Q_PROPERTY({\cf18 double} width READ width WRITE setWidth)\par
5818   Q_PROPERTY(WidthType widthType READ widthType WRITE setWidthType)\par
5819   Q_PROPERTY(QCPBarsGroup* barsGroup READ barsGroup WRITE setBarsGroup)\par
5820   Q_PROPERTY({\cf18 double} baseValue READ baseValue WRITE setBaseValue)\par
5821   Q_PROPERTY({\cf18 double} stackingGap READ stackingGap WRITE setStackingGap)\par
5822   Q_PROPERTY(QCPBars* barBelow READ barBelow)\par
5823   Q_PROPERTY(QCPBars* barAbove READ barAbove)\par
5825 {\cf17 public}:\par
5832   {\cf17 enum} WidthType \{ wtAbsolute       \par
5833                    ,wtAxisRectRatio \par
5834                    ,wtPlotCoords    \par
5835                  \};\par
5836   Q_ENUMS(WidthType)\par
5837   \par
5838   explicit QCPBars(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
5839   virtual ~QCPBars() Q_DECL_OVERRIDE;\par
5840   \par
5841   {\cf20 // getters:}\par
5842   {\cf18 double} width(){\cf17  const }\{ {\cf19 return} mWidth; \}\par
5843   WidthType widthType(){\cf17  const }\{ {\cf19 return} mWidthType; \}\par
5844   QCPBarsGroup *barsGroup(){\cf17  const }\{ {\cf19 return} mBarsGroup; \}\par
5845   {\cf18 double} baseValue(){\cf17  const }\{ {\cf19 return} mBaseValue; \}\par
5846   {\cf18 double} stackingGap(){\cf17  const }\{ {\cf19 return} mStackingGap; \}\par
5847   QCPBars *barBelow(){\cf17  const }\{ {\cf19 return} mBarBelow.data(); \}\par
5848   QCPBars *barAbove(){\cf17  const }\{ {\cf19 return} mBarAbove.data(); \}\par
5849   QSharedPointer<QCPBarsDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
5850   \par
5851   {\cf20 // setters:}\par
5852   {\cf18 void} setData(QSharedPointer<QCPBarsDataContainer> data);\par
5853   {\cf18 void} setData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
5854   {\cf18 void} setWidth({\cf18 double} width);\par
5855   {\cf18 void} setWidthType(WidthType widthType);\par
5856   {\cf18 void} setBarsGroup(QCPBarsGroup *barsGroup);\par
5857   {\cf18 void} setBaseValue({\cf18 double} baseValue);\par
5858   {\cf18 void} setStackingGap({\cf18 double} pixels);\par
5859   \par
5860   {\cf20 // non-property methods:}\par
5861   {\cf18 void} addData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
5862   {\cf18 void} addData({\cf18 double} key, {\cf18 double} value);\par
5863   {\cf18 void} moveBelow(QCPBars *bars);\par
5864   {\cf18 void} moveAbove(QCPBars *bars);\par
5865   \par
5866   {\cf20 // reimplemented virtual methods:}\par
5867   {\cf17 virtual} QCPDataSelection selectTestRect({\cf17 const} QRectF &rect, {\cf18 bool} onlySelectable) {\cf17 const} Q_DECL_OVERRIDE;\par
5868   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5869   virtual QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;\par
5870   virtual QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
5871   virtual QPointF dataPixelPosition({\cf18 int} index) const Q_DECL_OVERRIDE;\par
5872   \par
5873 protected:\par
5874   {\cf20 // property members:}\par
5875   {\cf18 double} mWidth;\par
5876   WidthType mWidthType;\par
5877   QCPBarsGroup *mBarsGroup;\par
5878   {\cf18 double} mBaseValue;\par
5879   {\cf18 double} mStackingGap;\par
5880   QPointer<QCPBars> mBarBelow, mBarAbove;\par
5881   \par
5882   {\cf20 // reimplemented virtual methods:}\par
5883   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
5884   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;\par
5885   \par
5886   {\cf20 // non-virtual methods:}\par
5887   {\cf18 void} getVisibleDataBounds(QCPBarsDataContainer::const_iterator &begin, QCPBarsDataContainer::const_iterator &end) const;\par
5888   QRectF getBarRect({\cf18 double} key, {\cf18 double} value) const;\par
5889   {\cf18 void} getPixelWidth({\cf18 double} key, {\cf18 double} &lower, {\cf18 double} &upper) const;\par
5890   {\cf18 double} getStackedBaseValue({\cf18 double} key, {\cf18 bool} positive) const;\par
5891   static {\cf18 void} connectBars(QCPBars* lower, QCPBars* upper);\par
5892   \par
5893   friend class QCustomPlot;\par
5894   friend class QCPLegend;\par
5895   friend class QCPBarsGroup;\par
5896 \};\par
5897 Q_DECLARE_METATYPE(QCPBars::WidthType)\par
5898 \par
5899 {\cf20 /* end of 'src/plottables/plottable-bars.h' */}\par
5900 \par
5901 \par
5902 {\cf20 /* including file 'src/plottables/plottable-statisticalbox.h' */}\par
5903 {\cf20 /* modified 2022-11-06T12:45:56, size 7522                    */}\par
5904 \par
5905 class QCP_LIB_DECL QCPStatisticalBoxData\par
5906 \{\par
5907 {\cf17 public}:\par
5908   QCPStatisticalBoxData();\par
5909   QCPStatisticalBoxData({\cf18 double} key, {\cf18 double} minimum, {\cf18 double} lowerQuartile, {\cf18 double} median, {\cf18 double} upperQuartile, {\cf18 double} maximum, {\cf17 const} QVector<double>& outliers=QVector<double>());\par
5910   \par
5911   {\cf17 inline} {\cf18 double} sortKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5912   {\cf17 inline} {\cf17 static} QCPStatisticalBoxData fromSortKey({\cf18 double} sortKey) \{ {\cf19 return} QCPStatisticalBoxData(sortKey, 0, 0, 0, 0, 0); \}\par
5913   {\cf17 inline} {\cf17 static} {\cf18 bool} sortKeyIsMainKey() \{ {\cf19 return} {\cf17 true}; \}\par
5914   \par
5915   {\cf17 inline} {\cf18 double} mainKey(){\cf17  const }\{ {\cf19 return} key; \}\par
5916   {\cf17 inline} {\cf18 double} mainValue(){\cf17  const }\{ {\cf19 return} median; \}\par
5917   \par
5918   {\cf17 inline} QCPRange valueRange(){\cf17  const}\par
5919 {\cf17   }\{\par
5920     QCPRange result(minimum, maximum);\par
5921     {\cf19 for} (QVector<double>::const_iterator it = outliers.constBegin(); it != outliers.constEnd(); ++it)\par
5922       result.expand(*it);\par
5923     {\cf19 return} result;\par
5924   \}\par
5925   \par
5926   {\cf18 double} key, minimum, lowerQuartile, median, upperQuartile, maximum;\par
5927   QVector<double> outliers;\par
5928 \};\par
5929 Q_DECLARE_TYPEINFO(QCPStatisticalBoxData, Q_MOVABLE_TYPE);\par
5930 \par
5931 \par
5942 {\cf17 typedef} QCPDataContainer<QCPStatisticalBoxData> QCPStatisticalBoxDataContainer;\par
5943 \par
5944 {\cf17 class }QCP_LIB_DECL QCPStatisticalBox : {\cf17 public} QCPAbstractPlottable1D<QCPStatisticalBoxData>\par
5945 \{\par
5946   Q_OBJECT\par
5948   Q_PROPERTY({\cf18 double} width READ width WRITE setWidth)\par
5949   Q_PROPERTY({\cf18 double} whiskerWidth READ whiskerWidth WRITE setWhiskerWidth)\par
5950   Q_PROPERTY(QPen whiskerPen READ whiskerPen WRITE setWhiskerPen)\par
5951   Q_PROPERTY(QPen whiskerBarPen READ whiskerBarPen WRITE setWhiskerBarPen)\par
5952   Q_PROPERTY({\cf18 bool} whiskerAntialiased READ whiskerAntialiased WRITE setWhiskerAntialiased)\par
5953   Q_PROPERTY(QPen medianPen READ medianPen WRITE setMedianPen)\par
5954   Q_PROPERTY(QCPScatterStyle outlierStyle READ outlierStyle WRITE setOutlierStyle)\par
5956 {\cf17 public}:\par
5957   {\cf17 explicit} QCPStatisticalBox(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
5958   \par
5959   {\cf20 // getters:}\par
5960   QSharedPointer<QCPStatisticalBoxDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
5961   {\cf18 double} width(){\cf17  const }\{ {\cf19 return} mWidth; \}\par
5962   {\cf18 double} whiskerWidth(){\cf17  const }\{ {\cf19 return} mWhiskerWidth; \}\par
5963   QPen whiskerPen(){\cf17  const }\{ {\cf19 return} mWhiskerPen; \}\par
5964   QPen whiskerBarPen(){\cf17  const }\{ {\cf19 return} mWhiskerBarPen; \}\par
5965   {\cf18 bool} whiskerAntialiased(){\cf17  const }\{ {\cf19 return} mWhiskerAntialiased; \}\par
5966   QPen medianPen(){\cf17  const }\{ {\cf19 return} mMedianPen; \}\par
5967   QCPScatterStyle outlierStyle(){\cf17  const }\{ {\cf19 return} mOutlierStyle; \}\par
5968 \par
5969   {\cf20 // setters:}\par
5970   {\cf18 void} setData(QSharedPointer<QCPStatisticalBoxDataContainer> data);\par
5971   {\cf18 void} setData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &minimum, {\cf17 const} QVector<double> &lowerQuartile, {\cf17 const} QVector<double> &median, {\cf17 const} QVector<double> &upperQuartile, {\cf17 const} QVector<double> &maximum, {\cf18 bool} alreadySorted={\cf17 false});\par
5972   {\cf18 void} setWidth({\cf18 double} width);\par
5973   {\cf18 void} setWhiskerWidth({\cf18 double} width);\par
5974   {\cf18 void} setWhiskerPen({\cf17 const} QPen &pen);\par
5975   {\cf18 void} setWhiskerBarPen({\cf17 const} QPen &pen);\par
5976   {\cf18 void} setWhiskerAntialiased({\cf18 bool} enabled);\par
5977   {\cf18 void} setMedianPen({\cf17 const} QPen &pen);\par
5978   {\cf18 void} setOutlierStyle({\cf17 const} QCPScatterStyle &style);\par
5979   \par
5980   {\cf20 // non-property methods:}\par
5981   {\cf18 void} addData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &minimum, {\cf17 const} QVector<double> &lowerQuartile, {\cf17 const} QVector<double> &median, {\cf17 const} QVector<double> &upperQuartile, {\cf17 const} QVector<double> &maximum, {\cf18 bool} alreadySorted={\cf17 false});\par
5982   {\cf18 void} addData({\cf18 double} key, {\cf18 double} minimum, {\cf18 double} lowerQuartile, {\cf18 double} median, {\cf18 double} upperQuartile, {\cf18 double} maximum, {\cf17 const} QVector<double> &outliers=QVector<double>());\par
5983   \par
5984   {\cf20 // reimplemented virtual methods:}\par
5985   {\cf17 virtual} QCPDataSelection selectTestRect({\cf17 const} QRectF &rect, {\cf18 bool} onlySelectable) {\cf17 const} Q_DECL_OVERRIDE;\par
5986   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
5987   virtual QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;\par
5988   virtual QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
5989   \par
5990 protected:\par
5991   {\cf20 // property members:}\par
5992   {\cf18 double} mWidth;\par
5993   {\cf18 double} mWhiskerWidth;\par
5994   QPen mWhiskerPen, mWhiskerBarPen;\par
5995   {\cf18 bool} mWhiskerAntialiased;\par
5996   QPen mMedianPen;\par
5997   QCPScatterStyle mOutlierStyle;\par
5998   \par
5999   {\cf20 // reimplemented virtual methods:}\par
6000   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6001   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;\par
6002   \par
6003   {\cf20 // introduced virtual methods:}\par
6004   virtual {\cf18 void} drawStatisticalBox(QCPPainter *painter, QCPStatisticalBoxDataContainer::const_iterator it, const QCPScatterStyle &outlierStyle) const;\par
6005   \par
6006   {\cf20 // non-virtual methods:}\par
6007   {\cf18 void} getVisibleDataBounds(QCPStatisticalBoxDataContainer::const_iterator &begin, QCPStatisticalBoxDataContainer::const_iterator &end) const;\par
6008   QRectF getQuartileBox(QCPStatisticalBoxDataContainer::const_iterator it) const;\par
6009   QVector<QLineF> getWhiskerBackboneLines(QCPStatisticalBoxDataContainer::const_iterator it) const;\par
6010   QVector<QLineF> getWhiskerBarLines(QCPStatisticalBoxDataContainer::const_iterator it) const;\par
6011   \par
6012   friend class QCustomPlot;\par
6013   friend class QCPLegend;\par
6014 \};\par
6015 \par
6016 {\cf20 /* end of 'src/plottables/plottable-statisticalbox.h' */}\par
6017 \par
6018 \par
6019 {\cf20 /* including file 'src/plottables/plottable-colormap.h' */}\par
6020 {\cf20 /* modified 2022-11-06T12:45:56, size 7092              */}\par
6021 \par
6022 class QCP_LIB_DECL QCPColorMapData\par
6023 \{\par
6024 {\cf17 public}:\par
6025   QCPColorMapData({\cf18 int} keySize, {\cf18 int} valueSize, {\cf17 const} QCPRange &keyRange, {\cf17 const} QCPRange &valueRange);\par
6026   ~QCPColorMapData();\par
6027   QCPColorMapData({\cf17 const} QCPColorMapData &other);\par
6028   QCPColorMapData &operator=({\cf17 const} QCPColorMapData &other);\par
6029   \par
6030   {\cf20 // getters:}\par
6031   {\cf18 int} keySize(){\cf17  const }\{ {\cf19 return} mKeySize; \}\par
6032   {\cf18 int} valueSize(){\cf17  const }\{ {\cf19 return} mValueSize; \}\par
6033   QCPRange keyRange(){\cf17  const }\{ {\cf19 return} mKeyRange; \}\par
6034   QCPRange valueRange(){\cf17  const }\{ {\cf19 return} mValueRange; \}\par
6035   QCPRange dataBounds(){\cf17  const }\{ {\cf19 return} mDataBounds; \}\par
6036   {\cf18 double} data({\cf18 double} key, {\cf18 double} value);\par
6037   {\cf18 double} cell({\cf18 int} keyIndex, {\cf18 int} valueIndex);\par
6038   {\cf18 unsigned} {\cf18 char} alpha({\cf18 int} keyIndex, {\cf18 int} valueIndex);\par
6039   \par
6040   {\cf20 // setters:}\par
6041   {\cf18 void} setSize({\cf18 int} keySize, {\cf18 int} valueSize);\par
6042   {\cf18 void} setKeySize({\cf18 int} keySize);\par
6043   {\cf18 void} setValueSize({\cf18 int} valueSize);\par
6044   {\cf18 void} setRange({\cf17 const} QCPRange &keyRange, {\cf17 const} QCPRange &valueRange);\par
6045   {\cf18 void} setKeyRange({\cf17 const} QCPRange &keyRange);\par
6046   {\cf18 void} setValueRange({\cf17 const} QCPRange &valueRange);\par
6047   {\cf18 void} setData({\cf18 double} key, {\cf18 double} value, {\cf18 double} z);\par
6048   {\cf18 void} setCell({\cf18 int} keyIndex, {\cf18 int} valueIndex, {\cf18 double} z);\par
6049   {\cf18 void} setAlpha({\cf18 int} keyIndex, {\cf18 int} valueIndex, {\cf18 unsigned} {\cf18 char} alpha);\par
6050   \par
6051   {\cf20 // non-property methods:}\par
6052   {\cf18 void} recalculateDataBounds();\par
6053   {\cf18 void} clear();\par
6054   {\cf18 void} clearAlpha();\par
6055   {\cf18 void} fill({\cf18 double} z);\par
6056   {\cf18 void} fillAlpha({\cf18 unsigned} {\cf18 char} alpha);\par
6057   {\cf18 bool} isEmpty(){\cf17  const }\{ {\cf19 return} mIsEmpty; \}\par
6058   {\cf18 void} coordToCell({\cf18 double} key, {\cf18 double} value, {\cf18 int} *keyIndex, {\cf18 int} *valueIndex) {\cf17 const};\par
6059   {\cf18 void} cellToCoord({\cf18 int} keyIndex, {\cf18 int} valueIndex, {\cf18 double} *key, {\cf18 double} *value) {\cf17 const};\par
6060   \par
6061 {\cf17 protected}:\par
6062   {\cf20 // property members:}\par
6063   {\cf18 int} mKeySize, mValueSize;\par
6064   QCPRange mKeyRange, mValueRange;\par
6065   {\cf18 bool} mIsEmpty;\par
6066   \par
6067   {\cf20 // non-property members:}\par
6068   {\cf18 double} *mData;\par
6069   {\cf18 unsigned} {\cf18 char} *mAlpha;\par
6070   QCPRange mDataBounds;\par
6071   {\cf18 bool} mDataModified;\par
6072   \par
6073   {\cf18 bool} createAlpha({\cf18 bool} initializeOpaque={\cf17 true});\par
6074   \par
6075   {\cf17 friend} {\cf17 class }QCPColorMap;\par
6076 \};\par
6077 \par
6078 \par
6079 {\cf17 class }QCP_LIB_DECL QCPColorMap : {\cf17 public} QCPAbstractPlottable\par
6080 \{\par
6081   Q_OBJECT\par
6083   Q_PROPERTY(QCPRange dataRange READ dataRange WRITE setDataRange NOTIFY dataRangeChanged)\par
6084   Q_PROPERTY(QCPAxis::ScaleType dataScaleType READ dataScaleType WRITE setDataScaleType NOTIFY dataScaleTypeChanged)\par
6085   Q_PROPERTY(QCPColorGradient gradient READ gradient WRITE setGradient NOTIFY gradientChanged)\par
6086   Q_PROPERTY({\cf18 bool} interpolate READ interpolate WRITE setInterpolate)\par
6087   Q_PROPERTY({\cf18 bool} tightBoundary READ tightBoundary WRITE setTightBoundary)\par
6088   Q_PROPERTY(QCPColorScale* colorScale READ colorScale WRITE setColorScale)\par
6090 {\cf17 public}:\par
6091   {\cf17 explicit} QCPColorMap(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
6092   {\cf17 virtual} ~QCPColorMap() Q_DECL_OVERRIDE;\par
6093   \par
6094   {\cf20 // getters:}\par
6095   QCPColorMapData *data(){\cf17  const }\{ {\cf19 return} mMapData; \}\par
6096   QCPRange dataRange(){\cf17  const }\{ {\cf19 return} mDataRange; \}\par
6097   QCPAxis::ScaleType dataScaleType(){\cf17  const }\{ {\cf19 return} mDataScaleType; \}\par
6098   {\cf18 bool} interpolate(){\cf17  const }\{ {\cf19 return} mInterpolate; \}\par
6099   {\cf18 bool} tightBoundary(){\cf17  const }\{ {\cf19 return} mTightBoundary; \}\par
6100   QCPColorGradient gradient(){\cf17  const }\{ {\cf19 return} mGradient; \}\par
6101   QCPColorScale *colorScale(){\cf17  const }\{ {\cf19 return} mColorScale.data(); \}\par
6102   \par
6103   {\cf20 // setters:}\par
6104   {\cf18 void} setData(QCPColorMapData *data, {\cf18 bool} copy={\cf17 false});\par
6105   Q_SLOT {\cf18 void} setDataRange({\cf17 const} QCPRange &dataRange);\par
6106   Q_SLOT {\cf18 void} setDataScaleType(QCPAxis::ScaleType scaleType);\par
6107   Q_SLOT {\cf18 void} setGradient({\cf17 const} QCPColorGradient &gradient);\par
6108   {\cf18 void} setInterpolate({\cf18 bool} enabled);\par
6109   {\cf18 void} setTightBoundary({\cf18 bool} enabled);\par
6110   {\cf18 void} setColorScale(QCPColorScale *colorScale);\par
6111   \par
6112   {\cf20 // non-property methods:}\par
6113   {\cf18 void} rescaleDataRange({\cf18 bool} recalculateDataBounds={\cf17 false});\par
6114   Q_SLOT {\cf18 void} updateLegendIcon(Qt::TransformationMode transformMode=Qt::SmoothTransformation, {\cf17 const} QSize &thumbSize=QSize(32, 18));\par
6115   \par
6116   {\cf20 // reimplemented virtual methods:}\par
6117   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6118   virtual QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;\par
6119   virtual QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
6120   \par
6121 signals:\par
6122   {\cf18 void} dataRangeChanged(const QCPRange &newRange);\par
6123   {\cf18 void} dataScaleTypeChanged(QCPAxis::ScaleType scaleType);\par
6124   {\cf18 void} gradientChanged(const QCPColorGradient &newGradient);\par
6125   \par
6126 protected:\par
6127   {\cf20 // property members:}\par
6128   QCPRange mDataRange;\par
6129   QCPAxis::ScaleType mDataScaleType;\par
6130   QCPColorMapData *mMapData;\par
6131   QCPColorGradient mGradient;\par
6132   {\cf18 bool} mInterpolate;\par
6133   {\cf18 bool} mTightBoundary;\par
6134   QPointer<QCPColorScale> mColorScale;\par
6135   \par
6136   {\cf20 // non-property members:}\par
6137   QImage mMapImage, mUndersampledMapImage;\par
6138   QPixmap mLegendIcon;\par
6139   {\cf18 bool} mMapImageInvalidated;\par
6140   \par
6141   {\cf20 // introduced virtual methods:}\par
6142   virtual {\cf18 void} updateMapImage();\par
6143   \par
6144   {\cf20 // reimplemented virtual methods:}\par
6145   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6146   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;\par
6147   \par
6148   friend class QCustomPlot;\par
6149   friend class QCPLegend;\par
6150 \};\par
6151 \par
6152 {\cf20 /* end of 'src/plottables/plottable-colormap.h' */}\par
6153 \par
6154 \par
6155 {\cf20 /* including file 'src/plottables/plottable-financial.h' */}\par
6156 {\cf20 /* modified 2022-11-06T12:45:56, size 8644               */}\par
6157 \par
6158 class QCP_LIB_DECL QCPFinancialData\par
6159 \{\par
6160 {\cf17 public}:\par
6161   QCPFinancialData();\par
6162   QCPFinancialData({\cf18 double} key, {\cf18 double} open, {\cf18 double} high, {\cf18 double} low, {\cf18 double} close);\par
6163   \par
6164   {\cf17 inline} {\cf18 double} sortKey(){\cf17  const }\{ {\cf19 return} key; \}\par
6165   {\cf17 inline} {\cf17 static} QCPFinancialData fromSortKey({\cf18 double} sortKey) \{ {\cf19 return} QCPFinancialData(sortKey, 0, 0, 0, 0); \}\par
6166   {\cf17 inline} {\cf17 static} {\cf18 bool} sortKeyIsMainKey() \{ {\cf19 return} {\cf17 true}; \} \par
6167   \par
6168   {\cf17 inline} {\cf18 double} mainKey(){\cf17  const }\{ {\cf19 return} key; \}\par
6169   {\cf17 inline} {\cf18 double} mainValue(){\cf17  const }\{ {\cf19 return} open; \}\par
6170   \par
6171   {\cf17 inline} QCPRange valueRange(){\cf17  const }\{ {\cf19 return} QCPRange(low, high); \} {\cf20 // open and close must lie between low and high, so we don't need to check them}\par
6172   \par
6173   {\cf18 double} key, open, high, low, close;\par
6174 \};\par
6175 Q_DECLARE_TYPEINFO(QCPFinancialData, Q_PRIMITIVE_TYPE);\par
6176 \par
6177 \par
6187 {\cf17 typedef} QCPDataContainer<QCPFinancialData> QCPFinancialDataContainer;\par
6188 \par
6189 {\cf17 class }QCP_LIB_DECL QCPFinancial : {\cf17 public} QCPAbstractPlottable1D<QCPFinancialData>\par
6190 \{\par
6191   Q_OBJECT\par
6193   Q_PROPERTY(ChartStyle chartStyle READ chartStyle WRITE setChartStyle)\par
6194   Q_PROPERTY({\cf18 double} width READ width WRITE setWidth)\par
6195   Q_PROPERTY(WidthType widthType READ widthType WRITE setWidthType)\par
6196   Q_PROPERTY({\cf18 bool} twoColored READ twoColored WRITE setTwoColored)\par
6197   Q_PROPERTY(QBrush brushPositive READ brushPositive WRITE setBrushPositive)\par
6198   Q_PROPERTY(QBrush brushNegative READ brushNegative WRITE setBrushNegative)\par
6199   Q_PROPERTY(QPen penPositive READ penPositive WRITE setPenPositive)\par
6200   Q_PROPERTY(QPen penNegative READ penNegative WRITE setPenNegative)\par
6202 {\cf17 public}:\par
6209   {\cf17 enum} WidthType \{ wtAbsolute       \par
6210                    ,wtAxisRectRatio \par
6211                    ,wtPlotCoords    \par
6212                  \};\par
6213   Q_ENUMS(WidthType)\par
6214   \par
6215   \par
6220   enum ChartStyle \{ csOhlc         \par
6221                    ,csCandlestick  \par
6222                   \};\par
6223   Q_ENUMS(ChartStyle)\par
6224   \par
6225   explicit QCPFinancial(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
6226   virtual ~QCPFinancial() Q_DECL_OVERRIDE;\par
6227   \par
6228   {\cf20 // getters:}\par
6229   QSharedPointer<QCPFinancialDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
6230   ChartStyle chartStyle(){\cf17  const }\{ {\cf19 return} mChartStyle; \}\par
6231   {\cf18 double} width(){\cf17  const }\{ {\cf19 return} mWidth; \}\par
6232   WidthType widthType(){\cf17  const }\{ {\cf19 return} mWidthType; \}\par
6233   {\cf18 bool} twoColored(){\cf17  const }\{ {\cf19 return} mTwoColored; \}\par
6234   QBrush brushPositive(){\cf17  const }\{ {\cf19 return} mBrushPositive; \}\par
6235   QBrush brushNegative(){\cf17  const }\{ {\cf19 return} mBrushNegative; \}\par
6236   QPen penPositive(){\cf17  const }\{ {\cf19 return} mPenPositive; \}\par
6237   QPen penNegative(){\cf17  const }\{ {\cf19 return} mPenNegative; \}\par
6238   \par
6239   {\cf20 // setters:}\par
6240   {\cf18 void} setData(QSharedPointer<QCPFinancialDataContainer> data);\par
6241   {\cf18 void} setData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &open, {\cf17 const} QVector<double> &high, {\cf17 const} QVector<double> &low, {\cf17 const} QVector<double> &close, {\cf18 bool} alreadySorted={\cf17 false});\par
6242   {\cf18 void} setChartStyle(ChartStyle style);\par
6243   {\cf18 void} setWidth({\cf18 double} width);\par
6244   {\cf18 void} setWidthType(WidthType widthType);\par
6245   {\cf18 void} setTwoColored({\cf18 bool} twoColored);\par
6246   {\cf18 void} setBrushPositive({\cf17 const} QBrush &brush);\par
6247   {\cf18 void} setBrushNegative({\cf17 const} QBrush &brush);\par
6248   {\cf18 void} setPenPositive({\cf17 const} QPen &pen);\par
6249   {\cf18 void} setPenNegative({\cf17 const} QPen &pen);\par
6250   \par
6251   {\cf20 // non-property methods:}\par
6252   {\cf18 void} addData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &open, {\cf17 const} QVector<double> &high, {\cf17 const} QVector<double> &low, {\cf17 const} QVector<double> &close, {\cf18 bool} alreadySorted={\cf17 false});\par
6253   {\cf18 void} addData({\cf18 double} key, {\cf18 double} open, {\cf18 double} high, {\cf18 double} low, {\cf18 double} close);\par
6254   \par
6255   {\cf20 // reimplemented virtual methods:}\par
6256   {\cf17 virtual} QCPDataSelection selectTestRect({\cf17 const} QRectF &rect, {\cf18 bool} onlySelectable) {\cf17 const} Q_DECL_OVERRIDE;\par
6257   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6258   virtual QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) const Q_DECL_OVERRIDE;\par
6259   virtual QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, const QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
6260   \par
6261   {\cf20 // static methods:}\par
6262   static QCPFinancialDataContainer timeSeriesToOhlc(const QVector<{\cf18 double}> &time, const QVector<{\cf18 double}> &value, {\cf18 double} timeBinSize, {\cf18 double} timeBinOffset = 0);\par
6263   \par
6264 protected:\par
6265   {\cf20 // property members:}\par
6266   ChartStyle mChartStyle;\par
6267   {\cf18 double} mWidth;\par
6268   WidthType mWidthType;\par
6269   {\cf18 bool} mTwoColored;\par
6270   QBrush mBrushPositive, mBrushNegative;\par
6271   QPen mPenPositive, mPenNegative;\par
6272   \par
6273   {\cf20 // reimplemented virtual methods:}\par
6274   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6275   virtual {\cf18 void} drawLegendIcon(QCPPainter *painter, const QRectF &rect) const Q_DECL_OVERRIDE;\par
6276   \par
6277   {\cf20 // non-virtual methods:}\par
6278   {\cf18 void} drawOhlcPlot(QCPPainter *painter, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, {\cf18 bool} isSelected);\par
6279   {\cf18 void} drawCandlestickPlot(QCPPainter *painter, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, {\cf18 bool} isSelected);\par
6280   {\cf18 double} getPixelWidth({\cf18 double} key, {\cf18 double} keyPixel) const;\par
6281   {\cf18 double} ohlcSelectTest(const QPointF &pos, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, QCPFinancialDataContainer::const_iterator &closestDataPoint) const;\par
6282   {\cf18 double} candlestickSelectTest(const QPointF &pos, const QCPFinancialDataContainer::const_iterator &begin, const QCPFinancialDataContainer::const_iterator &end, QCPFinancialDataContainer::const_iterator &closestDataPoint) const;\par
6283   {\cf18 void} getVisibleDataBounds(QCPFinancialDataContainer::const_iterator &begin, QCPFinancialDataContainer::const_iterator &end) const;\par
6284   QRectF selectionHitBox(QCPFinancialDataContainer::const_iterator it) const;\par
6285   \par
6286   friend class QCustomPlot;\par
6287   friend class QCPLegend;\par
6288 \};\par
6289 Q_DECLARE_METATYPE(QCPFinancial::ChartStyle)\par
6290 \par
6291 {\cf20 /* end of 'src/plottables/plottable-financial.h' */}\par
6292 \par
6293 \par
6294 {\cf20 /* including file 'src/plottables/plottable-errorbar.h' */}\par
6295 {\cf20 /* modified 2022-11-06T12:45:56, size 7749              */}\par
6296 \par
6297 class QCP_LIB_DECL QCPErrorBarsData\par
6298 \{\par
6299 {\cf17 public}:\par
6300   QCPErrorBarsData();\par
6301   {\cf17 explicit} QCPErrorBarsData({\cf18 double} error);\par
6302   QCPErrorBarsData({\cf18 double} errorMinus, {\cf18 double} errorPlus);\par
6303   \par
6304   {\cf18 double} errorMinus, errorPlus;\par
6305 \};\par
6306 Q_DECLARE_TYPEINFO(QCPErrorBarsData, Q_PRIMITIVE_TYPE);\par
6307 \par
6308 \par
6324 {\cf17 typedef} QVector<QCPErrorBarsData> QCPErrorBarsDataContainer;\par
6325 \par
6326 {\cf17 class }QCP_LIB_DECL QCPErrorBars : {\cf17 public} QCPAbstractPlottable, {\cf17 public} QCPPlottableInterface1D\par
6327 \{\par
6328   Q_OBJECT\par
6330   Q_PROPERTY(QSharedPointer<QCPErrorBarsDataContainer> data READ data WRITE setData)\par
6331   Q_PROPERTY(QCPAbstractPlottable* dataPlottable READ dataPlottable WRITE setDataPlottable)\par
6332   Q_PROPERTY(ErrorType errorType READ errorType WRITE setErrorType)\par
6333   Q_PROPERTY({\cf18 double} whiskerWidth READ whiskerWidth WRITE setWhiskerWidth)\par
6334   Q_PROPERTY({\cf18 double} symbolGap READ symbolGap WRITE setSymbolGap)\par
6336 {\cf17 public}:\par
6337   \par
6344   {\cf17 enum} ErrorType \{ etKeyError    \par
6345                    ,etValueError \par
6346   \};\par
6347   Q_ENUMS(ErrorType)\par
6348   \par
6349   explicit QCPErrorBars(QCPAxis *keyAxis, QCPAxis *valueAxis);\par
6350   virtual ~QCPErrorBars() Q_DECL_OVERRIDE;\par
6351   {\cf20 // getters:}\par
6352   QSharedPointer<QCPErrorBarsDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
6353   QCPAbstractPlottable *dataPlottable(){\cf17  const }\{ {\cf19 return} mDataPlottable.data(); \}\par
6354   ErrorType errorType(){\cf17  const }\{ {\cf19 return} mErrorType; \}\par
6355   {\cf18 double} whiskerWidth(){\cf17  const }\{ {\cf19 return} mWhiskerWidth; \}\par
6356   {\cf18 double} symbolGap(){\cf17  const }\{ {\cf19 return} mSymbolGap; \}\par
6357   \par
6358   {\cf20 // setters:}\par
6359   {\cf18 void} setData(QSharedPointer<QCPErrorBarsDataContainer> data);\par
6360   {\cf18 void} setData({\cf17 const} QVector<double> &error);\par
6361   {\cf18 void} setData({\cf17 const} QVector<double> &errorMinus, {\cf17 const} QVector<double> &errorPlus);\par
6362   {\cf18 void} setDataPlottable(QCPAbstractPlottable* plottable);\par
6363   {\cf18 void} setErrorType(ErrorType type);\par
6364   {\cf18 void} setWhiskerWidth({\cf18 double} pixels);\par
6365   {\cf18 void} setSymbolGap({\cf18 double} pixels);\par
6366   \par
6367   {\cf20 // non-property methods:}\par
6368   {\cf18 void} addData({\cf17 const} QVector<double> &error);\par
6369   {\cf18 void} addData({\cf17 const} QVector<double> &errorMinus, {\cf17 const} QVector<double> &errorPlus);\par
6370   {\cf18 void} addData({\cf18 double} error);\par
6371   {\cf18 void} addData({\cf18 double} errorMinus, {\cf18 double} errorPlus);\par
6372   \par
6373   {\cf20 // virtual methods of 1d plottable interface:}\par
6374   {\cf17 virtual} {\cf18 int} dataCount() const Q_DECL_OVERRIDE;\par
6375   virtual {\cf18 double} dataMainKey({\cf18 int} index) const Q_DECL_OVERRIDE;\par
6376   virtual {\cf18 double} dataSortKey({\cf18 int} index) const Q_DECL_OVERRIDE;\par
6377   virtual {\cf18 double} dataMainValue({\cf18 int} index) const Q_DECL_OVERRIDE;\par
6378   virtual QCPRange dataValueRange({\cf18 int} index) const Q_DECL_OVERRIDE;\par
6379   virtual QPointF dataPixelPosition({\cf18 int} index) const Q_DECL_OVERRIDE;\par
6380   virtual {\cf18 bool} sortKeyIsMainKey() const Q_DECL_OVERRIDE;\par
6381   virtual QCPDataSelection selectTestRect(const QRectF &rect, {\cf18 bool} onlySelectable) const Q_DECL_OVERRIDE;\par
6382   virtual {\cf18 int} findBegin({\cf18 double} sortKey, {\cf18 bool} expandedRange=true) const Q_DECL_OVERRIDE;\par
6383   virtual {\cf18 int} findEnd({\cf18 double} sortKey, {\cf18 bool} expandedRange=true) const Q_DECL_OVERRIDE;\par
6384   \par
6385   {\cf20 // reimplemented virtual methods:}\par
6386   virtual {\cf18 double} selectTest(const QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf18 nullptr}) const Q_DECL_OVERRIDE;\par
6387   virtual QCPPlottableInterface1D *interface1D() Q_DECL_OVERRIDE \{ {\cf19 return} {\cf17 this}; \}\par
6388   \par
6389 {\cf17 protected}:\par
6390   {\cf20 // property members:}\par
6391   QSharedPointer<QCPErrorBarsDataContainer> mDataContainer;\par
6392   QPointer<QCPAbstractPlottable> mDataPlottable;\par
6393   ErrorType mErrorType;\par
6394   {\cf18 double} mWhiskerWidth;\par
6395   {\cf18 double} mSymbolGap;\par
6396   \par
6397   {\cf20 // reimplemented virtual methods:}\par
6398   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6399   {\cf17 virtual} {\cf18 void} drawLegendIcon(QCPPainter *painter, {\cf17 const} QRectF &rect) {\cf17 const} Q_DECL_OVERRIDE;\par
6400   {\cf17 virtual} QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) {\cf17 const} Q_DECL_OVERRIDE;\par
6401   {\cf17 virtual} QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, {\cf17 const} QCPRange &inKeyRange=QCPRange()) const Q_DECL_OVERRIDE;\par
6402   \par
6403   {\cf20 // non-virtual methods:}\par
6404   {\cf18 void} getErrorBarLines(QCPErrorBarsDataContainer::const_iterator it, QVector<QLineF> &backbones, QVector<QLineF> &whiskers) const;\par
6405   {\cf18 void} getVisibleDataBounds(QCPErrorBarsDataContainer::const_iterator &begin, QCPErrorBarsDataContainer::const_iterator &end, const QCPDataRange &rangeRestriction) const;\par
6406   {\cf18 double} pointDistance(const QPointF &pixelPoint, QCPErrorBarsDataContainer::const_iterator &closestData) const;\par
6407   {\cf20 // helpers:}\par
6408   {\cf18 void} getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments) const;\par
6409   {\cf18 bool} errorBarVisible({\cf18 int} index) const;\par
6410   {\cf18 bool} rectIntersectsLine(const QRectF &pixelRect, const QLineF &line) const;\par
6411   \par
6412   friend class QCustomPlot;\par
6413   friend class QCPLegend;\par
6414 \};\par
6415 \par
6416 {\cf20 /* end of 'src/plottables/plottable-errorbar.h' */}\par
6417 \par
6418 \par
6419 {\cf20 /* including file 'src/items/item-straightline.h' */}\par
6420 {\cf20 /* modified 2022-11-06T12:45:56, size 3137        */}\par
6421 \par
6422 class QCP_LIB_DECL QCPItemStraightLine : public QCPAbstractItem\par
6423 \{\par
6424   Q_OBJECT\par
6426   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6427   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6429 {\cf17 public}:\par
6430   {\cf17 explicit} QCPItemStraightLine(QCustomPlot *parentPlot);\par
6431   {\cf17 virtual} ~QCPItemStraightLine() Q_DECL_OVERRIDE;\par
6432   \par
6433   {\cf20 // getters:}\par
6434   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6435   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6436   \par
6437   {\cf20 // setters;}\par
6438   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6439   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6440   \par
6441   {\cf20 // reimplemented virtual methods:}\par
6442   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6443   \par
6444   QCPItemPosition * const point1;\par
6445   QCPItemPosition * const point2;\par
6446   \par
6447 protected:\par
6448   {\cf20 // property members:}\par
6449   QPen mPen, mSelectedPen;\par
6450   \par
6451   {\cf20 // reimplemented virtual methods:}\par
6452   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6453   \par
6454   {\cf20 // non-virtual methods:}\par
6455   QLineF getRectClippedStraightLine(const QCPVector2D &base, const QCPVector2D &vec, const QRect &rect) const;\par
6456   QPen mainPen() const;\par
6457 \};\par
6458 \par
6459 {\cf20 /* end of 'src/items/item-straightline.h' */}\par
6460 \par
6461 \par
6462 {\cf20 /* including file 'src/items/item-line.h'  */}\par
6463 {\cf20 /* modified 2022-11-06T12:45:56, size 3429 */}\par
6464 \par
6465 class QCP_LIB_DECL QCPItemLine : public QCPAbstractItem\par
6466 \{\par
6467   Q_OBJECT\par
6469   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6470   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6471   Q_PROPERTY(QCPLineEnding head READ head WRITE setHead)\par
6472   Q_PROPERTY(QCPLineEnding tail READ tail WRITE setTail)\par
6474 {\cf17 public}:\par
6475   {\cf17 explicit} QCPItemLine(QCustomPlot *parentPlot);\par
6476   {\cf17 virtual} ~QCPItemLine() Q_DECL_OVERRIDE;\par
6477   \par
6478   {\cf20 // getters:}\par
6479   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6480   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6481   QCPLineEnding head(){\cf17  const }\{ {\cf19 return} mHead; \}\par
6482   QCPLineEnding tail(){\cf17  const }\{ {\cf19 return} mTail; \}\par
6483   \par
6484   {\cf20 // setters;}\par
6485   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6486   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6487   {\cf18 void} setHead({\cf17 const} QCPLineEnding &head);\par
6488   {\cf18 void} setTail({\cf17 const} QCPLineEnding &tail);\par
6489   \par
6490   {\cf20 // reimplemented virtual methods:}\par
6491   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6492   \par
6493   QCPItemPosition * const start;\par
6494   QCPItemPosition * const end;\par
6495   \par
6496 protected:\par
6497   {\cf20 // property members:}\par
6498   QPen mPen, mSelectedPen;\par
6499   QCPLineEnding mHead, mTail;\par
6500   \par
6501   {\cf20 // reimplemented virtual methods:}\par
6502   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6503   \par
6504   {\cf20 // non-virtual methods:}\par
6505   QLineF getRectClippedLine(const QCPVector2D &start, const QCPVector2D &end, const QRect &rect) const;\par
6506   QPen mainPen() const;\par
6507 \};\par
6508 \par
6509 {\cf20 /* end of 'src/items/item-line.h' */}\par
6510 \par
6511 \par
6512 {\cf20 /* including file 'src/items/item-curve.h' */}\par
6513 {\cf20 /* modified 2022-11-06T12:45:56, size 3401 */}\par
6514 \par
6515 class QCP_LIB_DECL QCPItemCurve : public QCPAbstractItem\par
6516 \{\par
6517   Q_OBJECT\par
6519   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6520   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6521   Q_PROPERTY(QCPLineEnding head READ head WRITE setHead)\par
6522   Q_PROPERTY(QCPLineEnding tail READ tail WRITE setTail)\par
6524 {\cf17 public}:\par
6525   {\cf17 explicit} QCPItemCurve(QCustomPlot *parentPlot);\par
6526   {\cf17 virtual} ~QCPItemCurve() Q_DECL_OVERRIDE;\par
6527   \par
6528   {\cf20 // getters:}\par
6529   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6530   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6531   QCPLineEnding head(){\cf17  const }\{ {\cf19 return} mHead; \}\par
6532   QCPLineEnding tail(){\cf17  const }\{ {\cf19 return} mTail; \}\par
6533   \par
6534   {\cf20 // setters;}\par
6535   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6536   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6537   {\cf18 void} setHead({\cf17 const} QCPLineEnding &head);\par
6538   {\cf18 void} setTail({\cf17 const} QCPLineEnding &tail);\par
6539   \par
6540   {\cf20 // reimplemented virtual methods:}\par
6541   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6542   \par
6543   QCPItemPosition * const start;\par
6544   QCPItemPosition * const startDir;\par
6545   QCPItemPosition * const endDir;\par
6546   QCPItemPosition * const end;\par
6547   \par
6548 protected:\par
6549   {\cf20 // property members:}\par
6550   QPen mPen, mSelectedPen;\par
6551   QCPLineEnding mHead, mTail;\par
6552   \par
6553   {\cf20 // reimplemented virtual methods:}\par
6554   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6555   \par
6556   {\cf20 // non-virtual methods:}\par
6557   QPen mainPen() const;\par
6558 \};\par
6559 \par
6560 {\cf20 /* end of 'src/items/item-curve.h' */}\par
6561 \par
6562 \par
6563 {\cf20 /* including file 'src/items/item-rect.h'  */}\par
6564 {\cf20 /* modified 2022-11-06T12:45:56, size 3710 */}\par
6565 \par
6566 class QCP_LIB_DECL QCPItemRect : public QCPAbstractItem\par
6567 \{\par
6568   Q_OBJECT\par
6570   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6571   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6572   Q_PROPERTY(QBrush brush READ brush WRITE setBrush)\par
6573   Q_PROPERTY(QBrush selectedBrush READ selectedBrush WRITE setSelectedBrush)\par
6575 {\cf17 public}:\par
6576   {\cf17 explicit} QCPItemRect(QCustomPlot *parentPlot);\par
6577   {\cf17 virtual} ~QCPItemRect() Q_DECL_OVERRIDE;\par
6578   \par
6579   {\cf20 // getters:}\par
6580   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6581   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6582   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
6583   QBrush selectedBrush(){\cf17  const }\{ {\cf19 return} mSelectedBrush; \}\par
6584   \par
6585   {\cf20 // setters;}\par
6586   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6587   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6588   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
6589   {\cf18 void} setSelectedBrush({\cf17 const} QBrush &brush);\par
6590   \par
6591   {\cf20 // reimplemented virtual methods:}\par
6592   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6593   \par
6594   QCPItemPosition * const topLeft;\par
6595   QCPItemPosition * const bottomRight;\par
6596   QCPItemAnchor * const top;\par
6597   QCPItemAnchor * const topRight;\par
6598   QCPItemAnchor * const right;\par
6599   QCPItemAnchor * const bottom;\par
6600   QCPItemAnchor * const bottomLeft;\par
6601   QCPItemAnchor * const left;\par
6602   \par
6603 protected:\par
6604   enum AnchorIndex \{aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft\};\par
6605   \par
6606   {\cf20 // property members:}\par
6607   QPen mPen, mSelectedPen;\par
6608   QBrush mBrush, mSelectedBrush;\par
6609   \par
6610   {\cf20 // reimplemented virtual methods:}\par
6611   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6612   {\cf17 virtual} QPointF anchorPixelPosition({\cf18 int} anchorId) {\cf17 const} Q_DECL_OVERRIDE;\par
6613   \par
6614   {\cf20 // non-virtual methods:}\par
6615   QPen mainPen() {\cf17 const};\par
6616   QBrush mainBrush() {\cf17 const};\par
6617 \};\par
6618 \par
6619 {\cf20 /* end of 'src/items/item-rect.h' */}\par
6620 \par
6621 \par
6622 {\cf20 /* including file 'src/items/item-text.h'  */}\par
6623 {\cf20 /* modified 2022-11-06T12:45:56, size 5576 */}\par
6624 \par
6625 {\cf17 class }QCP_LIB_DECL QCPItemText : {\cf17 public} QCPAbstractItem\par
6626 \{\par
6627   Q_OBJECT\par
6629   Q_PROPERTY(QColor color READ color WRITE setColor)\par
6630   Q_PROPERTY(QColor selectedColor READ selectedColor WRITE setSelectedColor)\par
6631   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6632   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6633   Q_PROPERTY(QBrush brush READ brush WRITE setBrush)\par
6634   Q_PROPERTY(QBrush selectedBrush READ selectedBrush WRITE setSelectedBrush)\par
6635   Q_PROPERTY(QFont font READ font WRITE setFont)\par
6636   Q_PROPERTY(QFont selectedFont READ selectedFont WRITE setSelectedFont)\par
6637   Q_PROPERTY(QString text READ text WRITE setText)\par
6638   Q_PROPERTY(Qt::Alignment positionAlignment READ positionAlignment WRITE setPositionAlignment)\par
6639   Q_PROPERTY(Qt::Alignment textAlignment READ textAlignment WRITE setTextAlignment)\par
6640   Q_PROPERTY({\cf18 double} rotation READ rotation WRITE setRotation)\par
6641   Q_PROPERTY(QMargins padding READ padding WRITE setPadding)\par
6643 {\cf17 public}:\par
6644   {\cf17 explicit} QCPItemText(QCustomPlot *parentPlot);\par
6645   {\cf17 virtual} ~QCPItemText() Q_DECL_OVERRIDE;\par
6646   \par
6647   {\cf20 // getters:}\par
6648   QColor color(){\cf17  const }\{ {\cf19 return} mColor; \}\par
6649   QColor selectedColor(){\cf17  const }\{ {\cf19 return} mSelectedColor; \}\par
6650   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6651   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6652   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
6653   QBrush selectedBrush(){\cf17  const }\{ {\cf19 return} mSelectedBrush; \}\par
6654   QFont font(){\cf17  const }\{ {\cf19 return} mFont; \}\par
6655   QFont selectedFont(){\cf17  const }\{ {\cf19 return} mSelectedFont; \}\par
6656   QString text(){\cf17  const }\{ {\cf19 return} mText; \}\par
6657   Qt::Alignment positionAlignment(){\cf17  const }\{ {\cf19 return} mPositionAlignment; \}\par
6658   Qt::Alignment textAlignment(){\cf17  const }\{ {\cf19 return} mTextAlignment; \}\par
6659   {\cf18 double} rotation(){\cf17  const }\{ {\cf19 return} mRotation; \}\par
6660   QMargins padding(){\cf17  const }\{ {\cf19 return} mPadding; \}\par
6661   \par
6662   {\cf20 // setters;}\par
6663   {\cf18 void} setColor({\cf17 const} QColor &color);\par
6664   {\cf18 void} setSelectedColor({\cf17 const} QColor &color);\par
6665   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6666   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6667   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
6668   {\cf18 void} setSelectedBrush({\cf17 const} QBrush &brush);\par
6669   {\cf18 void} setFont({\cf17 const} QFont &font);\par
6670   {\cf18 void} setSelectedFont({\cf17 const} QFont &font);\par
6671   {\cf18 void} setText({\cf17 const} QString &text);\par
6672   {\cf18 void} setPositionAlignment(Qt::Alignment alignment);\par
6673   {\cf18 void} setTextAlignment(Qt::Alignment alignment);\par
6674   {\cf18 void} setRotation({\cf18 double} degrees);\par
6675   {\cf18 void} setPadding({\cf17 const} QMargins &padding);\par
6676   \par
6677   {\cf20 // reimplemented virtual methods:}\par
6678   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6679   \par
6680   QCPItemPosition * const position;\par
6681   QCPItemAnchor * const topLeft;\par
6682   QCPItemAnchor * const top;\par
6683   QCPItemAnchor * const topRight;\par
6684   QCPItemAnchor * const right;\par
6685   QCPItemAnchor * const bottomRight;\par
6686   QCPItemAnchor * const bottom;\par
6687   QCPItemAnchor * const bottomLeft;\par
6688   QCPItemAnchor * const left;\par
6689   \par
6690 protected:\par
6691   enum AnchorIndex \{aiTopLeft, aiTop, aiTopRight, aiRight, aiBottomRight, aiBottom, aiBottomLeft, aiLeft\};\par
6692   \par
6693   {\cf20 // property members:}\par
6694   QColor mColor, mSelectedColor;\par
6695   QPen mPen, mSelectedPen;\par
6696   QBrush mBrush, mSelectedBrush;\par
6697   QFont mFont, mSelectedFont;\par
6698   QString mText;\par
6699   Qt::Alignment mPositionAlignment;\par
6700   Qt::Alignment mTextAlignment;\par
6701   {\cf18 double} mRotation;\par
6702   QMargins mPadding;\par
6703   \par
6704   {\cf20 // reimplemented virtual methods:}\par
6705   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6706   {\cf17 virtual} QPointF anchorPixelPosition({\cf18 int} anchorId) {\cf17 const} Q_DECL_OVERRIDE;\par
6707   \par
6708   {\cf20 // non-virtual methods:}\par
6709   QPointF getTextDrawPoint({\cf17 const} QPointF &pos, {\cf17 const} QRectF &rect, Qt::Alignment positionAlignment) {\cf17 const};\par
6710   QFont mainFont() {\cf17 const};\par
6711   QColor mainColor() {\cf17 const};\par
6712   QPen mainPen() {\cf17 const};\par
6713   QBrush mainBrush() {\cf17 const};\par
6714 \};\par
6715 \par
6716 {\cf20 /* end of 'src/items/item-text.h' */}\par
6717 \par
6718 \par
6719 {\cf20 /* including file 'src/items/item-ellipse.h' */}\par
6720 {\cf20 /* modified 2022-11-06T12:45:56, size 3890   */}\par
6721 \par
6722 {\cf17 class }QCP_LIB_DECL QCPItemEllipse : {\cf17 public} QCPAbstractItem\par
6723 \{\par
6724   Q_OBJECT\par
6726   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6727   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6728   Q_PROPERTY(QBrush brush READ brush WRITE setBrush)\par
6729   Q_PROPERTY(QBrush selectedBrush READ selectedBrush WRITE setSelectedBrush)\par
6731 {\cf17 public}:\par
6732   {\cf17 explicit} QCPItemEllipse(QCustomPlot *parentPlot);\par
6733   {\cf17 virtual} ~QCPItemEllipse() Q_DECL_OVERRIDE;\par
6734   \par
6735   {\cf20 // getters:}\par
6736   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6737   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6738   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
6739   QBrush selectedBrush(){\cf17  const }\{ {\cf19 return} mSelectedBrush; \}\par
6740   \par
6741   {\cf20 // setters;}\par
6742   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6743   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6744   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
6745   {\cf18 void} setSelectedBrush({\cf17 const} QBrush &brush);\par
6746   \par
6747   {\cf20 // reimplemented virtual methods:}\par
6748   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6749   \par
6750   QCPItemPosition * const topLeft;\par
6751   QCPItemPosition * const bottomRight;\par
6752   QCPItemAnchor * const topLeftRim;\par
6753   QCPItemAnchor * const top;\par
6754   QCPItemAnchor * const topRightRim;\par
6755   QCPItemAnchor * const right;\par
6756   QCPItemAnchor * const bottomRightRim;\par
6757   QCPItemAnchor * const bottom;\par
6758   QCPItemAnchor * const bottomLeftRim;\par
6759   QCPItemAnchor * const left;\par
6760   QCPItemAnchor * const center;\par
6761   \par
6762 protected:\par
6763   enum AnchorIndex \{aiTopLeftRim, aiTop, aiTopRightRim, aiRight, aiBottomRightRim, aiBottom, aiBottomLeftRim, aiLeft, aiCenter\};\par
6764   \par
6765   {\cf20 // property members:}\par
6766   QPen mPen, mSelectedPen;\par
6767   QBrush mBrush, mSelectedBrush;\par
6768   \par
6769   {\cf20 // reimplemented virtual methods:}\par
6770   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6771   {\cf17 virtual} QPointF anchorPixelPosition({\cf18 int} anchorId) {\cf17 const} Q_DECL_OVERRIDE;\par
6772   \par
6773   {\cf20 // non-virtual methods:}\par
6774   QPen mainPen() {\cf17 const};\par
6775   QBrush mainBrush() {\cf17 const};\par
6776 \};\par
6777 \par
6778 {\cf20 /* end of 'src/items/item-ellipse.h' */}\par
6779 \par
6780 \par
6781 {\cf20 /* including file 'src/items/item-pixmap.h' */}\par
6782 {\cf20 /* modified 2022-11-06T12:45:56, size 4407  */}\par
6783 \par
6784 {\cf17 class }QCP_LIB_DECL QCPItemPixmap : {\cf17 public} QCPAbstractItem\par
6785 \{\par
6786   Q_OBJECT\par
6788   Q_PROPERTY(QPixmap pixmap READ pixmap WRITE setPixmap)\par
6789   Q_PROPERTY({\cf18 bool} scaled READ scaled WRITE setScaled)\par
6790   Q_PROPERTY(Qt::AspectRatioMode aspectRatioMode READ aspectRatioMode)\par
6791   Q_PROPERTY(Qt::TransformationMode transformationMode READ transformationMode)\par
6792   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6793   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6795 {\cf17 public}:\par
6796   {\cf17 explicit} QCPItemPixmap(QCustomPlot *parentPlot);\par
6797   {\cf17 virtual} ~QCPItemPixmap() Q_DECL_OVERRIDE;\par
6798   \par
6799   {\cf20 // getters:}\par
6800   QPixmap pixmap(){\cf17  const }\{ {\cf19 return} mPixmap; \}\par
6801   {\cf18 bool} scaled(){\cf17  const }\{ {\cf19 return} mScaled; \}\par
6802   Qt::AspectRatioMode aspectRatioMode(){\cf17  const }\{ {\cf19 return} mAspectRatioMode; \}\par
6803   Qt::TransformationMode transformationMode(){\cf17  const }\{ {\cf19 return} mTransformationMode; \}\par
6804   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6805   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6806   \par
6807   {\cf20 // setters;}\par
6808   {\cf18 void} setPixmap({\cf17 const} QPixmap &pixmap);\par
6809   {\cf18 void} setScaled({\cf18 bool} scaled, Qt::AspectRatioMode aspectRatioMode=Qt::KeepAspectRatio, Qt::TransformationMode transformationMode=Qt::SmoothTransformation);\par
6810   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6811   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6812   \par
6813   {\cf20 // reimplemented virtual methods:}\par
6814   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6815   \par
6816   QCPItemPosition * const topLeft;\par
6817   QCPItemPosition * const bottomRight;\par
6818   QCPItemAnchor * const top;\par
6819   QCPItemAnchor * const topRight;\par
6820   QCPItemAnchor * const right;\par
6821   QCPItemAnchor * const bottom;\par
6822   QCPItemAnchor * const bottomLeft;\par
6823   QCPItemAnchor * const left;\par
6824   \par
6825 protected:\par
6826   enum AnchorIndex \{aiTop, aiTopRight, aiRight, aiBottom, aiBottomLeft, aiLeft\};\par
6827   \par
6828   {\cf20 // property members:}\par
6829   QPixmap mPixmap;\par
6830   QPixmap mScaledPixmap;\par
6831   {\cf18 bool} mScaled;\par
6832   {\cf18 bool} mScaledPixmapInvalidated;\par
6833   Qt::AspectRatioMode mAspectRatioMode;\par
6834   Qt::TransformationMode mTransformationMode;\par
6835   QPen mPen, mSelectedPen;\par
6836   \par
6837   {\cf20 // reimplemented virtual methods:}\par
6838   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6839   {\cf17 virtual} QPointF anchorPixelPosition({\cf18 int} anchorId) {\cf17 const} Q_DECL_OVERRIDE;\par
6840   \par
6841   {\cf20 // non-virtual methods:}\par
6842   {\cf18 void} updateScaledPixmap(QRect finalRect=QRect(), {\cf18 bool} flipHorz={\cf17 false}, {\cf18 bool} flipVert={\cf17 false});\par
6843   QRect getFinalRect({\cf18 bool} *flippedHorz={\cf17 nullptr}, {\cf18 bool} *flippedVert={\cf17 nullptr}) {\cf17 const};\par
6844   QPen mainPen() {\cf17 const};\par
6845 \};\par
6846 \par
6847 {\cf20 /* end of 'src/items/item-pixmap.h' */}\par
6848 \par
6849 \par
6850 {\cf20 /* including file 'src/items/item-tracer.h' */}\par
6851 {\cf20 /* modified 2022-11-06T12:45:56, size 4811  */}\par
6852 \par
6853 {\cf17 class }QCP_LIB_DECL QCPItemTracer : {\cf17 public} QCPAbstractItem\par
6854 \{\par
6855   Q_OBJECT\par
6857   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6858   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6859   Q_PROPERTY(QBrush brush READ brush WRITE setBrush)\par
6860   Q_PROPERTY(QBrush selectedBrush READ selectedBrush WRITE setSelectedBrush)\par
6861   Q_PROPERTY({\cf18 double} size READ size WRITE setSize)\par
6862   Q_PROPERTY(TracerStyle style READ style WRITE setStyle)\par
6863   Q_PROPERTY(QCPGraph* graph READ graph WRITE setGraph)\par
6864   Q_PROPERTY({\cf18 double} graphKey READ graphKey WRITE setGraphKey)\par
6865   Q_PROPERTY({\cf18 bool} interpolating READ interpolating WRITE setInterpolating)\par
6867 {\cf17 public}:\par
6873   {\cf17 enum} TracerStyle \{ tsNone        \par
6874                      ,tsPlus       \par
6875                      ,tsCrosshair  \par
6876                      ,tsCircle     \par
6877                      ,tsSquare     \par
6878                    \};\par
6879   Q_ENUMS(TracerStyle)\par
6880 \par
6881   explicit QCPItemTracer(QCustomPlot *parentPlot);\par
6882   virtual ~QCPItemTracer() Q_DECL_OVERRIDE;\par
6883 \par
6884   {\cf20 // getters:}\par
6885   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6886   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6887   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
6888   QBrush selectedBrush(){\cf17  const }\{ {\cf19 return} mSelectedBrush; \}\par
6889   {\cf18 double} size(){\cf17  const }\{ {\cf19 return} mSize; \}\par
6890   TracerStyle style(){\cf17  const }\{ {\cf19 return} mStyle; \}\par
6891   QCPGraph *graph(){\cf17  const }\{ {\cf19 return} mGraph; \}\par
6892   {\cf18 double} graphKey(){\cf17  const }\{ {\cf19 return} mGraphKey; \}\par
6893   {\cf18 bool} interpolating(){\cf17  const }\{ {\cf19 return} mInterpolating; \}\par
6894 \par
6895   {\cf20 // setters;}\par
6896   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6897   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6898   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
6899   {\cf18 void} setSelectedBrush({\cf17 const} QBrush &brush);\par
6900   {\cf18 void} setSize({\cf18 double} size);\par
6901   {\cf18 void} setStyle(TracerStyle style);\par
6902   {\cf18 void} setGraph(QCPGraph *graph);\par
6903   {\cf18 void} setGraphKey({\cf18 double} key);\par
6904   {\cf18 void} setInterpolating({\cf18 bool} enabled);\par
6905 \par
6906   {\cf20 // reimplemented virtual methods:}\par
6907   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6908   \par
6909   {\cf20 // non-virtual methods:}\par
6910   {\cf18 void} updatePosition();\par
6911 \par
6912   QCPItemPosition * const position;\par
6913 \par
6914 protected:\par
6915   {\cf20 // property members:}\par
6916   QPen mPen, mSelectedPen;\par
6917   QBrush mBrush, mSelectedBrush;\par
6918   {\cf18 double} mSize;\par
6919   TracerStyle mStyle;\par
6920   QCPGraph *mGraph;\par
6921   {\cf18 double} mGraphKey;\par
6922   {\cf18 bool} mInterpolating;\par
6923 \par
6924   {\cf20 // reimplemented virtual methods:}\par
6925   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6926 \par
6927   {\cf20 // non-virtual methods:}\par
6928   QPen mainPen() const;\par
6929   QBrush mainBrush() const;\par
6930 \};\par
6931 Q_DECLARE_METATYPE(QCPItemTracer::TracerStyle)\par
6932 \par
6933 {\cf20 /* end of 'src/items/item-tracer.h' */}\par
6934 \par
6935 \par
6936 {\cf20 /* including file 'src/items/item-bracket.h' */}\par
6937 {\cf20 /* modified 2022-11-06T12:45:56, size 3991   */}\par
6938 \par
6939 class QCP_LIB_DECL QCPItemBracket : public QCPAbstractItem\par
6940 \{\par
6941   Q_OBJECT\par
6943   Q_PROPERTY(QPen pen READ pen WRITE setPen)\par
6944   Q_PROPERTY(QPen selectedPen READ selectedPen WRITE setSelectedPen)\par
6945   Q_PROPERTY({\cf18 double} length READ length WRITE setLength)\par
6946   Q_PROPERTY(BracketStyle style READ style WRITE setStyle)\par
6948 {\cf17 public}:\par
6955   {\cf17 enum} BracketStyle \{ bsSquare  \par
6956                       ,bsRound  \par
6957                       ,bsCurly  \par
6958                       ,bsCalligraphic \par
6959   \};\par
6960   Q_ENUMS(BracketStyle)\par
6961 \par
6962   explicit QCPItemBracket(QCustomPlot *parentPlot);\par
6963   virtual ~QCPItemBracket() Q_DECL_OVERRIDE;\par
6964   \par
6965   {\cf20 // getters:}\par
6966   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
6967   QPen selectedPen(){\cf17  const }\{ {\cf19 return} mSelectedPen; \}\par
6968   {\cf18 double} length(){\cf17  const }\{ {\cf19 return} mLength; \}\par
6969   BracketStyle style(){\cf17  const }\{ {\cf19 return} mStyle; \}\par
6970   \par
6971   {\cf20 // setters;}\par
6972   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
6973   {\cf18 void} setSelectedPen({\cf17 const} QPen &pen);\par
6974   {\cf18 void} setLength({\cf18 double} length);\par
6975   {\cf18 void} setStyle(BracketStyle style);\par
6976   \par
6977   {\cf20 // reimplemented virtual methods:}\par
6978   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details={\cf17 nullptr}) const Q_DECL_OVERRIDE;\par
6979   \par
6980   QCPItemPosition * const left;\par
6981   QCPItemPosition * const right;\par
6982   QCPItemAnchor * const center;\par
6983   \par
6984 protected:\par
6985   {\cf20 // property members:}\par
6986   enum AnchorIndex \{aiCenter\};\par
6987   QPen mPen, mSelectedPen;\par
6988   {\cf18 double} mLength;\par
6989   BracketStyle mStyle;\par
6990   \par
6991   {\cf20 // reimplemented virtual methods:}\par
6992   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
6993   {\cf17 virtual} QPointF anchorPixelPosition({\cf18 int} anchorId) {\cf17 const} Q_DECL_OVERRIDE;\par
6994   \par
6995   {\cf20 // non-virtual methods:}\par
6996   QPen mainPen() {\cf17 const};\par
6997 \};\par
6998 Q_DECLARE_METATYPE(QCPItemBracket::BracketStyle)\par
6999 \par
7000 {\cf20 /* end of 'src/items/item-bracket.h' */}\par
7001 \par
7002 \par
7003 {\cf20 /* including file 'src/polar/radialaxis.h'  */}\par
7004 {\cf20 /* modified 2022-11-06T12:45:56, size 12227 */}\par
7005 \par
7006 \par
7007 class QCP_LIB_DECL QCPPolarAxisRadial : public QCPLayerable\par
7008 \{\par
7009   Q_OBJECT\par
7011   \par
7013 {\cf17 public}:\par
7017   {\cf17 enum} AngleReference \{ arAbsolute    \par
7018                        ,arAngularAxis \par
7019                       \};\par
7020   Q_ENUMS(AngleReference)\par
7025   enum ScaleType \{ stLinear       \par
7026                    ,stLogarithmic \par
7027                  \};\par
7028   Q_ENUMS(ScaleType)\par
7033   enum SelectablePart \{ spNone        = 0      \par
7034                         ,spAxis       = 0x001  \par
7035                         ,spTickLabels = 0x002  \par
7036                         ,spAxisLabel  = 0x004  \par
7037                       \};\par
7038   Q_ENUMS(SelectablePart)\par
7039   Q_FLAGS(SelectableParts)\par
7040   Q_DECLARE_FLAGS(SelectableParts, SelectablePart)\par
7041   \par
7042   enum LabelMode \{ lmUpright   \par
7043                    ,lmRotated \par
7044                  \};\par
7045   Q_ENUMS(LabelMode)\par
7046   \par
7047   explicit QCPPolarAxisRadial(QCPPolarAxisAngular *parent);\par
7048   virtual ~QCPPolarAxisRadial();\par
7049   \par
7050   {\cf20 // getters:}\par
7051   {\cf18 bool} rangeDrag(){\cf17  const }\{ {\cf19 return} mRangeDrag; \}\par
7052   {\cf18 bool} rangeZoom(){\cf17  const }\{ {\cf19 return} mRangeZoom; \}\par
7053   {\cf18 double} rangeZoomFactor(){\cf17  const }\{ {\cf19 return} mRangeZoomFactor; \}\par
7054   \par
7055   QCPPolarAxisAngular *angularAxis(){\cf17  const }\{ {\cf19 return} mAngularAxis; \}\par
7056   ScaleType scaleType(){\cf17  const }\{ {\cf19 return} mScaleType; \}\par
7057   {\cf17 const} QCPRange range(){\cf17  const }\{ {\cf19 return} mRange; \}\par
7058   {\cf18 bool} rangeReversed(){\cf17  const }\{ {\cf19 return} mRangeReversed; \}\par
7059   {\cf18 double} angle(){\cf17  const }\{ {\cf19 return} mAngle; \}\par
7060   AngleReference angleReference(){\cf17  const }\{ {\cf19 return} mAngleReference; \}\par
7061   QSharedPointer<QCPAxisTicker> ticker(){\cf17  const }\{ {\cf19 return} mTicker; \}\par
7062   {\cf18 bool} ticks(){\cf17  const }\{ {\cf19 return} mTicks; \}\par
7063   {\cf18 bool} tickLabels(){\cf17  const }\{ {\cf19 return} mTickLabels; \}\par
7064   {\cf18 int} tickLabelPadding(){\cf17  const }\{ {\cf19 return} mLabelPainter.padding(); \}\par
7065   QFont tickLabelFont(){\cf17  const }\{ {\cf19 return} mTickLabelFont; \}\par
7066   QColor tickLabelColor(){\cf17  const }\{ {\cf19 return} mTickLabelColor; \}\par
7067   {\cf18 double} tickLabelRotation(){\cf17  const }\{ {\cf19 return} mLabelPainter.rotation(); \}\par
7068   LabelMode tickLabelMode() {\cf17 const};\par
7069   QString numberFormat() {\cf17 const};\par
7070   {\cf18 int} numberPrecision(){\cf17  const }\{ {\cf19 return} mNumberPrecision; \}\par
7071   QVector<double> tickVector(){\cf17  const }\{ {\cf19 return} mTickVector; \}\par
7072   QVector<double> subTickVector(){\cf17  const }\{ {\cf19 return} mSubTickVector; \}\par
7073   QVector<QString> tickVectorLabels(){\cf17  const }\{ {\cf19 return} mTickVectorLabels; \}\par
7074   {\cf18 int} tickLengthIn() {\cf17 const};\par
7075   {\cf18 int} tickLengthOut() {\cf17 const};\par
7076   {\cf18 bool} subTicks(){\cf17  const }\{ {\cf19 return} mSubTicks; \}\par
7077   {\cf18 int} subTickLengthIn() {\cf17 const};\par
7078   {\cf18 int} subTickLengthOut() {\cf17 const};\par
7079   QPen basePen(){\cf17  const }\{ {\cf19 return} mBasePen; \}\par
7080   QPen tickPen(){\cf17  const }\{ {\cf19 return} mTickPen; \}\par
7081   QPen subTickPen(){\cf17  const }\{ {\cf19 return} mSubTickPen; \}\par
7082   QFont labelFont(){\cf17  const }\{ {\cf19 return} mLabelFont; \}\par
7083   QColor labelColor(){\cf17  const }\{ {\cf19 return} mLabelColor; \}\par
7084   QString label(){\cf17  const }\{ {\cf19 return} mLabel; \}\par
7085   {\cf18 int} labelPadding() {\cf17 const};\par
7086   SelectableParts selectedParts(){\cf17  const }\{ {\cf19 return} mSelectedParts; \}\par
7087   SelectableParts selectableParts(){\cf17  const }\{ {\cf19 return} mSelectableParts; \}\par
7088   QFont selectedTickLabelFont(){\cf17  const }\{ {\cf19 return} mSelectedTickLabelFont; \}\par
7089   QFont selectedLabelFont(){\cf17  const }\{ {\cf19 return} mSelectedLabelFont; \}\par
7090   QColor selectedTickLabelColor(){\cf17  const }\{ {\cf19 return} mSelectedTickLabelColor; \}\par
7091   QColor selectedLabelColor(){\cf17  const }\{ {\cf19 return} mSelectedLabelColor; \}\par
7092   QPen selectedBasePen(){\cf17  const }\{ {\cf19 return} mSelectedBasePen; \}\par
7093   QPen selectedTickPen(){\cf17  const }\{ {\cf19 return} mSelectedTickPen; \}\par
7094   QPen selectedSubTickPen(){\cf17  const }\{ {\cf19 return} mSelectedSubTickPen; \}\par
7095   \par
7096   {\cf20 // setters:}\par
7097   {\cf18 void} setRangeDrag({\cf18 bool} enabled);\par
7098   {\cf18 void} setRangeZoom({\cf18 bool} enabled);\par
7099   {\cf18 void} setRangeZoomFactor({\cf18 double} factor);\par
7100   \par
7101   Q_SLOT {\cf18 void} setScaleType(QCPPolarAxisRadial::ScaleType type);\par
7102   Q_SLOT {\cf18 void} setRange({\cf17 const} QCPRange &range);\par
7103   {\cf18 void} setRange({\cf18 double} lower, {\cf18 double} upper);\par
7104   {\cf18 void} setRange({\cf18 double} position, {\cf18 double} size, Qt::AlignmentFlag alignment);\par
7105   {\cf18 void} setRangeLower({\cf18 double} lower);\par
7106   {\cf18 void} setRangeUpper({\cf18 double} upper);\par
7107   {\cf18 void} setRangeReversed({\cf18 bool} reversed);\par
7108   {\cf18 void} setAngle({\cf18 double} degrees);\par
7109   {\cf18 void} setAngleReference(AngleReference reference);\par
7110   {\cf18 void} setTicker(QSharedPointer<QCPAxisTicker> ticker);\par
7111   {\cf18 void} setTicks({\cf18 bool} show);\par
7112   {\cf18 void} setTickLabels({\cf18 bool} show);\par
7113   {\cf18 void} setTickLabelPadding({\cf18 int} padding);\par
7114   {\cf18 void} setTickLabelFont({\cf17 const} QFont &font);\par
7115   {\cf18 void} setTickLabelColor({\cf17 const} QColor &color);\par
7116   {\cf18 void} setTickLabelRotation({\cf18 double} degrees);\par
7117   {\cf18 void} setTickLabelMode(LabelMode mode);\par
7118   {\cf18 void} setNumberFormat({\cf17 const} QString &formatCode);\par
7119   {\cf18 void} setNumberPrecision({\cf18 int} precision);\par
7120   {\cf18 void} setTickLength({\cf18 int} inside, {\cf18 int} outside=0);\par
7121   {\cf18 void} setTickLengthIn({\cf18 int} inside);\par
7122   {\cf18 void} setTickLengthOut({\cf18 int} outside);\par
7123   {\cf18 void} setSubTicks({\cf18 bool} show);\par
7124   {\cf18 void} setSubTickLength({\cf18 int} inside, {\cf18 int} outside=0);\par
7125   {\cf18 void} setSubTickLengthIn({\cf18 int} inside);\par
7126   {\cf18 void} setSubTickLengthOut({\cf18 int} outside);\par
7127   {\cf18 void} setBasePen({\cf17 const} QPen &pen);\par
7128   {\cf18 void} setTickPen({\cf17 const} QPen &pen);\par
7129   {\cf18 void} setSubTickPen({\cf17 const} QPen &pen);\par
7130   {\cf18 void} setLabelFont({\cf17 const} QFont &font);\par
7131   {\cf18 void} setLabelColor({\cf17 const} QColor &color);\par
7132   {\cf18 void} setLabel({\cf17 const} QString &str);\par
7133   {\cf18 void} setLabelPadding({\cf18 int} padding);\par
7134   {\cf18 void} setSelectedTickLabelFont({\cf17 const} QFont &font);\par
7135   {\cf18 void} setSelectedLabelFont({\cf17 const} QFont &font);\par
7136   {\cf18 void} setSelectedTickLabelColor({\cf17 const} QColor &color);\par
7137   {\cf18 void} setSelectedLabelColor({\cf17 const} QColor &color);\par
7138   {\cf18 void} setSelectedBasePen({\cf17 const} QPen &pen);\par
7139   {\cf18 void} setSelectedTickPen({\cf17 const} QPen &pen);\par
7140   {\cf18 void} setSelectedSubTickPen({\cf17 const} QPen &pen);\par
7141   Q_SLOT {\cf18 void} setSelectableParts({\cf17 const} QCPPolarAxisRadial::SelectableParts &selectableParts);\par
7142   Q_SLOT {\cf18 void} setSelectedParts({\cf17 const} QCPPolarAxisRadial::SelectableParts &selectedParts);\par
7143   \par
7144   {\cf20 // reimplemented virtual methods:}\par
7145   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE;\par
7146   \par
7147   {\cf20 // non-property methods:}\par
7148   {\cf18 void} moveRange({\cf18 double} diff);\par
7149   {\cf18 void} scaleRange({\cf18 double} factor);\par
7150   {\cf18 void} scaleRange({\cf18 double} factor, {\cf18 double} center);\par
7151   {\cf18 void} rescale({\cf18 bool} onlyVisiblePlottables=false);\par
7152   {\cf18 void} pixelToCoord(QPointF pixelPos, {\cf18 double} &angleCoord, {\cf18 double} &radiusCoord) const;\par
7153   QPointF coordToPixel({\cf18 double} angleCoord, {\cf18 double} radiusCoord) const;\par
7154   {\cf18 double} coordToRadius({\cf18 double} coord) const;\par
7155   {\cf18 double} radiusToCoord({\cf18 double} radius) const;\par
7156   SelectablePart getPartAt(const QPointF &pos) const;\par
7157   \par
7158 signals:\par
7159   {\cf18 void} rangeChanged(const QCPRange &newRange);\par
7160   {\cf18 void} rangeChanged(const QCPRange &newRange, const QCPRange &oldRange);\par
7161   {\cf18 void} scaleTypeChanged(QCPPolarAxisRadial::ScaleType scaleType);\par
7162   {\cf18 void} selectionChanged(const QCPPolarAxisRadial::SelectableParts &parts);\par
7163   {\cf18 void} selectableChanged(const QCPPolarAxisRadial::SelectableParts &parts);\par
7164 \par
7165 protected:\par
7166   {\cf20 // property members:}\par
7167   {\cf18 bool} mRangeDrag;\par
7168   {\cf18 bool} mRangeZoom;\par
7169   {\cf18 double} mRangeZoomFactor;\par
7170   \par
7171   {\cf20 // axis base:}\par
7172   QCPPolarAxisAngular *mAngularAxis;\par
7173   {\cf18 double} mAngle;\par
7174   AngleReference mAngleReference;\par
7175   SelectableParts mSelectableParts, mSelectedParts;\par
7176   QPen mBasePen, mSelectedBasePen;\par
7177   {\cf20 // axis label:}\par
7178   {\cf18 int} mLabelPadding;\par
7179   QString mLabel;\par
7180   QFont mLabelFont, mSelectedLabelFont;\par
7181   QColor mLabelColor, mSelectedLabelColor;\par
7182   {\cf20 // tick labels:}\par
7183   {\cf20 //int mTickLabelPadding; in label painter}\par
7184   {\cf18 bool} mTickLabels;\par
7185   {\cf20 //double mTickLabelRotation; in label painter}\par
7186   QFont mTickLabelFont, mSelectedTickLabelFont;\par
7187   QColor mTickLabelColor, mSelectedTickLabelColor;\par
7188   {\cf18 int} mNumberPrecision;\par
7189   QLatin1Char mNumberFormatChar;\par
7190   {\cf18 bool} mNumberBeautifulPowers;\par
7191   {\cf18 bool} mNumberMultiplyCross;\par
7192   {\cf20 // ticks and subticks:}\par
7193   {\cf18 bool} mTicks;\par
7194   {\cf18 bool} mSubTicks;\par
7195   {\cf18 int} mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;\par
7196   QPen mTickPen, mSelectedTickPen;\par
7197   QPen mSubTickPen, mSelectedSubTickPen;\par
7198   {\cf20 // scale and range:}\par
7199   QCPRange mRange;\par
7200   {\cf18 bool} mRangeReversed;\par
7201   ScaleType mScaleType;\par
7202   \par
7203   {\cf20 // non-property members:}\par
7204   QPointF mCenter;\par
7205   {\cf18 double} mRadius;\par
7206   QSharedPointer<QCPAxisTicker> mTicker;\par
7207   QVector<{\cf18 double}> mTickVector;\par
7208   QVector<QString> mTickVectorLabels;\par
7209   QVector<{\cf18 double}> mSubTickVector;\par
7210   {\cf18 bool} mDragging;\par
7211   QCPRange mDragStartRange;\par
7212   QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;\par
7213   QCPLabelPainterPrivate mLabelPainter;\par
7214   \par
7215   {\cf20 // reimplemented virtual methods:}\par
7216   virtual {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) const Q_DECL_OVERRIDE;\par
7217   virtual {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
7218   virtual QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
7219   {\cf20 // events:}\par
7220   virtual {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, const QVariant &details, {\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
7221   virtual {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged) Q_DECL_OVERRIDE;\par
7222   {\cf20 // mouse events:}\par
7223   virtual {\cf18 void} mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;\par
7224   virtual {\cf18 void} mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
7225   virtual {\cf18 void} mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
7226   virtual {\cf18 void} wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\par
7227   \par
7228   {\cf20 // non-virtual methods:}\par
7229   {\cf18 void} updateGeometry(const QPointF &center, {\cf18 double} radius);\par
7230   {\cf18 void} setupTickVectors();\par
7231   QPen getBasePen() const;\par
7232   QPen getTickPen() const;\par
7233   QPen getSubTickPen() const;\par
7234   QFont getTickLabelFont() const;\par
7235   QFont getLabelFont() const;\par
7236   QColor getTickLabelColor() const;\par
7237   QColor getLabelColor() const;\par
7238   \par
7239 private:\par
7240   Q_DISABLE_COPY(QCPPolarAxisRadial)\par
7241   \par
7242   friend class QCustomPlot;\par
7243   friend class QCPPolarAxisAngular;\par
7244 \};\par
7245 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPolarAxisRadial::SelectableParts)\par
7246 Q_DECLARE_METATYPE(QCPPolarAxisRadial::AngleReference)\par
7247 Q_DECLARE_METATYPE(QCPPolarAxisRadial::ScaleType)\par
7248 Q_DECLARE_METATYPE(QCPPolarAxisRadial::SelectablePart)\par
7249 \par
7250 \par
7251 \par
7252 {\cf20 /* end of 'src/polar/radialaxis.h' */}\par
7253 \par
7254 \par
7255 {\cf20 /* including file 'src/polar/layoutelement-angularaxis.h' */}\par
7256 {\cf20 /* modified 2022-11-06T12:45:56, size 13461               */}\par
7257 \par
7258 class QCP_LIB_DECL QCPPolarAxisAngular : public QCPLayoutElement\par
7259 \{\par
7260   Q_OBJECT\par
7262   \par
7264 {\cf17 public}:\par
7269   {\cf17 enum} SelectablePart \{ spNone        = 0      \par
7270                         ,spAxis       = 0x001  \par
7271                         ,spTickLabels = 0x002  \par
7272                         ,spAxisLabel  = 0x004  \par
7273                       \};\par
7274   Q_ENUMS(SelectablePart)\par
7275   Q_FLAGS(SelectableParts)\par
7276   Q_DECLARE_FLAGS(SelectableParts, SelectablePart)\par
7277   \par
7278   \par
7281   enum LabelMode \{ lmUpright   \par
7282                    ,lmRotated \par
7283                  \};\par
7284   Q_ENUMS(LabelMode)\par
7285   \par
7286   explicit QCPPolarAxisAngular(QCustomPlot *parentPlot);\par
7287   virtual ~QCPPolarAxisAngular();\par
7288   \par
7289   {\cf20 // getters:}\par
7290   QPixmap background(){\cf17  const }\{ {\cf19 return} mBackgroundPixmap; \}\par
7291   QBrush backgroundBrush(){\cf17  const }\{ {\cf19 return} mBackgroundBrush; \}\par
7292   {\cf18 bool} backgroundScaled(){\cf17  const }\{ {\cf19 return} mBackgroundScaled; \}\par
7293   Qt::AspectRatioMode backgroundScaledMode(){\cf17  const }\{ {\cf19 return} mBackgroundScaledMode; \}\par
7294   {\cf18 bool} rangeDrag(){\cf17  const }\{ {\cf19 return} mRangeDrag; \}\par
7295   {\cf18 bool} rangeZoom(){\cf17  const }\{ {\cf19 return} mRangeZoom; \}\par
7296   {\cf18 double} rangeZoomFactor(){\cf17  const }\{ {\cf19 return} mRangeZoomFactor; \}\par
7297   \par
7298   {\cf17 const} QCPRange range(){\cf17  const }\{ {\cf19 return} mRange; \}\par
7299   {\cf18 bool} rangeReversed(){\cf17  const }\{ {\cf19 return} mRangeReversed; \}\par
7300   {\cf18 double} angle(){\cf17  const }\{ {\cf19 return} mAngle; \}\par
7301   QSharedPointer<QCPAxisTicker> ticker(){\cf17  const }\{ {\cf19 return} mTicker; \}\par
7302   {\cf18 bool} ticks(){\cf17  const }\{ {\cf19 return} mTicks; \}\par
7303   {\cf18 bool} tickLabels(){\cf17  const }\{ {\cf19 return} mTickLabels; \}\par
7304   {\cf18 int} tickLabelPadding(){\cf17  const }\{ {\cf19 return} mLabelPainter.padding(); \}\par
7305   QFont tickLabelFont(){\cf17  const }\{ {\cf19 return} mTickLabelFont; \}\par
7306   QColor tickLabelColor(){\cf17  const }\{ {\cf19 return} mTickLabelColor; \}\par
7307   {\cf18 double} tickLabelRotation(){\cf17  const }\{ {\cf19 return} mLabelPainter.rotation(); \}\par
7308   LabelMode tickLabelMode() {\cf17 const};\par
7309   QString numberFormat() {\cf17 const};\par
7310   {\cf18 int} numberPrecision(){\cf17  const }\{ {\cf19 return} mNumberPrecision; \}\par
7311   QVector<double> tickVector(){\cf17  const }\{ {\cf19 return} mTickVector; \}\par
7312   QVector<QString> tickVectorLabels(){\cf17  const }\{ {\cf19 return} mTickVectorLabels; \}\par
7313   {\cf18 int} tickLengthIn(){\cf17  const }\{ {\cf19 return} mTickLengthIn; \}\par
7314   {\cf18 int} tickLengthOut(){\cf17  const }\{ {\cf19 return} mTickLengthOut; \}\par
7315   {\cf18 bool} subTicks(){\cf17  const }\{ {\cf19 return} mSubTicks; \}\par
7316   {\cf18 int} subTickLengthIn(){\cf17  const }\{ {\cf19 return} mSubTickLengthIn; \}\par
7317   {\cf18 int} subTickLengthOut(){\cf17  const }\{ {\cf19 return} mSubTickLengthOut; \}\par
7318   QPen basePen(){\cf17  const }\{ {\cf19 return} mBasePen; \}\par
7319   QPen tickPen(){\cf17  const }\{ {\cf19 return} mTickPen; \}\par
7320   QPen subTickPen(){\cf17  const }\{ {\cf19 return} mSubTickPen; \}\par
7321   QFont labelFont(){\cf17  const }\{ {\cf19 return} mLabelFont; \}\par
7322   QColor labelColor(){\cf17  const }\{ {\cf19 return} mLabelColor; \}\par
7323   QString label(){\cf17  const }\{ {\cf19 return} mLabel; \}\par
7324   {\cf18 int} labelPadding(){\cf17  const }\{ {\cf19 return} mLabelPadding; \}\par
7325   SelectableParts selectedParts(){\cf17  const }\{ {\cf19 return} mSelectedParts; \}\par
7326   SelectableParts selectableParts(){\cf17  const }\{ {\cf19 return} mSelectableParts; \}\par
7327   QFont selectedTickLabelFont(){\cf17  const }\{ {\cf19 return} mSelectedTickLabelFont; \}\par
7328   QFont selectedLabelFont(){\cf17  const }\{ {\cf19 return} mSelectedLabelFont; \}\par
7329   QColor selectedTickLabelColor(){\cf17  const }\{ {\cf19 return} mSelectedTickLabelColor; \}\par
7330   QColor selectedLabelColor(){\cf17  const }\{ {\cf19 return} mSelectedLabelColor; \}\par
7331   QPen selectedBasePen(){\cf17  const }\{ {\cf19 return} mSelectedBasePen; \}\par
7332   QPen selectedTickPen(){\cf17  const }\{ {\cf19 return} mSelectedTickPen; \}\par
7333   QPen selectedSubTickPen(){\cf17  const }\{ {\cf19 return} mSelectedSubTickPen; \}\par
7334   QCPPolarGrid *grid(){\cf17  const }\{ {\cf19 return} mGrid; \}\par
7335   \par
7336   {\cf20 // setters:}\par
7337   {\cf18 void} setBackground({\cf17 const} QPixmap &pm);\par
7338   {\cf18 void} setBackground({\cf17 const} QPixmap &pm, {\cf18 bool} scaled, Qt::AspectRatioMode mode=Qt::KeepAspectRatioByExpanding);\par
7339   {\cf18 void} setBackground({\cf17 const} QBrush &brush);\par
7340   {\cf18 void} setBackgroundScaled({\cf18 bool} scaled);\par
7341   {\cf18 void} setBackgroundScaledMode(Qt::AspectRatioMode mode);\par
7342   {\cf18 void} setRangeDrag({\cf18 bool} enabled);\par
7343   {\cf18 void} setRangeZoom({\cf18 bool} enabled);\par
7344   {\cf18 void} setRangeZoomFactor({\cf18 double} factor);\par
7345   \par
7346   Q_SLOT {\cf18 void} setRange({\cf17 const} QCPRange &range);\par
7347   {\cf18 void} setRange({\cf18 double} lower, {\cf18 double} upper);\par
7348   {\cf18 void} setRange({\cf18 double} position, {\cf18 double} size, Qt::AlignmentFlag alignment);\par
7349   {\cf18 void} setRangeLower({\cf18 double} lower);\par
7350   {\cf18 void} setRangeUpper({\cf18 double} upper);\par
7351   {\cf18 void} setRangeReversed({\cf18 bool} reversed);\par
7352   {\cf18 void} setAngle({\cf18 double} degrees);\par
7353   {\cf18 void} setTicker(QSharedPointer<QCPAxisTicker> ticker);\par
7354   {\cf18 void} setTicks({\cf18 bool} show);\par
7355   {\cf18 void} setTickLabels({\cf18 bool} show);\par
7356   {\cf18 void} setTickLabelPadding({\cf18 int} padding);\par
7357   {\cf18 void} setTickLabelFont({\cf17 const} QFont &font);\par
7358   {\cf18 void} setTickLabelColor({\cf17 const} QColor &color);\par
7359   {\cf18 void} setTickLabelRotation({\cf18 double} degrees);\par
7360   {\cf18 void} setTickLabelMode(LabelMode mode);\par
7361   {\cf18 void} setNumberFormat({\cf17 const} QString &formatCode);\par
7362   {\cf18 void} setNumberPrecision({\cf18 int} precision);\par
7363   {\cf18 void} setTickLength({\cf18 int} inside, {\cf18 int} outside=0);\par
7364   {\cf18 void} setTickLengthIn({\cf18 int} inside);\par
7365   {\cf18 void} setTickLengthOut({\cf18 int} outside);\par
7366   {\cf18 void} setSubTicks({\cf18 bool} show);\par
7367   {\cf18 void} setSubTickLength({\cf18 int} inside, {\cf18 int} outside=0);\par
7368   {\cf18 void} setSubTickLengthIn({\cf18 int} inside);\par
7369   {\cf18 void} setSubTickLengthOut({\cf18 int} outside);\par
7370   {\cf18 void} setBasePen({\cf17 const} QPen &pen);\par
7371   {\cf18 void} setTickPen({\cf17 const} QPen &pen);\par
7372   {\cf18 void} setSubTickPen({\cf17 const} QPen &pen);\par
7373   {\cf18 void} setLabelFont({\cf17 const} QFont &font);\par
7374   {\cf18 void} setLabelColor({\cf17 const} QColor &color);\par
7375   {\cf18 void} setLabel({\cf17 const} QString &str);\par
7376   {\cf18 void} setLabelPadding({\cf18 int} padding);\par
7377   {\cf18 void} setLabelPosition(Qt::AlignmentFlag position);\par
7378   {\cf18 void} setSelectedTickLabelFont({\cf17 const} QFont &font);\par
7379   {\cf18 void} setSelectedLabelFont({\cf17 const} QFont &font);\par
7380   {\cf18 void} setSelectedTickLabelColor({\cf17 const} QColor &color);\par
7381   {\cf18 void} setSelectedLabelColor({\cf17 const} QColor &color);\par
7382   {\cf18 void} setSelectedBasePen({\cf17 const} QPen &pen);\par
7383   {\cf18 void} setSelectedTickPen({\cf17 const} QPen &pen);\par
7384   {\cf18 void} setSelectedSubTickPen({\cf17 const} QPen &pen);\par
7385   Q_SLOT {\cf18 void} setSelectableParts({\cf17 const} QCPPolarAxisAngular::SelectableParts &selectableParts);\par
7386   Q_SLOT {\cf18 void} setSelectedParts({\cf17 const} QCPPolarAxisAngular::SelectableParts &selectedParts);\par
7387   \par
7388   {\cf20 // reimplemented virtual methods:}\par
7389   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details=0) const Q_DECL_OVERRIDE;\par
7390   virtual {\cf18 void} update(UpdatePhase phase) Q_DECL_OVERRIDE;\par
7391   virtual QList<QCPLayoutElement*> elements({\cf18 bool} recursive) const Q_DECL_OVERRIDE;\par
7392   \par
7393   {\cf20 // non-property methods:}\par
7394   {\cf18 bool} removeGraph(QCPPolarGraph *graph);\par
7395   {\cf18 int} radialAxisCount() const;\par
7396   QCPPolarAxisRadial *radialAxis({\cf18 int} index=0) const;\par
7397   QList<QCPPolarAxisRadial*> radialAxes() const;\par
7398   QCPPolarAxisRadial *addRadialAxis(QCPPolarAxisRadial *axis=0);\par
7399   {\cf18 bool} removeRadialAxis(QCPPolarAxisRadial *axis);\par
7400   QCPLayoutInset *insetLayout(){\cf17  const }\{ {\cf19 return} mInsetLayout; \}\par
7401   QRegion exactClipRegion() {\cf17 const};\par
7402   \par
7403   {\cf18 void} moveRange({\cf18 double} diff);\par
7404   {\cf18 void} scaleRange({\cf18 double} factor);\par
7405   {\cf18 void} scaleRange({\cf18 double} factor, {\cf18 double} center);\par
7406   {\cf18 void} rescale({\cf18 bool} onlyVisiblePlottables={\cf17 false});\par
7407   {\cf18 double} coordToAngleRad({\cf18 double} coord){\cf17  const }\{ {\cf19 return} mAngleRad+(coord-mRange.lower)/mRange.size()*(mRangeReversed ? -2.0*M_PI : 2.0*M_PI); \} {\cf20 // mention in doc that return doesn't wrap}\par
7408   {\cf18 double} angleRadToCoord({\cf18 double} angleRad){\cf17  const }\{ {\cf19 return} mRange.lower+(angleRad-mAngleRad)/(mRangeReversed ? -2.0*M_PI : 2.0*M_PI)*mRange.size(); \}\par
7409   {\cf18 void} pixelToCoord(QPointF pixelPos, {\cf18 double} &angleCoord, {\cf18 double} &radiusCoord) {\cf17 const};\par
7410   QPointF coordToPixel({\cf18 double} angleCoord, {\cf18 double} radiusCoord) {\cf17 const};\par
7411   SelectablePart getPartAt({\cf17 const} QPointF &pos) {\cf17 const};\par
7412   \par
7413   {\cf20 // read-only interface imitating a QRect:}\par
7414   {\cf18 int} left(){\cf17  const }\{ {\cf19 return} mRect.left(); \}\par
7415   {\cf18 int} right(){\cf17  const }\{ {\cf19 return} mRect.right(); \}\par
7416   {\cf18 int} top(){\cf17  const }\{ {\cf19 return} mRect.top(); \}\par
7417   {\cf18 int} bottom(){\cf17  const }\{ {\cf19 return} mRect.bottom(); \}\par
7418   {\cf18 int} width(){\cf17  const }\{ {\cf19 return} mRect.width(); \}\par
7419   {\cf18 int} height(){\cf17  const }\{ {\cf19 return} mRect.height(); \}\par
7420   QSize size(){\cf17  const }\{ {\cf19 return} mRect.size(); \}\par
7421   QPoint topLeft(){\cf17  const }\{ {\cf19 return} mRect.topLeft(); \}\par
7422   QPoint topRight(){\cf17  const }\{ {\cf19 return} mRect.topRight(); \}\par
7423   QPoint bottomLeft(){\cf17  const }\{ {\cf19 return} mRect.bottomLeft(); \}\par
7424   QPoint bottomRight(){\cf17  const }\{ {\cf19 return} mRect.bottomRight(); \}\par
7425   QPointF center(){\cf17  const }\{ {\cf19 return} mCenter; \}\par
7426   {\cf18 double} radius(){\cf17  const }\{ {\cf19 return} mRadius; \}\par
7427   \par
7428 signals:\par
7429   {\cf18 void} rangeChanged({\cf17 const} QCPRange &newRange);\par
7430   {\cf18 void} rangeChanged({\cf17 const} QCPRange &newRange, {\cf17 const} QCPRange &oldRange);\par
7431   {\cf18 void} selectionChanged({\cf17 const} QCPPolarAxisAngular::SelectableParts &parts);\par
7432   {\cf18 void} selectableChanged({\cf17 const} QCPPolarAxisAngular::SelectableParts &parts);\par
7433   \par
7434 {\cf17 protected}:\par
7435   {\cf20 // property members:}\par
7436   QBrush mBackgroundBrush;\par
7437   QPixmap mBackgroundPixmap;\par
7438   QPixmap mScaledBackgroundPixmap;\par
7439   {\cf18 bool} mBackgroundScaled;\par
7440   Qt::AspectRatioMode mBackgroundScaledMode;\par
7441   QCPLayoutInset *mInsetLayout;\par
7442   {\cf18 bool} mRangeDrag;\par
7443   {\cf18 bool} mRangeZoom;\par
7444   {\cf18 double} mRangeZoomFactor;\par
7445   \par
7446   {\cf20 // axis base:}\par
7447   {\cf18 double} mAngle, mAngleRad;\par
7448   SelectableParts mSelectableParts, mSelectedParts;\par
7449   QPen mBasePen, mSelectedBasePen;\par
7450   {\cf20 // axis label:}\par
7451   {\cf18 int} mLabelPadding;\par
7452   QString mLabel;\par
7453   QFont mLabelFont, mSelectedLabelFont;\par
7454   QColor mLabelColor, mSelectedLabelColor;\par
7455   {\cf20 // tick labels:}\par
7456   {\cf20 //int mTickLabelPadding; in label painter}\par
7457   {\cf18 bool} mTickLabels;\par
7458   {\cf20 //double mTickLabelRotation; in label painter}\par
7459   QFont mTickLabelFont, mSelectedTickLabelFont;\par
7460   QColor mTickLabelColor, mSelectedTickLabelColor;\par
7461   {\cf18 int} mNumberPrecision;\par
7462   QLatin1Char mNumberFormatChar;\par
7463   {\cf18 bool} mNumberBeautifulPowers;\par
7464   {\cf18 bool} mNumberMultiplyCross;\par
7465   {\cf20 // ticks and subticks:}\par
7466   {\cf18 bool} mTicks;\par
7467   {\cf18 bool} mSubTicks;\par
7468   {\cf18 int} mTickLengthIn, mTickLengthOut, mSubTickLengthIn, mSubTickLengthOut;\par
7469   QPen mTickPen, mSelectedTickPen;\par
7470   QPen mSubTickPen, mSelectedSubTickPen;\par
7471   {\cf20 // scale and range:}\par
7472   QCPRange mRange;\par
7473   {\cf18 bool} mRangeReversed;\par
7474   \par
7475   {\cf20 // non-property members:}\par
7476   QPointF mCenter;\par
7477   {\cf18 double} mRadius;\par
7478   QList<QCPPolarAxisRadial*> mRadialAxes;\par
7479   QCPPolarGrid *mGrid;\par
7480   QList<QCPPolarGraph*> mGraphs;\par
7481   QSharedPointer<QCPAxisTicker> mTicker;\par
7482   QVector<double> mTickVector;\par
7483   QVector<QString> mTickVectorLabels;\par
7484   QVector<QPointF> mTickVectorCosSin;\par
7485   QVector<double> mSubTickVector;\par
7486   QVector<QPointF> mSubTickVectorCosSin;\par
7487   {\cf18 bool} mDragging;\par
7488   QCPRange mDragAngularStart;\par
7489   QList<QCPRange> mDragRadialStart;\par
7490   QCP::AntialiasedElements mAADragBackup, mNotAADragBackup;\par
7491   QCPLabelPainterPrivate mLabelPainter;\par
7492   \par
7493   {\cf20 // reimplemented virtual methods:}\par
7494   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
7495   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
7496   {\cf17 virtual} QCP::Interaction selectionCategory() const Q_DECL_OVERRIDE;\par
7497   {\cf20 // events:}\par
7498   virtual {\cf18 void} mousePressEvent(QMouseEvent *event, const QVariant &details) Q_DECL_OVERRIDE;\par
7499   virtual {\cf18 void} mouseMoveEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
7500   virtual {\cf18 void} mouseReleaseEvent(QMouseEvent *event, const QPointF &startPos) Q_DECL_OVERRIDE;\par
7501   virtual {\cf18 void} wheelEvent(QWheelEvent *event) Q_DECL_OVERRIDE;\par
7502   \par
7503   {\cf20 // non-virtual methods:}\par
7504   {\cf18 bool} registerPolarGraph(QCPPolarGraph *graph);\par
7505   {\cf18 void} drawBackground(QCPPainter *painter, const QPointF &center, {\cf18 double} radius);\par
7506   {\cf18 void} setupTickVectors();\par
7507   QPen getBasePen() const;\par
7508   QPen getTickPen() const;\par
7509   QPen getSubTickPen() const;\par
7510   QFont getTickLabelFont() const;\par
7511   QFont getLabelFont() const;\par
7512   QColor getTickLabelColor() const;\par
7513   QColor getLabelColor() const;\par
7514   \par
7515 private:\par
7516   Q_DISABLE_COPY(QCPPolarAxisAngular)\par
7517   \par
7518   friend class QCustomPlot;\par
7519   friend class QCPPolarGrid;\par
7520   friend class QCPPolarGraph;\par
7521 \};\par
7522 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPolarAxisAngular::SelectableParts)\par
7523 Q_DECLARE_METATYPE(QCPPolarAxisAngular::SelectablePart)\par
7524 \par
7525 {\cf20 /* end of 'src/polar/layoutelement-angularaxis.h' */}\par
7526 \par
7527 \par
7528 {\cf20 /* including file 'src/polar/polargrid.h'  */}\par
7529 {\cf20 /* modified 2022-11-06T12:45:56, size 4506 */}\par
7530 \par
7531 class QCP_LIB_DECL QCPPolarGrid :public QCPLayerable\par
7532 \{\par
7533   Q_OBJECT\par
7535   \par
7537 {\cf17 public}:\par
7541   {\cf17 enum} GridType \{ gtAngular = 0x01 \par
7542                   ,gtRadial = 0x02 \par
7543                   ,gtAll    = 0xFF \par
7544                   ,gtNone   = 0x00 \par
7545                 \};\par
7546   Q_ENUMS(GridType)\par
7547   Q_FLAGS(GridTypes)\par
7548   Q_DECLARE_FLAGS(GridTypes, GridType)\par
7549   \par
7550   explicit QCPPolarGrid(QCPPolarAxisAngular *parentAxis);\par
7551   \par
7552   {\cf20 // getters:}\par
7553   QCPPolarAxisRadial *radialAxis(){\cf17  const }\{ {\cf19 return} mRadialAxis.data(); \}\par
7554   GridTypes type(){\cf17  const }\{ {\cf19 return} mType; \}\par
7555   GridTypes subGridType(){\cf17  const }\{ {\cf19 return} mSubGridType; \}\par
7556   {\cf18 bool} antialiasedSubGrid(){\cf17  const }\{ {\cf19 return} mAntialiasedSubGrid; \}\par
7557   {\cf18 bool} antialiasedZeroLine(){\cf17  const }\{ {\cf19 return} mAntialiasedZeroLine; \}\par
7558   QPen angularPen(){\cf17  const }\{ {\cf19 return} mAngularPen; \}\par
7559   QPen angularSubGridPen(){\cf17  const }\{ {\cf19 return} mAngularSubGridPen; \}\par
7560   QPen radialPen(){\cf17  const }\{ {\cf19 return} mRadialPen; \}\par
7561   QPen radialSubGridPen(){\cf17  const }\{ {\cf19 return} mRadialSubGridPen; \}\par
7562   QPen radialZeroLinePen(){\cf17  const }\{ {\cf19 return} mRadialZeroLinePen; \}\par
7563   \par
7564   {\cf20 // setters:}\par
7565   {\cf18 void} setRadialAxis(QCPPolarAxisRadial *axis);\par
7566   {\cf18 void} setType(GridTypes type);\par
7567   {\cf18 void} setSubGridType(GridTypes type);\par
7568   {\cf18 void} setAntialiasedSubGrid({\cf18 bool} enabled);\par
7569   {\cf18 void} setAntialiasedZeroLine({\cf18 bool} enabled);\par
7570   {\cf18 void} setAngularPen({\cf17 const} QPen &pen);\par
7571   {\cf18 void} setAngularSubGridPen({\cf17 const} QPen &pen);\par
7572   {\cf18 void} setRadialPen({\cf17 const} QPen &pen);\par
7573   {\cf18 void} setRadialSubGridPen({\cf17 const} QPen &pen);\par
7574   {\cf18 void} setRadialZeroLinePen({\cf17 const} QPen &pen);\par
7575   \par
7576 {\cf17 protected}:\par
7577   {\cf20 // property members:}\par
7578   GridTypes mType;\par
7579   GridTypes mSubGridType;\par
7580   {\cf18 bool} mAntialiasedSubGrid, mAntialiasedZeroLine;\par
7581   QPen mAngularPen, mAngularSubGridPen;\par
7582   QPen mRadialPen, mRadialSubGridPen, mRadialZeroLinePen;\par
7583   \par
7584   {\cf20 // non-property members:}\par
7585   QCPPolarAxisAngular *mParentAxis;\par
7586   QPointer<QCPPolarAxisRadial> mRadialAxis;\par
7587   \par
7588   {\cf20 // reimplemented virtual methods:}\par
7589   {\cf17 virtual} {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const} Q_DECL_OVERRIDE;\par
7590   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
7591   \par
7592   {\cf20 // non-virtual methods:}\par
7593   {\cf18 void} drawRadialGrid(QCPPainter *painter, {\cf17 const} QPointF &center, {\cf17 const} QVector<double> &coords, {\cf17 const} QPen &pen, {\cf17 const} QPen &zeroPen=Qt::NoPen);\par
7594   {\cf18 void} drawAngularGrid(QCPPainter *painter, {\cf17 const} QPointF &center, {\cf18 double} radius, {\cf17 const} QVector<QPointF> &ticksCosSin, {\cf17 const} QPen &pen);\par
7595   \par
7596 {\cf17 private}:\par
7597   Q_DISABLE_COPY(QCPPolarGrid)\par
7598   \par
7599 \};\par
7600 \par
7601 Q_DECLARE_OPERATORS_FOR_FLAGS(QCPPolarGrid::GridTypes)\par
7602 Q_DECLARE_METATYPE(QCPPolarGrid::GridType)\par
7603 \par
7604 \par
7605 {\cf20 /* end of 'src/polar/polargrid.h' */}\par
7606 \par
7607 \par
7608 {\cf20 /* including file 'src/polar/polargraph.h' */}\par
7609 {\cf20 /* modified 2022-11-06T12:45:56, size 9606 */}\par
7610 \par
7611 \par
7612 class QCP_LIB_DECL QCPPolarLegendItem : public QCPAbstractLegendItem\par
7613 \{\par
7614   Q_OBJECT\par
7615 {\cf17 public}:\par
7616   QCPPolarLegendItem(QCPLegend *parent, QCPPolarGraph *graph);\par
7617   \par
7618   {\cf20 // getters:}\par
7619   QCPPolarGraph *polarGraph() \{ {\cf19 return} mPolarGraph; \}\par
7620   \par
7621 {\cf17 protected}:\par
7622   {\cf20 // property members:}\par
7623   QCPPolarGraph *mPolarGraph;\par
7624   \par
7625   {\cf20 // reimplemented virtual methods:}\par
7626   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter) Q_DECL_OVERRIDE;\par
7627   {\cf17 virtual} QSize minimumOuterSizeHint() const Q_DECL_OVERRIDE;\par
7628   \par
7629   {\cf20 // non-virtual methods:}\par
7630   QPen getIconBorderPen() const;\par
7631   QColor getTextColor() const;\par
7632   QFont getFont() const;\par
7633 \};\par
7634 \par
7635 \par
7636 class QCP_LIB_DECL QCPPolarGraph : public QCPLayerable\par
7637 \{\par
7638   Q_OBJECT\par
7640   \par
7642 {\cf17 public}:\par
7648   {\cf17 enum} LineStyle \{ lsNone        \par
7650                    ,lsLine       \par
7651                  \};\par
7652   Q_ENUMS(LineStyle)\par
7653   \par
7654   QCPPolarGraph(QCPPolarAxisAngular *keyAxis, QCPPolarAxisRadial *valueAxis);\par
7655   virtual ~QCPPolarGraph();\par
7656   \par
7657   {\cf20 // getters:}\par
7658   QString name(){\cf17  const }\{ {\cf19 return} mName; \}\par
7659   {\cf18 bool} antialiasedFill(){\cf17  const }\{ {\cf19 return} mAntialiasedFill; \}\par
7660   {\cf18 bool} antialiasedScatters(){\cf17  const }\{ {\cf19 return} mAntialiasedScatters; \}\par
7661   QPen pen(){\cf17  const }\{ {\cf19 return} mPen; \}\par
7662   QBrush brush(){\cf17  const }\{ {\cf19 return} mBrush; \}\par
7663   {\cf18 bool} periodic(){\cf17  const }\{ {\cf19 return} mPeriodic; \}\par
7664   QCPPolarAxisAngular *keyAxis(){\cf17  const }\{ {\cf19 return} mKeyAxis.data(); \}\par
7665   QCPPolarAxisRadial *valueAxis(){\cf17  const }\{ {\cf19 return} mValueAxis.data(); \}\par
7666   QCP::SelectionType selectable(){\cf17  const }\{ {\cf19 return} mSelectable; \}\par
7667   {\cf18 bool} selected(){\cf17  const }\{ {\cf19 return} !mSelection.isEmpty(); \}\par
7668   QCPDataSelection selection(){\cf17  const }\{ {\cf19 return} mSelection; \}\par
7669   {\cf20 //QCPSelectionDecorator *selectionDecorator() const \{ return mSelectionDecorator; \}}\par
7670   QSharedPointer<QCPGraphDataContainer> data(){\cf17  const }\{ {\cf19 return} mDataContainer; \}\par
7671   LineStyle lineStyle(){\cf17  const }\{ {\cf19 return} mLineStyle; \}\par
7672   QCPScatterStyle scatterStyle(){\cf17  const }\{ {\cf19 return} mScatterStyle; \}\par
7673   \par
7674   {\cf20 // setters:}\par
7675   {\cf18 void} setName({\cf17 const} QString &name);\par
7676   {\cf18 void} setAntialiasedFill({\cf18 bool} enabled);\par
7677   {\cf18 void} setAntialiasedScatters({\cf18 bool} enabled);\par
7678   {\cf18 void} setPen({\cf17 const} QPen &pen);\par
7679   {\cf18 void} setBrush({\cf17 const} QBrush &brush);\par
7680   {\cf18 void} setPeriodic({\cf18 bool} enabled);\par
7681   {\cf18 void} setKeyAxis(QCPPolarAxisAngular *axis);\par
7682   {\cf18 void} setValueAxis(QCPPolarAxisRadial *axis);\par
7683   Q_SLOT {\cf18 void} setSelectable(QCP::SelectionType selectable);\par
7684   Q_SLOT {\cf18 void} setSelection(QCPDataSelection selection);\par
7685   {\cf20 //void setSelectionDecorator(QCPSelectionDecorator *decorator);}\par
7686   {\cf18 void} setData(QSharedPointer<QCPGraphDataContainer> data);\par
7687   {\cf18 void} setData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
7688   {\cf18 void} setLineStyle(LineStyle ls);\par
7689   {\cf18 void} setScatterStyle({\cf17 const} QCPScatterStyle &style);\par
7690 \par
7691   {\cf20 // non-property methods:}\par
7692   {\cf18 void} addData({\cf17 const} QVector<double> &keys, {\cf17 const} QVector<double> &values, {\cf18 bool} alreadySorted={\cf17 false});\par
7693   {\cf18 void} addData({\cf18 double} key, {\cf18 double} value);\par
7694   {\cf18 void} coordsToPixels({\cf18 double} key, {\cf18 double} value, {\cf18 double} &x, {\cf18 double} &y) {\cf17 const};\par
7695   {\cf17 const} QPointF coordsToPixels({\cf18 double} key, {\cf18 double} value) {\cf17 const};\par
7696   {\cf18 void} pixelsToCoords({\cf18 double} x, {\cf18 double} y, {\cf18 double} &key, {\cf18 double} &value) {\cf17 const};\par
7697   {\cf18 void} pixelsToCoords({\cf17 const} QPointF &pixelPos, {\cf18 double} &key, {\cf18 double} &value) {\cf17 const};\par
7698   {\cf18 void} rescaleAxes({\cf18 bool} onlyEnlarge={\cf17 false}) {\cf17 const};\par
7699   {\cf18 void} rescaleKeyAxis({\cf18 bool} onlyEnlarge={\cf17 false}) {\cf17 const};\par
7700   {\cf18 void} rescaleValueAxis({\cf18 bool} onlyEnlarge={\cf17 false}, {\cf18 bool} inKeyRange={\cf17 false}) {\cf17 const};\par
7701   {\cf18 bool} addToLegend(QCPLegend *legend);\par
7702   {\cf18 bool} addToLegend();\par
7703   {\cf18 bool} removeFromLegend(QCPLegend *legend) {\cf17 const};\par
7704   {\cf18 bool} removeFromLegend() {\cf17 const};\par
7705   \par
7706   {\cf20 // introduced virtual methods:}\par
7707   {\cf17 virtual} {\cf18 double} selectTest({\cf17 const} QPointF &pos, {\cf18 bool} onlySelectable, QVariant *details=0) {\cf17 const}; {\cf20 // actually introduced in QCPLayerable as non-pure, but we want to force reimplementation for plottables}\par
7708   {\cf17 virtual} QCPPlottableInterface1D *interface1D() \{ {\cf19 return} 0; \} {\cf20 // TODO: return this later, when QCPAbstractPolarPlottable is created}\par
7709   {\cf17 virtual} QCPRange getKeyRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth) {\cf17 const};\par
7710   {\cf17 virtual} QCPRange getValueRange({\cf18 bool} &foundRange, QCP::SignDomain inSignDomain=QCP::sdBoth, {\cf17 const} QCPRange &inKeyRange=QCPRange()) {\cf17 const};\par
7711   \par
7712 signals:\par
7713   {\cf18 void} selectionChanged({\cf18 bool} selected);\par
7714   {\cf18 void} selectionChanged({\cf17 const} QCPDataSelection &selection);\par
7715   {\cf18 void} selectableChanged(QCP::SelectionType selectable);\par
7716   \par
7717 {\cf17 protected}:\par
7718   {\cf20 // property members:}\par
7719   QSharedPointer<QCPGraphDataContainer> mDataContainer;\par
7720   LineStyle mLineStyle;\par
7721   QCPScatterStyle mScatterStyle;\par
7722   QString mName;\par
7723   {\cf18 bool} mAntialiasedFill, mAntialiasedScatters;\par
7724   QPen mPen;\par
7725   QBrush mBrush;\par
7726   {\cf18 bool} mPeriodic;\par
7727   QPointer<QCPPolarAxisAngular> mKeyAxis;\par
7728   QPointer<QCPPolarAxisRadial> mValueAxis;\par
7729   QCP::SelectionType mSelectable;\par
7730   QCPDataSelection mSelection;\par
7731   {\cf20 //QCPSelectionDecorator *mSelectionDecorator;}\par
7732   \par
7733   {\cf20 // introduced virtual methods (later reimplemented TODO from QCPAbstractPolarPlottable):}\par
7734   {\cf17 virtual} QRect clipRect() {\cf17 const};\par
7735   {\cf17 virtual} {\cf18 void} draw(QCPPainter *painter);\par
7736   {\cf17 virtual} QCP::Interaction selectionCategory() {\cf17 const};\par
7737   {\cf18 void} applyDefaultAntialiasingHint(QCPPainter *painter) {\cf17 const};\par
7738   {\cf20 // events:}\par
7739   {\cf17 virtual} {\cf18 void} selectEvent(QMouseEvent *event, {\cf18 bool} additive, {\cf17 const} QVariant &details, {\cf18 bool} *selectionStateChanged);\par
7740   {\cf17 virtual} {\cf18 void} deselectEvent({\cf18 bool} *selectionStateChanged);\par
7741   {\cf20 // virtual drawing helpers:}\par
7742   {\cf17 virtual} {\cf18 void} drawLinePlot(QCPPainter *painter, {\cf17 const} QVector<QPointF> &lines) {\cf17 const};\par
7743   {\cf17 virtual} {\cf18 void} drawFill(QCPPainter *painter, QVector<QPointF> *lines) {\cf17 const};\par
7744   {\cf17 virtual} {\cf18 void} drawScatterPlot(QCPPainter *painter, {\cf17 const} QVector<QPointF> &scatters, {\cf17 const} QCPScatterStyle &style) {\cf17 const};\par
7745   \par
7746   {\cf20 // introduced virtual methods:}\par
7747   {\cf17 virtual} {\cf18 void} drawLegendIcon(QCPPainter *painter, {\cf17 const} QRectF &rect) {\cf17 const};\par
7748   \par
7749   {\cf20 // non-virtual methods:}\par
7750   {\cf18 void} applyFillAntialiasingHint(QCPPainter *painter) {\cf17 const};\par
7751   {\cf18 void} applyScattersAntialiasingHint(QCPPainter *painter) {\cf17 const};\par
7752   {\cf18 double} pointDistance({\cf17 const} QPointF &pixelPoint, QCPGraphDataContainer::const_iterator &closestData) {\cf17 const};\par
7753   {\cf20 // drawing helpers:}\par
7754   {\cf17 virtual} {\cf18 int} dataCount() {\cf17 const};\par
7755   {\cf18 void} getDataSegments(QList<QCPDataRange> &selectedSegments, QList<QCPDataRange> &unselectedSegments) {\cf17 const};\par
7756   {\cf18 void} drawPolyline(QCPPainter *painter, {\cf17 const} QVector<QPointF> &lineData) {\cf17 const};\par
7757   {\cf18 void} getVisibleDataBounds(QCPGraphDataContainer::const_iterator &begin, QCPGraphDataContainer::const_iterator &end, {\cf17 const} QCPDataRange &rangeRestriction) {\cf17 const};\par
7758   {\cf18 void} getLines(QVector<QPointF> *lines, {\cf17 const} QCPDataRange &dataRange) {\cf17 const};\par
7759   {\cf18 void} getScatters(QVector<QPointF> *scatters, {\cf17 const} QCPDataRange &dataRange) {\cf17 const};\par
7760   {\cf18 void} getOptimizedLineData(QVector<QCPGraphData> *lineData, {\cf17 const} QCPGraphDataContainer::const_iterator &begin, {\cf17 const} QCPGraphDataContainer::const_iterator &end) {\cf17 const};\par
7761   {\cf18 void} getOptimizedScatterData(QVector<QCPGraphData> *scatterData, QCPGraphDataContainer::const_iterator begin, QCPGraphDataContainer::const_iterator end) {\cf17 const};\par
7762   QVector<QPointF> dataToLines({\cf17 const} QVector<QCPGraphData> &data) {\cf17 const};\par
7763 \par
7764 {\cf17 private}:\par
7765   Q_DISABLE_COPY(QCPPolarGraph)\par
7766   \par
7767   friend class QCPPolarLegendItem;\par
7768 \};\par
7769 \par
7770 {\cf20 /* end of 'src/polar/polargraph.h' */}\par
7771 \par
7772 \par
7773 {\cf21 #endif }{\cf20 // QCUSTOMPLOT_H}\par
7774 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
